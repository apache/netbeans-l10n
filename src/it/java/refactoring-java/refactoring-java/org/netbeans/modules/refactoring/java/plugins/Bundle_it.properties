# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

DSC_ElNotAvail=L'elemento originale in corso di rifattorizzazione non \u00e8 disponibile. \u00c8 stato eliminato o modificato in modo significativo. Impossibile raccogliere gli utilizzi.
DSC_ElementNotResolved=Impossibile rifattorizzare elementi non risolti
ERR_ProjectNotOpened=Impossibile riorganizzare {0} che \u00e8 definito fuori da un progetto aperto.

# --- SAFE DELETE REFACTORING ------------------------------------------------------
ERR_SafeDel=C''\u00e8 stato un errore durante l''eliminazione di <b>{0}</b>
LBL_ShowUsages=Mo&stra dove \u00e8 usato...
ERR_ReferencesFound=References to selected elements were found. Rimuovi tutti i riferimenti a questi elementi al fine di eliminare in modo sicuro la classe.
ERR_SafeDel_FromReference=Eliminazione sicura non pu\u00f2 essere invocato da riferimenti di classi/metodi
ERR_SafeDel_InvalidType=Eliminazione sicura pu\u00f2 essere invocato solo su un metodo, campo o classe
ERR_OverridesAbstractMethod=Il metodo selezionato non pu\u00f2 essere eliminato in modo sicuro poich\u00e9 implementa il metodo astratto {0}. 

# --- EXTRACT INTERFACE REFACTORING ------------------------------------------------
TXT_ExtractInterface_CreateIfc=Crea interfaccia <b>{0}</b>.
TXT_ExtractInterface_Method=Crea la dichiarazione del metodo <b>{0}</b> nella nuova interfaccia.
TXT_ExtractInterface_MoveMethod=Muovi il metodo <b>{0}</b> nella nuova interfaccia.
TXT_ExtractInterface_Field=Muovi il campo <b>{0}</b> nella nuova interfaccia.
TXT_ExtractInterface_Class=Muovi la classe interna <b>{0}</b> nella nuova interfaccia.
TXT_ExtractInterface_Implements=Muovi <b>{0}</b> nella clausola extends della nuova interfaccia.
TXT_ExtractInterface_AddImplements=Aggiungi <b>{0}</b> alla clausola implements/extends.
ERR_ElementNotAvailable=Impossibile risolvere l'elemento.
ERR_ExtractInterface_MembersNotAvailable=Nulla da estrarre.
ERR_ExtractInterface_WrongModifiers=Il metodo {0} deve essere pubblico e non statico.
ERR_ExtractInterface_UnknownMember=Il metodo {0} non pu\u00f2 essere estratto.

# --- EXTRACT SUPER CLASS REFACTORING ------------------------------------------------
ERR_ExtractSC_MustBeClass=Il tipo selezionato deve essere una classe (impossibile effettuare quest'operazione su un tipo interfaccia, enumerazione o annotazione).
# Illegal member (0 = member name)
ERR_ExtractSC_IllegalMember=Il membro "{0}" non pu\u00f2 essere estratto un una superclasse. Non appartiene al tipo di origine.
ERR_ExtractSuperClass_MembersNotAvailable=Nulla da estrarre.
ERR_ExtractSuperClass_UnknownMember=Il membro {0} non pu\u00f2 essere estratto.
TXT_ExtractSC_CreateSC=Crea classe <b>{0}</b>.
TXT_ExtractSC_Method=Crea la dichiarazione del meotdo <b>{0}</b> nella nuova superclasse.
TXT_ExtractSC_Member=Muovi <b>{0}</b> nella nuova superclasse.
TXT_ExtractSC_AddExtends=Imposta <b>{0}</b> alla clausola extends.

# --- PULL UP REFACTORING ------------------------------------------------------
# *** Pre-check ***
# No supertype
ERR_PullUp_NoSuperTypes=Impossibile tirare su alcun membro. Il tipo selezionato non ha supertipi nei progetti correntemente aperti.
# No member
ERR_PullUp_NoMembers=l tipo selezionato ed i suoi supertipi non hanno membri che potrebbero essere tirati su.
# *** Fast parameters check
# No selected member
ERR_PullUp_NoMembersSelected=Nessun membro \u00e8 selezionato per essere tirato su.
# No target type selected
ERR_PullUp_NoTargetType=Nessun supertipo \u00e8 selezionato.
# *** Parameters check
# Illegal target type
ERR_PullUp_IllegalTargetType=Il tipo di destinazione non \u00e8 un supertipo del tipo di origine, o il codice sorgente per il tipo di destinazione non \u00e8 diposnibile.
# Illegal member (0 = member name)
ERR_PullUp_IllegalMember=Il membro "{0}" non pu\u00f2 essere tirato su. Non appartiene al tipo sorgente o a uno dei supertipi del tipo sorgente che sono sottotipi del tipo di destinazione.
# Member already exists in the target type (0 = member name)
ERR_PullUp_MemberAlreadyExists=Il membro "{0}" esiste gi\u00e0 nel tipo di destinazione.
# *** Refactoring element descriptions
# Add abstract method to the target type (0 = method name)
ERR_CannotPullupDuplicateMembers=Impossibile spingere su due membri con la stessa firma.
ERR_PullupNonPublicToInterface=Il membro "{0}" sta venendo mosso in un interfaccia, ma non \u00e8 pubblico.

TXT_PullUp_AddMethod=Aggiungi metodo astratto\: <b>{0}</b>
# Move member to the target type (0 = member name)
TXT_PullUp_Member=Muovi <b>{0}</b> al tipo di destinazione.

# --- PUSH DOWN REFACTORING ------------------------------------------------------
TXT_PushDown_Member=Copia <b>{0}</b> nel tipo <b>{1}</b>.
TXT_PushDown_Remove=Rimuovi l''elemento <b>{0}</b>.
TXT_PushDown_Abstract=Rendi astratto il metodo <b>{0}</b>.
TXT_PushDown_RelaxAccessModifier=Cambia il modificatore da <b>{0}</b> a <b>{1}</b>.
LBL_PushDown_private=privato
LBL_PushDown_package_private=package privato
LBL_PushDown_protected=protetto
ERR_PushDown_InvalidSource=Impossibile risolvere la sorgente selezionata: "{0}" -> "{1}".
ERR_PushDOwn_NoSubtype=Impossibile spingere gi\u00f9 alcun membro. Il tipo selezionato non ha sottotipi nei progetti attualmente aperti.
ERR_PushDown_NoMembers=Il tipo selezionato non ha membri che possono essese spinti gi\u00f9.
ERR_PushDown_NoMembersSelected=Nessun membro \u00e8 selezionato per essere spinto gi\u00f9.
ERR_PushDown_AlreadyExists={0} esiste gi\u00e0 in {1}.

# --- INNER TO OUTER REFACTORING ------------------------------------------------
ERR_InnerToOuter_MustBeInnerClass=Il tipo selezionato deve essere un tipo interno (impossibile effettuare quest'operazione su un tipo top-level).
ERR_InnerToOuter_FieldNameClash=Esiste gi\u00e0 un campo chiamato <b>{0}</b> in questa classe.
ERR_InnerToOuter_ClassNameClash=Esiste gi\u00e0 una classe interna chiamata <b>{0}</b> nella classe di destinazione.
ERR_InnerToOuter_OuterUsed=La classe che sta venendo mossa al livello esterno usa membri della sua classe esterna. Dovresti permettere che la riorganizzazione crei una variabile d'istanza contenente il riferimento alla classe esterna originale.
ERR_InnerToOuter_InnerHidden=Uno dei supertipi della classe di destinazione definisce gi\u00e0 una classe interna chiamata <b>{0}</b>.
TXT_InnerToOuter_MoveToOuter=Rendi questa classe una classe interna di <b>{0}</b>.
TXT_InnerToOuter_MoveToTop=Rendi questa classe una classe top-level.
TXT_InnerToOuter_Rename=Rinomina questa classe in <b>{0}</b>.
TXT_InnerToOuter_AddReference=Aggiungi un nuovo campo d''istanza chiamato <b>{0}</b> che punta alla classe esterna originale, aggiorna il costruttore della classe.
TXT_InnerToOuter_AddConstructor=Aggiungi un costruttore dal momento che il costruttore predefinito non sar\u00e0 disponibile nella superclasse.
TXT_InnerToOuter_AddConstructorInvocation=Aggiungi un'invocazione al costruttore esplicita dal momento che il costruttore predefinito non sar\u00e0 disponibile nella superclasse.
TXT_InnerToOuter_RelaxAccessRights=Cambia da privato a package private
ERR_InnerToOuter_UseDeclareField=Impossibile riorganizzare "{0}". Usa opzione "Dichiara campo".
ERR_InnerToOuter_Anonymous=Impossibile riorganizzare classi anonime.
WRN_InnerToOuterRefToPrivate=Inner class is using private feature {0} which will not be accessible after refactoring

# --- USE SUPERTYPE REFACTORING ------------------------------------------------------
TXT_UseSuperType=Usa il supertipo di <b>{0}</b> dove possibile
TXT_UseSuperTypeVariable=Cambia il tipo di <b>{0}</b> in <b>{1}</b>
TXT_UseSuperTypeReturnType=Cambia il tipo di ritorno di <b>{0}</b> in <b>{1}</b>
TXT_UseSuperTypeLocalVar=Cambia il tipo della/e variabile/i globale/i <b>{0}</b> in <b>{1}</b>
TXT_UseSuperTypeProblem=Il tipo {0} non \u00e8 visibile all''interno del corpo di {1}
ERR_UseSuperType_InvalidElement=Usa supertipo pu\u00f2 essere invocato solo su tipi validi
ERR_UseSuperTypeNoSuperType=Nessun supertipo selezionato.

# --- COPY CLASS ---------------------------------------------------------------
TXT_CopyClassToPackage=Crea una nuova classe {0} nel pacchetto {1} come copia di {2}

# rename error messages
ERR_RenameWrongType=Impossibile rinominare questo tipo di oggetto. Deve essere selezionato un pacchetto, metodo, campo o classe Java.
ERR_Overrides=Questo metodo prevale su oppure implementa metodi in superclassi/interfacce. Saranno rinominati anch'essi.
ERR_Overrides_Fatal=Questo metodo prevale su oppure implementa metodi in superclassi/interfacce, pertanto il suo nome non pu\u00f2 essere modificato.
ERR_Overrides_tree=Questo metodo prevale su oppure implementa un metodo in {0}. Questo metodo \u00e8 anche subalterno o implementato in {1}. Se vuoi davvero effettuare questa operazione, invocala sul metodo in {2}.
ERR_IsOverridden=Ci sono metodi in sottoclassi/implementazioni di {0} che prevalgono su o implementano questo metodo. Saranno rinominati anch'essi.
ERR_WillBeOverridden=Dopo la rinomina, il metodo originale "{0}" in {1} sar\u00e0 subalterno al metodo "{2}" in {3}.
ERR_WillBeOverridden_access=Dopo la rinomina, il metodo originale "{0}" in {1} sar\u00e0 subalterno al metodo "{2}" in {3} con privilegi di accesso pi\u00f9 deboli.
ERR_WillBeOverridden_static=Dopo la rinomina, il metodo originale {0} "{1}" in {2} sar\u00e0 coperto dal metodo {3} "{4}" in {5}.
ERR_WillBeOverridden_final=Dopo la rinomina, il metodo finale originale "{0}" in {1} sar\u00e0 coperto dal metodo "{2}" in {3}.
ERR_WillOverride=Dopo la rinomina, il metodo "{0}" in {1} coprir\u00e0 il metodo originale "{2}" in {3}.
ERR_WillOverride_access=Dopo la rinomina, il metodo {0} in {1} coprir\u00e0 il metodo originale "{2}" in {3} con privilegi di accesso pi\u00f9 forti.
ERR_WillOverride_static=Dopo la rinomina, il metodo {0} "{1}" in {2} coprir\u00e0 il metodo originale {3} "{4}" in {5}.
ERR_WillOverride_final=Dopo la rinomina, il metodo "{0}" in {1} coprir\u00e0 il metodo finale originale "{2}" in {3}.
ERR_NameNotChanged=Il nome non \u00e8 stato modificato. Non sar\u00e0 effettuata alcuna modifica.
ERR_InvalidIdentifier="{0}" non \u00e8 un identificatore Java valido.
ERR_InvalidPackage="{0}" non \u00e8 un identificativo di pacchetto valido.
ERR_PackageExists=Il pacchetto "{0}" esiste gi\u00e0.
ERR_InnerClassClash=Impossibile rinominare. La classe interna {0} esiste gi\u00e0 nella classe {1}.
ERR_ClassClash=Impossibile rinominare. La classe {0} esiste gi\u00e0 nella cartella {1}.
ERR_ClassPackageClash=Impossibile rinominare. C''\u00e8 gi\u00e0 una cartella {0} in {1}
ERR_MethodClash=Impossibile rinominare. Il metodo {0} con stessa firma esiste gi\u00e0 nella classe {1}.
ERR_FieldClash=Impossibile rinominare. Il campo {0} esiste gi\u00e0 nella classe {1}.
ERR_LocVariableClash=Impossibile rinominare. {0} gi\u00e0 usato.
ERR_Hides=Il campo da rinominare nasconde un campo in {0}.
ERR_WillHide=Il nuovo campo nasconder\u00e0 un campo in {0}.
ERR_NameNotSet=Il nome non \u00e8 stato specificato.
ERR_CannotMoveIntoSamePackage=Impossibile spostare la/e classe/i nello stesso pacchetto.
ERR_CannotRenameFile=Impossibile rinominare l'elemento nel file di libreria: "{0}".
ERR_ResourceUnavailable=Impossibile rinominare il metodo "{0}". File sorgente "{1}" non disponibile.
ERR_RenameNative=Tentativo di rinominare il metodo nativo "{0}". Rinominare un metodo nativo pu\u00f2 causare UnsatisfiedLinkError durante l'esecuzione.
ERR_CannotRefactorThis=Impossibile riorganizzare "{0}".

#Rename package
TXT_RenamePackage=Rinomina file 

#where used error messages
ERR_WhereUsedWrongType=Impossibile cercare gli utilizzi di questo tipo di oggetto. Deve essere selezionato un elemento Java.

# move class/package error messages
ERR_TargetFolderNotSet=Non \u00e8 stato selezionato un package di destinazione.
ERR_TargetFolderNotJavaPackage=Una cartella di destinazione non \u00e8 il pacchetto java.
ERR_SourceWithoutClass=Il sorgente selezionato non contiene alcuna classe.
ERR_SourceWithMoreClasses=Non puoi spostare una classe da un file sorgente che contenga pi\u00f9 classi top-level.
ERR_AccessesPackagePrivateFeature=La classe "{0}" all''interno dello stesso pacchetto sta usando la caratteristica "{1}" della classe che vuoi spostare ("{2}").
ERR_AccessesPackagePrivateClass=La classe "{0}" all'interno dello stesso pacchetto sta usando {1} classe che vuoi spostare ("{2}").
ERR_AccessesPackagePrivateConstructor=La classe "{0}" all'interno dello stesso pacchetto sta usando il costruttore {1} dichiarato nella classe che vuoi spostare ("{2}").
ERR_AccessesPackagePrivateFeature2=La classe che vuoi spostare ("{0}") sta usando la caratteristica "{1}" della classe "{2}" all''interno dello stesso pacchetto.
ERR_AccessesPackagePrivateClass2=La classe che vuoi spostare ("{0}") sta usando {1} classe ("{2}") all'interno dello stesso pacchetto.
ERR_AccessesPackagePrivateConstructor2=La classe che vuoi spostare ("{0}") sta usando {1} costruttore dichiarato nella classe ("{2}") all'interno dello stesso pacchetto.
ERR_PackageIsReadOnly=Il pacchetto "{0}" \u00e8 in sola lettura.
ERR_ClassToMoveClashes=La classe "{0}" esiste gi\u00e0 nel pacchetto di destinazione.
ERR_ClassToMoveInDefaultPackage=Dopo lo spostamento, non sar\u00e0 possibile importare classi nel pacchetto predefinito originale.
ERR_MovingClassToDefaultPackage=Se la classe viene spostata nel pacchetto predefinito, le classi negli altri pacchetti non potranno importare la classe spostata.
ERR_FileAlreadyExists=Il file {0} esiste gi\u00e0 nel pacchetto {1}.
ERR_PackageMovesToItself=Il pacchetto superiore \u00e8 stato selezionato come destinazione. Non ci sono modifiche da effettuare.
ERR_CannotMovePackageToSubpackage=Un pacchetto non pu\u00f2 essere spostato in uno dei suoi sottopacchetti o su s\u00e8 stesso.
ERR_DefaultPackageCannotBeMoved=Il pacchetto predefinito non pu\u00f2 essere spostato.
ERR_CannotMoveFile=Impossibile spostare il file dalla libreria: "{0}".
ERR_MissingProjectDeps=Ci sono riferimenti ai files mossi nel progetto "{0}", ma il progetto sorgente "{0}" non dipende dal progetto di destinazione "{1}". I progetti non richiedono compliazione.
ERR_ClasspathNotFound=No classpath defined for {0}.

# encapsulate field error messages
ERR_EncapsulateWrongType=Impossibile incapsulare questo tipo di oggetto. Deve essere selezionato un campo.
ERR_EncapsulateNoFields=Nessun campo trovato in {0}.
ERR_EncapsulateInIntf=Impossibile incapsulare un campo di interfaccia.
ERR_EncapsulateMethods=I nomi di getter e setter devono essere nomi di metodo validi.
ERR_EncapsulateMethodsAccess=L'accessibilit\u00e0 dei metodi creati \u00e8 privata ma alcuni campi selezionati sono referenziati da altri sorgenti.
ERR_EncapsulateMethodsDefaultAccess=La riorganizzazione potrebbe rompere il tuo codice poich\u00e9 i metodi creati hanno accessibilit\u00e0 predefinita ma alcuni campi selezionati sono referenziati da altri sorgenti.
ERR_EncapsulateInsideAssignment=Impossibile sostituire {0} in {1} col setter void in {2}.
ERR_EncapsulateInsideConstructor=The accessibility of field {0} is private but it is referenced from constructor of class {1}.
ERR_EncapsulateWrongGetter=Il getter {0} esiste gi\u00e0 ma con tipo di ritorno {1} errato.
ERR_EncapsulateWrongSetter=Il setter {0} esiste gi\u00e0 ma con tipo di ritorno {1} errato.
ERR_EncapsulateNothingSelected=Nulla da incapsulare. Devi selezionare qualche casella di controllo.

# change method signature error messages
ERR_MethodOverrides=Questo metodo sovrascrive o implementa un metodo in superclassi/interfacce.
ERR_MethodIsOverridden=Ci sono metodi in sottoclassi o implementazioni di {0} che sovrascrivono o implementano questo metodo.
ERR_HasVarArg=Non puoi usare la riorganizzazione Cambia parametri metodo su metodi con argomenti variabili.
ERR_newpar=Devi fornire {0} per tutti i nuovi parametri.
ERR_parname=nome parametro
ERR_partype=tipo parametro
ERR_pardefv=valori predefiniti
ERR_existingMethod=Impossibile cambiare la firma. Un metodo {0} con la stessa firma esiste gi\u00e0 nella classe {1}.
ERR_existingConstr=Impossibile cambiare la firma. Un construttore con la stessa firma esiste gi\u00e0 nella classe {0}.
ERR_NoValues=Devi fornire valori per i nuovi parametri.
ERR_DuplicateName=Nome parametro duplicato ({0}).
ERR_NameAlreadyUsed=Il nome "{0}" \u00e8 gi\u00e0 usato come nome di una variabile locale.
ERR_CannotChangeModifiers=Impossibile cambiare i modificatori di un metodo in un'interfaccia.
ERR_StrongAccMod=Hai cambiato il modificatore di accesso in {0}. Il metodo non sar\u00e0 accessibile in alcuni riferimenti. I sorgenti non si compileranno dopo la riorganizzazione!

ERR_ChangeParamsWrongType=Impossibile modificare i parametri di questo oggetto. Deve essere selezionato un metodo o un costruttore.
MSG_NothingToFind=Non hai selezionato nulla da cercare. Seleziona Cerca utilizzi, Cerca metodi che sovrascrivono, o entrambi.
ERR_CannotRefactorLibraryClass=Impossibile riorganizzare la classe di libreria "{0}".
ERR_MethodsInAnnotationsNotSupported=I membri di @interface non possono avere parametri.
ERR_CannnotRefactorLibrary=Impossibile cambiare i parametri di "{0}" che sovrascrive un metodo da una classe di libreria.

ERR_VarargsFinalPosition=Gli argomenti variabili possono essere usati sono in posizione di argomenti finali.
ERR_FindUsagesArrayType=Impossibile effetuare Cerca utilizzi su []

