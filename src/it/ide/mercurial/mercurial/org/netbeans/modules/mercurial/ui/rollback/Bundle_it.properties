# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

##BackoutAction.java
CTL_MenuItem_Backout = &Backout...
##RollbackAction.java
CTL_MenuItem_Rollback = &Rollback
CTL_MenuItem_RollbackRoot = &Rollback - {0}
##StripAction.java
CTL_MenuItem_Strip = &Strip...
##VerifyAction.java
CTL_MenuItem_Verify = &Verifica

MSG_ROLLBACK_PROGRESS = Rollback...
MSG_NO_ROLLBACK = Nothing to rollback, can only rollback after: commit, pull, push (with this repository as destination)
MSG_ROLLBACK_INFO = INFO  Rollback rolls back the last transaction in this repository and can only rollback one level.
MSG_ROLLBACK_TITLE =     Mercurial Rollback
MSG_ROLLBACK_TITLE_SEP = --------------------
MSG_ROLLBACK_INFO_SEP = Rollback in:\n{0}
MSG_ROLLBACK_CANCELED = INFO: Rollback canceled by user
MSG_ROLLBACK_DONE = INFO: End of Mercurial Rollback
MSG_ROLLBACK_CONFIRM = Conferma l'annullamento
MSG_ROLLBACK_CONFIRM_QUERY = Roll back the last commit, push/pull, import or unbundle in this repository.\nUse with care as there is no way to undo a rollback!\n\nDo you still want to perform a Rollback?
MSG_ROLLBACK_CONFIRM_UPDATE = Confirm Rollback Update
MSG_ROLLBACK_CONFIRM_UPDATE_QUERY = Repository Rollback has completed.\nDo a forced update of the working directory?
MSG_ROLLBACK_FORCE_UPDATE = Carrying out a forced update of the working directory {0}
MSG_ROLLBACK_MESSAGE = No Rollback Update
MSG_ROLLBACK_MESSAGE_NOHISTORY = Repository Rollback has completed.\nThe working directory will not be updated as the repository now has no history.

MSG_Fetching_Revisions = Fetching Revisions...
MSG_Refreshing_Strip_Versions = Refreshing Strip Versions

MSG_STRIP_TITLE =     Mercurial Strip
MSG_STRIP_TITLE_SEP = ---------------
MSG_STRIP_INFO_SEP = Stripping revision {0} and descendents in:\n{1}
MSG_NO_REV_STRIP = \nINFO: Unable to Strip this Revision {0}
MSG_LOCAL_CHANGES_STRIP = \nStrip will not work if there are local changes. You can view them using Mercurial -> Status.\nINFO: If you wish to discard local changes, use Mercurial -> Update selecting the Forced Update option and rerun Strip.
MSG_MULTI_HEADS_STRIP = \nINFO: Strip will not work across multiple heads unless the Force multihead option is selected.
MSG_STRIP_RESTORE_INFO = \nINFO: Strip can be undone using the saved backup bundle. On the command line run:  
MSG_STRIP_RESTORE_INFO2 = hg unbundle {0}
MSG_STRIP_PROGRESS = Strip...
MSG_STRIP_DONE = INFO: End of Mercurial Strip

MSG_BACKOUT_TITLE =     Mercurial Backout
MSG_BACKOUT_TITLE_SEP = -----------------
MSG_BACKOUT_INFO_SEP = Backout revision {0} in:\n{1}
MSG_NO_REV_BACKOUT = \nINFO: Unable to Backout this Revision {0}
MSG_BACKOUT_PROGRESS = Backout...
MSG_BACKOUT_DONE = INFO: End of Mercurial Backout
MSG_UNCOMMITTED_CHANGES_BACKOUT = \nBackout will not work if there are uncommitted local changes. You can view them using Mercurial -> Status.\nINFO: If you wish to discard these changes, use Mercurial -> Update selecting the Forced Update option and rerun Backout.
MSG_MERGE_CSET_BACKOUT = \nCannot backout a backout merge changeset.\nINFO: Either run hg backout --parent from the command line or use Mercurial -> Rollback.
MSG_BACKOUT_MERGE_CONFIRM_TITLE = Confirm Merge after Backout
MSG_BACKOUT_MERGE_CONFIRM_QUERY = Backout has completed and Merge is Required.\nMerge the backout changeset now?
MSG_BACKOUT_MERGE_DO = INFO MERGE: Performing Merge with backout changeset

MSG_VERIFY_TITLE =     Mercurial Verify
MSG_VERIFY_TITLE_SEP = ----------------
MSG_VERIFY_INFO = Verifying repository {0}...
MSG_VERIFY_PROGRESS = Verify...
MSG_VERIFY_DONE = INFO: End of Mercurial Verify

CTL_StripForm_Action_Strip=&Strip
ACSD_StripForm_Action_Strip=Strip
ACSN_StripForm_Action_Strip=Strip
CTL_StripForm_Action_Cancel=&Annulla
ACSD_StripForm_Action_Cancel=Annulla
ACSN_StripForm_Action_Cancel=Annulla
CTL_StripDialog=Strip - {0}
ACSD_StripDialog=Strip - {0}

StripPanel.revisionsLabel.text=Choose from &Revisions:
StripPanel.infoLabel.text=Strip selected revision and it's descendants from the repository
StripPanel.infoLabel2.text=(updates the working dir to the first parent of the stripped revision)
StripPanel.doBackupChxBox.text= Save a &backup so stripped revisions can be reapplied
StripPanel.jPanel1.border.title= Opzioni 
StripPanel.doForcedMultiHeadStripChxBox.text=Force multi-head removal if required

BackoutPanel.revisionsLabel.text=Choose from &Revisions:
BackoutPanel.infoLabel.text=Backout selected revision from the repository
BackoutPanel.infoLabel2.text=(creates a backout changeset to back out only this revision)
BackoutPanel.jPanel1.border.title= Opzioni 
BackoutPanel.doMergeChxBox.text=Automerge the backout changeset with tip and commit

MSG_Refreshing_Backout_Versions = Refreshing Backout Versions

CTL_BackoutForm_Action_Backout=&Backout
ACSD_BackoutForm_Action_Backout=Backout
ACSN_BackoutForm_Action_Backout=Backout
CTL_BackoutForm_Action_Cancel=&Annulla
ACSD_BackoutForm_Action_Cancel=Annulla
ACSN_BackoutForm_Action_Cancel=Annulla
CTL_ChoosenRevision= Chosen &Revision:
CTL_BackoutDialog=Backout - {0}
ACSD_BackoutDialog=Backout - {0}
BackoutPanel.commitMsgField.text=Autocommit of backout changeset for
BackoutPanel.commitLabel.text=Co&mmit Msg:
ACSD_doBackupChxBox=Specifies a backup should be done before the strip
ACSD_revisionsComboBox=Specifies the revision to be stripped
ACSD_revisionsComboBoxBackout=Specifies the revision to be backed out
ACSD_commitMsgField=Specifies the commit message to be used for backout changeset

