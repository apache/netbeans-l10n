# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2010 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.


#
# This file contains localized strings used in this package.  The typical
# NetBeans pattern is to use one bundle per-package, called Bundle.properties;
# the openide class NbBundle supports this usage.
#
# Typically, fetch a resource as follows:
# NbBundle.getMessage (MyClass.class, "SOME_Key");
#
# Don't bother caching strings or worse, static references to resource bundles -
# this may seem like its faster, but it wastes memory and slows things down
# in the long run.
#


Add_semicolon=A\u00f1adir coma

Add_cast_to_X=Convertir {0} a {1}

Add_throws_clause_for_X=A\u00f1adir cl\u00e1usula "throws" a {0}

Add_import_for_X=A\u00f1adir "import" a {0}

Change_to_import_X=Change to import {1}{0}
Implement_all_abstract_methods=Implementar todos los m\u00e9todos abstractos

MSG_CreateField=Crear campo {0} en {1}
MSG_CreateMethod=Crear m\u00e9todo {0} en {1}
MSG_CreateLocalVariable=Crear variable local {0}
MSG_CreateParameter=Crear par\u00e1metro {0}


MSG_CreateGetter=Crear m\u00e9todo getter
MSG_CreateSetter=Crear m\u00e9todo setter
MSG_CreateGetterAndSetter=Crear m\u00e9todos getter y setter

MSG_Implement=Implementar los m\u00e9todos faltantes

MSG_RenameConstant=Cambiar nombre por {0}

MSG_DeclareIn=Declarar en {0}

MSG_GoToOverriding=Ir al metodo sobrescritor...
MSG_GettingOverriding=Obtenci\u00f3n de m\u00e9todos sobrescritores
MSG_OverridingFound=Se encontr\u00f3/aron {0} m\u00e9todo/os sobrescritores
MSG_OverridingNotFound=No se encontraron m\u00e9todos sobrescritores


MSG_ImplementAbstractMethod=Implementar m\u00e9todo en ...
MSG_GettingClassesWhereImplement=Obteniendo subclases
MSG_NoClassesWhereImplementFound=Todas las subclases conocidas ya implementan este m\u00e9todo
MSG_ClassesWhereImplementFound=Se encontr\u00f3/aron {0} subclase/es

MSG_Cancel=Cancelar

MSG_ChangeVariablesType=<html>Change type of {0} to {1}
MSG_ChangeVariablesTypeDisplayName=Cambiar tipo Fix
MSG_ChangeVariablesTypeDescription=Esta sugerencia cambia el tipo de una variable por el tipo de la expresi\u00f3n inicializadora.

#{0}: new class simple name
#{1}: target package name 
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
FIX_CreateClassInPackage=Crear {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" en el paquete {1}
FIX_CreateClassAndCtorInPackage=Crear {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" con el constructor "{0}({3})" en el paquete {1}

#{0}: new class simple name
#{1}: target class name
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
FIX_CreateInnerClass=Crear {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" en {1}

LBL_Remove_Useless_Cast_Fix=Eliminar conversi\u00f3n a Fix sin utilidad
DSC_Remove_Useless_Cast_Fix=Eliminar conversi\u00f3n a Fix sin utilidad
LBL_FIX_Remove_redundant_cast=Eliminar conversi\u00f3n reduntante

LBL_Suppress_Waning=Suprimir advertencias Fix
DSC_Suppress_Waning=Suprimir advertencias Fix

LBL_Add_Cast=A\u00f1adir conversi\u00f3n a Fix
DSC_Add_Cast=A\u00f1adir conversi\u00f3n a Fix
#{0}: treeName
#{1}: type
LBL_FIX_Add_Cast=Convertir {0} a {1}

LBL_Impl_Abstract_Methods=Implementar todos los m\u00e9todos abstractos Fix
DSC_Impl_Abstract_Methods=A\u00f1adir conversi\u00f3n a Fix
#{0}: treeName
#{1}: type
LBL_FIX_Impl_Abstract_Methods=Implementar todos los m\u00e9todos abstractos
#{0}: name of the class
LBL_FIX_Make_Class_Abstract=Convertir la clase {0} en abstracta.


LBL_Create_Field=Crear campo Fix
DSC_Create_Field=Crear campo Fix
#{0}: field name
#{1}: class name
LBL_FIX_Create_Field=Crear campo {0} en {1}
LBL_FIX_Create_Enum_Constant=Crear constante de enumeraci\u00f3n {0} en {1}
LBL_FIX_Create_Constructor=Crear constructor {0} en {1}
LBL_FIX_Create_Method=Crear m\u00e9todo {0} en {1}
LBL_FIX_Create_Annotation_Element=Crear elemento de anotaci\u00f3n {0} en {1}
#{0}: parameter name
LBL_FIX_Create_Parameter=Crear par\u00e1metro {0}
#{0}: variable name
LBL_FIX_Create_Local_Variable=Crear variable local {0}

#NotInitializedVariable
LBL_NotInitializedVariable=Utilizaci\u00f3n de variable no inicializada
LBL_NotInitializedVariable_fix=Inicializar variable {0}

LBL_SurroundStatementWithTryCatch=Encerrar sentencia con try-catch
LBL_SurroundBlockWithTryCatch=Encerrar bloque con try-catch
DN_MakeVariableFinal=Convertir en variable Final
DESC_MakeVariableFinal=Convertir en variable Final
FIX_MakeVariableFinal=Hacer {0} final
FIX_AddThrowsClause=A\u00f1adir cl\u00e1usula "throws" a {0}
DN_AddThrowsClauseAndSurround=A\u00f1adir cla\u00fasula Throws y rodear con try-catch Fixes
DESC_AddThrowsClauseAndSurround=A\u00f1adir cla\u00fasula Throws y rodear con try-catch Fixes
LocalVariableFixCustomizer.inPlace.text=&Crear variable local  en el lugar
SurroundWithTryCatchLog.jLabel1.text=Anotando sentencia a utilizar (en orden):
SurroundWithTryCatchLog.exceptions.text=Utilizar &org.openide.util.Exceptions.printStackTrace
SurroundWithTryCatchLog.logger.text=Utilizar &java.util.logging.Logger
SurroundWithTryCatchLog.printStackTrace.text=Utilizar &Exception.printStackTrace
DESC_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=Configuraci\u00f3n para encerrar con try-catch error fix
DN_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=Encerrar con try-catch
DESC_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=Configuraci\u00f3n para crear variable local error fix
DN_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=Crear variable local
DESC_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=Ajustes de Crear Campo Fix
DN_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=Crear campo

ERR_CannotApplyGuarded=No se puede aplicar la reparaci\u00f3n en un bloque guardado

ERR_CannotApplyGuarded=No se puede aplicar la reparaci\u00f3n en un bloque guardado
ACSN_Final_Checkbox=FinalCheckbox
FinalFieldsFromCtorCustomiser.finalCehckBox.AccessibleContext.accessibleDescription=Crear campo Fijar crea campos de casilla de verificaci\u00f3n final
FinalFieldsFromCtorCustomiser.finalCheckBox.text=<html>Crear <code>final</code> constructor de campos desde el interior de organismo</html>

DN_ConvertToDiamond=Convert to Diamond
FIX_ConvertToDiamond=Use diamond inference

ERR_ReadOnlyTargetFile=Target file ({0}) is read-only, cannot perform requested change.
DN_VarArgsCast=Resolve inexact varargs type warning
FIX_VarArgsCast=Convertir {0} a {1}
SurroundWithTryCatchLog.rethrowRuntime.text=Use throw new RuntimeException(...)
SurroundWithTryCatchLog.rethrow.text=Use throw ...

