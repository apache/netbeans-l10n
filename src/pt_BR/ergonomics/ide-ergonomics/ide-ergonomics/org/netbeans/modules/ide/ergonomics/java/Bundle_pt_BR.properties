# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2008 Sun Microsystems, Inc.


projectImporter=Eclipse



CTL_Hints_DisplayName=Dicas
javac-api=API da \u00c1rvore Java

spring-framework400=Spring Framework 4.0.1
Templates/Beans=Objetos JavaBeans
Templates/Beans/Bean.java=Componente JavaBeans
Templates/Beans/BeanInfo.java=BeanInfo
Templates/Beans/NoIconBeanInfo.java=BeanInfo sem \u00cdcone
Templates/Beans/Customizer.java=Personalizador
Templates/Beans/PropertyEditor.java=Editor de Propriedades
Templates/Persistence=Persist\u00eancia
Templates/Persistence/Schema.dbschema=Esquema do Banco de Dados
DBSchemaResolver=Arquivos de defini\u00e7\u00e3o do esquema do banco de dados
CTL_Connector_name=Depurador Java (JPDA)
LBL_JavaDebugger=Depurador Java
KW_JavaDebugger=depurar,Op\u00e7\u00f5es do Depurador Java,Op\u00e7\u00f5es da Console de Depura\u00e7\u00e3o,Op\u00e7\u00f5es das Etapas de Depura\u00e7\u00e3o,Op\u00e7\u00f5es do Formatador de Depura\u00e7\u00e3o
CategoryPanelGeneral.kw1=exce\u00e7\u00f5es n\u00e3o detectadas
CategoryPanelGeneral.kw2=Aplicar altera\u00e7\u00f5es de c\u00f3digo
CategoryPanelGeneral.kw3=pontos de interrup\u00e7\u00e3o suspensos
CategoryPanelGeneral.kw4=retomar
CategoryPanelGeneral.kw5=Console do Depurador
CategoryPanelGeneral.kw6=Reutilizar Editor
CategoryPanelStepFilters.kw1=etapa
CategoryPanelStepFilters.kw2=entrar
CategoryPanelStepFilters.kw3=sint\u00e9tico
CategoryPanelFormatters.kw1=Formatador
CategoryPanelFormatters.kw2=Formatador de Vari\u00e1vel
LBL_VisualDebugging=Depura\u00e7\u00e3o Visual
LBL_JavaDebuggerVisual=Depurador Java
CategoryPanelVisual.kw1=Depurador Visual
CategoryPanelVisual.kw2=hierarquia do componente
beans-binding=Vincula\u00e7\u00e3o de Beans
Templates/GUIForms/MasterDetailForm.java=Form de Amostra Mestre/Detalhe
swing-layout=Extens\u00f5es de Layout Swing
KW_FormOptions=GUI Builder, Op\u00e7\u00f5es do Componente Swing, Internacionaliza\u00e7\u00e3o da GUI, Op\u00e7\u00f5es de Form
Form_Editor=Construtor de GUI
Templates/AWTForms=Forms GUI AWT
Templates/AWTForms/Applet.java=Form Applet
Templates/AWTForms/Dialog.java=Form de Caixa de Di\u00e1logo
Templates/AWTForms/Frame.java=Form do Quadro
Templates/AWTForms/Panel.java=Form do Painel
Templates/GUIForms/Application.java=Form de Amostra da Aplica\u00e7\u00e3o
Templates/GUIForms/MDIApplication.java=Form de Amostra de Aplica\u00e7\u00e3o MDI
Templates/GUIForms/OkCancelDialog.java=Form de Amostra da Caixa de Di\u00e1logo OK/Cancelar
Templates/GUIForms=Forms GUI Swing
Templates/GUIForms/JApplet.java=Form JApplet
Templates/GUIForms/JDialog.java=Form JDialog
Templates/GUIForms/JFrame.java=Form JFrame
Templates/GUIForms/JInternalFrame.java=Form JInternalFrame
Templates/GUIForms/JPanel.java=Form JPanel
Templates/GUIForms/BeanForm.java=Form Bean
absolutelayout=Layout Absoluto
HibernateCfgResolver=Arquivos de Configura\u00e7\u00e3o do Hibernate
HibernateMappingResolver=Arquivos de Mapeamento do Hibernate
HibernateRevengResolver=Arquivo de Engenharia Reversa do Hibernate

Templates/Hibernate/Hibernate.hbm.xml=Assistente de Mapeamento do Hibernate 
Templates/Hibernate/Hibernate.cfg.xml=Assistente de Configura\u00e7\u00e3o do Hibernate 
Templates/Hibernate/Hibernate.reveng.xml=Assistente de Engenharia Reversa do Hibernate
Templates/Hibernate/Hibernate.CodeGen=Arquivos de Mapeamento do Hibernate e POJOs de Banco de Dados

jpa2-persistence=Persist\u00eancia - JPA2.1



jpa20-persistence=Persist\u00eancia (JPA 2.1)

ConsistentAccessType.desc=As classes JPA devem ter tipos de acesso consistentes para campos/propriedades
ConsistentAccessType.display.name=Verificar tipos de aceso para classes jpa
HasNoArgConstructor.desc=As classes JPA devem ter um construtor de argumentos p\u00fablico/protegido padr\u00e3o
HasNoArgConstructor.display.name=Construtor p\u00fablico/protegido padr\u00e3o
IdDefinedInHierarchy.desc=O Id \u00e9 necess\u00e1rio para entidades
IdDefinedInHierarchy.display.name=Verificar se a entidade tem uma chave prim\u00e1ria definida
JPAAnnotsOnlyOnAccesor.desc=As anota\u00e7\u00f5es JPA s\u00f3 podem ser aplicadas a m\u00e9todos getter
JPAAnnotsOnlyOnAccesor.display.name=Verificar anota\u00e7\u00f5es jpa em acessadores
JPQLValidation.desc=Fazer parsing e localizar erros em uma consulta jpql
JPQLValidation.display.name=Valida\u00e7\u00e3o de JPQL
LegalCombinationOfAnnotations.desc=Algumas anota\u00e7\u00f5es JPA n\u00e3o podem ser aplicadas no mesmo elemento ao mesmo tempo
LegalCombinationOfAnnotations.display.name=Verificar combina\u00e7\u00f5es de anota\u00e7\u00f5es jpa
MSG_IdClassDoesNotOverrideEquals=A IdClass deve substituir o m\u00e9todo equals(Object o) e hashCode().
MSG_EntitySubclassHasIdClass=Uma subclasse da entidade n\u00e3o pode ter IdClass porque resultar\u00e1 em m\u00faltiplos IDs na hierarquia da entidade.
MSG_QueriesProperlyDefined=As pesquisas nomeadas podem ser definidas apenas em uma classe de Entidade ou MappedSuperclass.
MSG_OnlyEntityOrMappedSuperclassCanUseIdClass=Apenas uma Entidade ou MappedSuperclass pode usar IdClass.
NoIdClassOnEntitySubclass.display.name=Verificar IdClass na sublasse da entidade
NonFinalClass.desc=As classes JPA n\u00e3o devem ser finais
NonFinalClass.display.name=Verificar se classe jpa n\u00e3o \u00e9 final
OnlyEntityOrMappedSuperclassCanUseIdClass.display.name=Verificar localiza\u00e7\u00e3o @IdClass
PersistenceUnitPresent.desc=Verificar se o projeto com o uso de jpa cont\u00e9m persistence.xml com unidade de persist\u00eancia
PersistenceUnitPresent.display.name=Presen\u00e7a de persistence.xml
PublicClass.desc=A IdClass precisa ser p\u00fablica
PublicClass.display.name=Verificar n\u00edvel de acesso para IdClass
QueriesProperlyDefined.display.name=Verificar localiza\u00e7\u00e3o da consulta nomeada
SerializableClass.desc=Se uma inst\u00e2ncia de entidade for especificada por um valor como um objeto desanexado (por exemplo, uma interface remota), a classe da entidade dever\u00e1 implementar a interface Serializ\u00e1vel.
SerializableClass.display.name=Entidade implementa verifica\u00e7\u00e3o Serializ\u00e1vel
TopLevelClass.desc=As classes JPA n\u00e3o devem ser classes internas
TopLevelClass.display.name=Verificar se a classe jpa \u00e9 uma classe de n\u00edvel superior
UniqueEntityName.desc=Os nomes de entidades n\u00e3o devem ser iguais em uma unidade de persist\u00eancia
UniqueEntityName.display.name=Verificar se o nome da entidade \u00e9 exclusivo
ValidAttributes.desc=Esta valida\u00e7\u00e3o abrange diversas quest\u00f5es, como nome de coluna v\u00e1lida, modificadores de atributos v\u00e1lidos, tipo b\u00e1sico v\u00e1lido, relacionamentos etc.
ValidAttributes.display.name=Verificar atributos de classes jpa
ValidPrimaryTableName.desc=O nome da tabela de entidades deve ser um identificador QL v\u00e1lido
ValidPrimaryTableName.display.name=Verifica\u00e7\u00e3o do nome da tabela de entidades
Templates/Persistence/DBScriptFromEntities=Scripts de BD das Classes de Entidade
Templates/Persistence/Entity.java=Classe da Entidade
Templates/Persistence/RelatedCMP=Classes de Entidade do Banco de Dados
Templates/Persistence/JpaControllersFromEntities=Classes do Controlador JPA de Classes de Entidade
Templates/Persistence/PersistenceUnit=Unidade de Persist\u00eancia
Templates/Project/Samples/Standard=Java
Templates/Project/Samples/Standard/anagrams.zip=Jogo de Anagramas
Templates/Project/Samples/Standard/GUIFormExamples.zip=Exemplos de Forms GUI
Templates/Project/Samples/Standard/ClientEditor.zip=Editor de Clientes
Templates/Project/Standard/j2sefreeform.xml=Projeto de Forma Livre Java
CTL_Scope_Label=&Escopo:
CTL_DepScanning=Varredura de Depend\u00eancia
CTL_Scope_Desc=Quando ativado, o IDE localiza e recompila quaisquer classes que dependem do arquivo que voc\u00ea est\u00e1 modificando. Ent\u00e3o, o IDE atualiza os indicadores de erros nos arquivos e projetos que s\u00e3o afetados pela modifica\u00e7\u00e3o.<br><br>Quando desativado, o IDE n\u00e3o faz a varredura por depend\u00eancias ou atualiza os indicadores de erros quando voc\u00ea modifica um arquivo.<br><br>O escopo permite limitar o n\u00famero de classe que s\u00e3o varridas pelo IDE para verificar as depend\u00eancias. Por default, o IDE faz a varredura de todos os projetos abertos.
CTL_Hints_DisplayName2=Dicas
LBL_Braces_For=Loops For Devem Usar Chaves
LBL_Braces_While=Loops While Devem Usar Chaves
LBL_Braces_DoWhile=Loops Do-While Devem Usar Chaves
LBL_Braces_If=Instru\u00e7\u00f5es If-Else Devem Usar Chaves
DSC_Braces_For=Adverte se um loop <CODE>for</CODE> n\u00e3o tem o corpo envolvido entre chaves.<BR>
DSC_Braces_While=Loops While Devem Usar Chaves
DSC_Braces_DoWhile=Loops Do-While Devem Usar Chaves
DSC_Braces_If=Instru\u00e7\u00f5es If-Else Devem Usar Chaves
DN_AssignmentToItself=Designa\u00e7\u00e3o ao Pr\u00f3prio Elemento
DESC_AssignmentToItself=Designa\u00e7\u00e3o ao Pr\u00f3prio Elemento
DN_Imports_UNUSED=Importa\u00e7\u00e3o N\u00e3o Utilizada
DN_Imports_SAME_PACKAGE=Importar do Mesmo Pacote
DN_Imports_DEFAULT_PACKAGE=Importar do Pacote java.lang
DN_Imports_EXCLUDED=Importar de Exclu\u00eddo
DN_Imports_STAR=Importa\u00e7\u00e3o asterisco
DESC_Imports_UNUSED=Importa\u00e7\u00e3o N\u00e3o Utilizada
DESC_Imports_SAME_PACKAGE=Importar do Mesmo Pacote
DESC_Imports_DEFAULT_PACKAGE=Importar do Pacote java.lang
DESC_Imports_EXCLUDED=Importar do pacote ou classe rotulada como "Exclu\u00eddo" na funcionalidade Autocompletar C\u00f3digo.
DESC_Imports_STAR=Importa\u00e7\u00e3o asterisco
DN_org.netbeans.modules.java.hints.OrganizeImports=Organizar importa\u00e7\u00f5es
DESC_org.netbeans.modules.java.hints.OrganizeImports=Verifica se as instru\u00e7\u00f5es de importa\u00e7\u00e3o correspondem \u00e0s regras de estilo do c\u00f3digo especificado 
DN_org.netbeans.modules.java.hints.OrganizeMembers=Organizar membros
DESC_org.netbeans.modules.java.hints.OrganizeMembers=Verifica se a ordem dos membros corresponde \u00e0s regras de estilo do c\u00f3digo especificado 
DN_org.netbeans.modules.java.hints.MissingHashCode=Gerar hashCode ou equals ausente
DESC_org.netbeans.modules.java.hints.MissingHashCode=Verifica se uma classe que substitui o m\u00e9todo equals tamb\u00e9m substitui hashCode.
DN_AnnotationAsSuperInterface=N\u00e3o usar Anota\u00e7\u00e3o como superinterface
DESC_AnnotationAsSuperInterface=Apesar de o compilador permitir tais constru\u00e7\u00f5es, as Anota\u00e7\u00f5es n\u00e3o devem ser usadas como superinterfaces.
MSG_UtilityClass=Classe Utilit\u00e1rio sem construtor
HINT_UtilityClass=Localiza classes contendo somente elementos est\u00e1ticos ou que s\u00e3o instanci\u00e1veis.
MSG_PublicConstructor=Classe Utilit\u00e1rio com construtor vis\u00edvel
HINT_PublicConstructor=Localiza classes contendo somente elementos est\u00e1ticos com construtores p\u00fablicos ou protegidos.
DN_org.netbeans.modules.java.hints.DoubleCheck=Bloqueio com verifica\u00e7\u00e3o dupla
DESC_org.netbeans.modules.java.hints.DoubleCheck=Procura exemplos de bloqueio com verifica\u00e7\u00e3o dupla - por exemplo, quando uma vari\u00e1vel \u00e9 testada n\u00e3o s\u00f3 antes de um bloco sincronizado, como tamb\u00e9m dentro dele.
LBL_WrongStringComparison=Compara\u00e7\u00e3o de Strings usando == ou !=
DSC_WrongStringComparison=Verifica se h\u00e1 uso do operador == ou != para comparar Strings.<BR>Em geral, as compara\u00e7\u00f5es de strings devem ser feitas com o m\u00e9todo equals().
LBL_Empty_FOR_LOOP=Instru\u00e7\u00e3o vazia ap\u00f3s "for"
LBL_Empty_WHILE_LOOP=Instru\u00e7\u00e3o vazia ap\u00f3s "while"
LBL_Empty_DO_WHILE_LOOP=Instru\u00e7\u00e3o vazia ap\u00f3s "do"
LBL_Empty_IF=Instru\u00e7\u00e3o vazia ap\u00f3s "if/else"
LBL_Empty_BLOCK=Instru\u00e7\u00e3o vazia
DSC_Empty_FOR_LOOP=Verifica se h\u00e1 instru\u00e7\u00f5es "for" no formato <BR><CODE>for(...);</CODE>.
DSC_Empty_WHILE_LOOP=Verifica se h\u00e1 instru\u00e7\u00f5es "while" no formato<BR><CODE>while(...);</CODE>.
DSC_Empty_DO_WHILE_LOOP=Verifica se h\u00e1 instru\u00e7\u00f5es "do/while" no formato<BR><CODE>do;<BR>while</CODE>.
DSC_Empty_IF=Verifica se h\u00e1 instru\u00e7\u00f5es "if/else" no formato<BR><CODE>if(...);<BR>else;</CODE>.
DSC_Empty_BLOCK=Verifica se h\u00e1 instru\u00e7\u00f5es vazias nos blocos, geralmente representadas como ponto e v\u00edrgula sup\u00e9rfluo.
MSG_StaticAccessName=Acessando est\u00e1tico via refer\u00eancia
HINT_StaticAccess=A linguagem Java permite acessar os campos est\u00e1ticos por meio de vari\u00e1veis de inst\u00e2ncia, mas \u00e9 geralmente confusa e dif\u00edcil de ler.
DN_AddOverrideAnnotation=Adicionar Anota\u00e7\u00e3o @Override
DESC_AddOverrideAnnotation=Adicionar Anota\u00e7\u00e3o @Override
DN_org.netbeans.modules.java.hints.EqualsMethodHint=M\u00e9todo .equals N\u00e3o Est\u00e1 Verificando Tipo
DESC_org.netbeans.modules.java.hints.EqualsMethodHint=A implementa\u00e7\u00e3o de m\u00e9todos .equals n\u00e3o est\u00e1 verificando o tipo do par\u00e2metro de entrada
DESC_org.netbeans.modules.java.hints.SyncOnNonFinal=Sincroniza\u00e7\u00e3o de campo n\u00e3o final
DN_org.netbeans.modules.java.hints.SyncOnNonFinal=Sincroniza\u00e7\u00e3o de campo n\u00e3o final
DSC_StaticImport=Converte uma refer\u00eancia est\u00e1tica de m\u00e9todo/campo/campo de enumera\u00e7\u00e3o para usar uma importa\u00e7\u00e3o est\u00e1tica. Feedback para <a href="http://www.netbeans.org/issues/show_bug.cgi?id=89258">http://www.netbeans.org/issues/show_bug.cgi?id=89258</a>
DN_StaticImport=Importa\u00e7\u00f5es est\u00e1ticas
DN_StringBuilderAppend=Concatena\u00e7\u00e3o de strings em StringBuilder.append
DESC_StringBuilderAppend=Procura concatena\u00e7\u00f5es de strings no par\u00e2metro de uma chamada do m\u00e9todo de acr\u00e9scimo de StringBuilder ou StringBuffer.
DN_org.netbeans.modules.java.hints.ThisInAnonymous=Sincroniza\u00e7\u00e3o nesta classe an\u00f4nima
DESC_org.netbeans.modules.java.hints.ThisInAnonymous=A <html>Sincroniza\u00e7\u00e3o <tt>nesta</tt> classe an\u00f4nima ou local \u00e9 provavelmente o resultado da refatora\u00e7\u00e3o e possivelmente um erro
DN_org.netbeans.modules.java.hints.LoggerNotStaticFinal=A declara\u00e7\u00e3o de logger n\u00e3o \u00e9 est\u00e1tica final
DESC_org.netbeans.modules.java.hints.LoggerNotStaticFinal=Cada classe deve ter um \u00fanico logger. Se for declarada como um campo, deve ser est\u00e1tica e final.
DN_org.netbeans.modules.java.hints.MultipleLoggers=V\u00e1rios loggers
DESC_org.netbeans.modules.java.hints.MultipleLoggers=H\u00e1 v\u00e1rios loggers declarados para uma \u00fanica classe.
DN_org.netbeans.modules.java.hints.NoLoggers=N\u00e3o h\u00e1 loggers
DESC_org.netbeans.modules.java.hints.NoLoggers=N\u00e3o h\u00e1 logger declarado para uma classe.
DN_org.netbeans.modules.java.hints.ShiftOutOfRange=Opera\u00e7\u00e3o de deslocamento fora do limite razo\u00e1vel
DESC_org.netbeans.modules.java.hints.ShiftOutOfRange=Esta inspe\u00e7\u00e3o reporta inst\u00e2ncias de opera\u00e7\u00f5es de deslocamento nos quais o valor deslocado \u00e9 constante e est\u00e1 fora da faixa razo\u00e1vel. S\u00e3o reportadas as opera\u00e7\u00f5es de deslocamento de inteiro fora da faixa de 0..31 e as opera\u00e7\u00f5es de deslocamento longo fora da faixa de 0..63. O deslocamento negativo ou de valores muito grandes \u00e9 muito provavelmente um erro de codifica\u00e7\u00e3o.
DN_org.netbeans.modules.java.hints.ClassStructure.finalClass=Classe final
DESC_org.netbeans.modules.java.hints.ClassStructure.finalClass=Reporta inst\u00e2ncias de classes que est\u00e3o sendo declaradas como finais. Alguns padr\u00f5es de codifica\u00e7\u00e3o n\u00e3o recomendam classes finais.
DN_org.netbeans.modules.java.hints.ClassStructure.finalMethod=M\u00e9todo final
DESC_org.netbeans.modules.java.hints.ClassStructure.finalMethod=Reporta inst\u00e2ncias de m\u00e9todos que est\u00e3o sendo declarados como finais. Alguns padr\u00f5es de codifica\u00e7\u00e3o n\u00e3o recomendam classes finais.
DN_org.netbeans.modules.java.hints.ClassStructure.finalPrivateMethod=M\u00e9todo privado final
DESC_org.netbeans.modules.java.hints.ClassStructure.finalPrivateMethod=Reporta inst\u00e2ncias de m\u00e9todos que est\u00e3o sendo declarados como finais e privados. Como os m\u00e9todos privados n\u00e3o podem ser significativamente substitu\u00eddos, declar\u00e1-los como finais \u00e9 redundante.
DN_org.netbeans.modules.java.hints.ClassStructure.finalMethodInFinalClass=M\u00e9todo final na classe final
DESC_org.netbeans.modules.java.hints.ClassStructure.finalMethodInFinalClass=Reporta inst\u00e2ncias de m\u00e9todos que est\u00e3o sendo declarados como finais em classes que s\u00e3o declaradas como finais. Isso \u00e9 desnecess\u00e1rio e pode ser confuso.
DN_org.netbeans.modules.java.hints.ClassStructure.noopMethodInAbstractClass=M\u00e9todo no-op em classe abstrata
DESC_org.netbeans.modules.java.hints.ClassStructure.noopMethodInAbstractClass=Reporta inst\u00e2ncias de m\u00e9todos no-op em classes abstratas. Geralmente, a melhor op\u00e7\u00e3o \u00e9 fazer com que esses m\u00e9todos se tornem abstratos, de modo que as classes que herdar\u00e3o os m\u00e9todos n\u00e3o se esque\u00e7am de fornecer suas pr\u00f3prias implementa\u00e7\u00f5es.
DN_org.netbeans.modules.java.hints.ClassStructure.publicConstructorInNonPublicClass=Construtor p\u00fablico em classe n\u00e3o p\u00fablica
DESC_org.netbeans.modules.java.hints.ClassStructure.publicConstructorInNonPublicClass=Reporta todos os construtores em classes n\u00e3o p\u00fablicas que s\u00e3o declarados como p\u00fablicos.
DN_org.netbeans.modules.java.hints.ClassStructure.protectedMemberInFinalClass=Membro protegido na classe final
DESC_org.netbeans.modules.java.hints.ClassStructure.protectedMemberInFinalClass=Reporta inst\u00e2ncias de membros que est\u00e3o sendo declarados como protegidos em classes que s\u00e3o declaradas como finais. Esses membros podem ser declarados como privados ou como vis\u00edveis em pacotes.
DN_org.netbeans.modules.java.hints.ClassStructure.markerInterface=Interface de marca\u00e7\u00e3o
DESC_org.netbeans.modules.java.hints.ClassStructure.markerInterface=Reporta interfaces de marca\u00e7\u00e3o que n\u00e3o t\u00eam m\u00e9todos e campos. Essas interfaces podem ser confusas e normalmente indicam uma falha de cria\u00e7\u00e3o. Interfaces que estendem uma ou mais outras interfaces n\u00e3o ser\u00e3o reportadas.
DN_org.netbeans.modules.java.hints.ClassStructure.classMayBeInterface=A classe pode ser interface
DESC_org.netbeans.modules.java.hints.ClassStructure.classMayBeInterface=Reporta classes concretas ou abstratas que podem ser simplificadas para que sejam interfaces. Isso ocorrer\u00e1 se a classe n\u00e3o tiver superclasses (al\u00e9m de Object), se n\u00e3o tiver campos declarados que n\u00e3o sejam est\u00e1ticos, finais e p\u00fablicos, e se n\u00e3o tiver m\u00e9todos declarados que n\u00e3o sejam p\u00fablicos e abstratos nem classes internas que n\u00e3o possam ser interfaces.
DN_org.netbeans.modules.java.hints.ClassStructure.multipleTopLevelClassesInFile=V\u00e1rias classes de n\u00edvel superior no arquivo
DESC_org.netbeans.modules.java.hints.ClassStructure.multipleTopLevelClassesInFile=Reporta inst\u00e2ncias de v\u00e1rias classes de n\u00edvel superior em um \u00fanico arquivo Java. Colocar v\u00e1rias classes de n\u00edvel superior em um arquivo pode ser confuso e pode prejudicar a utilidade de v\u00e1rias ferramentas de software.
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToForLoopParam=Designa\u00e7\u00e3o ao par\u00e2metro de loop for
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToForLoopParam=Reporta inst\u00e2ncias de designa\u00e7\u00e3o a uma vari\u00e1vel declarada em uma instru\u00e7\u00e3o for no corpo dessa instru\u00e7\u00e3o. Tamb\u00e9m reporta qualquer tentativa de incrementar ou decrementar a vari\u00e1vel. Embora seja ocasionalmente intencionado, esse construto pode ser extremamente confuso e se deve, em geral, a um erro ortogr\u00e1fico.
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToCatchBlockParameter=Designa\u00e7\u00e3o ao par\u00e2metro de catch-block
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToCatchBlockParameter=Reporta inst\u00e2ncias de designa\u00e7\u00e3o \u00e0 vari\u00e1vel declarada como um par\u00e2metro de catch-block. Embora seja ocasionalmente pretendido, este construto pode ser confuso.
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToMethodParam=Designa\u00e7\u00e3o ao par\u00e2metro do m\u00e9todo
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToMethodParam=Reporta inst\u00e2ncias de designa\u00e7\u00e3o a uma vari\u00e1vel declarada como um par\u00e2metro de m\u00e9todo. Tamb\u00e9m reporta qualquer tentativa de incrementar ou decrementar a vari\u00e1vel. Embora seja ocasionalmente intencionado, esse construto pode ser extremamente confuso e se deve, em geral, a um erro ortogr\u00e1fico.
DN_org.netbeans.modules.java.hints.AssignmentIssues.nestedAssignment=Designa\u00e7\u00e3o aninhada
DESC_org.netbeans.modules.java.hints.AssignmentIssues.nestedAssignment=Reporta inst\u00e2ncias de express\u00f5es de designa\u00e7\u00e3o aninhadas dentro de outras express\u00f5es. Embora sejam concisas, essas express\u00f5es podem ser confusas e violam os princ\u00edpios gerais de concep\u00e7\u00e3o de que um construto deve executar precisamente uma a\u00e7\u00e3o.
DN_org.netbeans.modules.java.hints.AssignmentIssues.incrementDecrementUsed=Valor da express\u00e3o de incremento/decremento usado
DESC_org.netbeans.modules.java.hints.AssignmentIssues.incrementDecrementUsed=Reporta inst\u00e2ncias de express\u00f5es de designa\u00e7\u00e3o aninhadas dentro de outras express\u00f5es. Embora sejam concisas, essas express\u00f5es podem ser confusas e violam os princ\u00edpios gerais de concep\u00e7\u00e3o de que um construto deve executar precisamente uma a\u00e7\u00e3o.
DN_org.netbeans.modules.java.hints.AssignmentIssues.replaceAssignWithOpAssign=Designa\u00e7\u00e3o substitu\u00edvel por designa\u00e7\u00e3o de operador
DESC_org.netbeans.modules.java.hints.AssignmentIssues.replaceAssignWithOpAssign=Reporta as inst\u00e2ncias de opera\u00e7\u00f5es de designa\u00e7\u00e3o que podem ser substitu\u00eddas por uma designa\u00e7\u00e3o de operador. O c\u00f3digo que usa a designa\u00e7\u00e3o de operador pode ser mais claro e teoricamente mais eficiente.
DN_org.netbeans.modules.java.hints.IncompatibleMask=M\u00e1scara incompat\u00edvel
DESC_org.netbeans.modules.java.hints.IncompatibleMask=Esta inspe\u00e7\u00e3o reporta inst\u00e2ncias de express\u00f5es de m\u00e1scara bit a bit que oferecem a garantia de serem interpretadas como falsas. As express\u00f5es verificadas t\u00eam o formato (var & constant1) == constant2 ou (var | constant1) == constant2, em que constant1 e constant2 s\u00e3o constantes de m\u00e1scara de bit incompat\u00edveis.
DN_org.netbeans.modules.java.hints.OverridableMethodCallInConstructor=Chamada problem\u00e1tica no construtor
DESC_org.netbeans.modules.java.hints.OverridableMethodCallInConstructor=Os m\u00e9todos de chamada que podem ser substitu\u00eddos podem ser perigosos no construtor porque, no momento em que o m\u00e9todo substitu\u00eddo \u00e9 chamado, o objeto n\u00e3o est\u00e1 completamente inicializado.
DN_org.netbeans.modules.java.hints.PointlessBitwiseExpression=Express\u00e3o bit a bit ineficaz
DESC_org.netbeans.modules.java.hints.PointlessBitwiseExpression=Esta inspe\u00e7\u00e3o reporta inst\u00e2ncias de express\u00f5es bit a bit ineficazes. Essas express\u00f5es incluem ANDing com zero, ORing por zero e deslocamento por zero. Elas podem ser o resultado de refatora\u00e7\u00f5es autom\u00e1ticas que n\u00e3o foram totalmente conclu\u00eddas e que, de alguma forma, n\u00e3o correspondem ao que o desenvolvedor tinha a inten\u00e7\u00e3o de fazer.
DN_org.netbeans.modules.java.hints.LeakingThisInConstructor=Especifica\u00e7\u00e3o de par\u00e2metro suspeito no construtor
DESC_org.netbeans.modules.java.hints.LeakingThisInConstructor=O uso desse elemento como par\u00e2metro pode ser perigoso no construtor porque o objeto n\u00e3o est\u00e1 completamente inicializado.
DN_org.netbeans.modules.java.hints.ThreadDumpStack=Pilha de Dump de Threads
DESC_org.netbeans.modules.java.hints.ThreadDumpStack=Esta inspe\u00e7\u00e3o reporta as utiliza\u00e7\u00f5es de Throwable.printStackTrace() sem argumentos. Correspondem geralmente a instru\u00e7\u00f5es de depura\u00e7\u00e3o tempor\u00e1rias e devem ser removidas do c\u00f3digo de produ\u00e7\u00e3o ou substitu\u00eddas por um recurso de log mais robusto.
DN_org.netbeans.modules.java.hints.PrintStackTrace=Imprimir Rastreamento de Pilha
DESC_org.netbeans.modules.java.hints.PrintStackTrace=Esta inspe\u00e7\u00e3o reporta as utiliza\u00e7\u00f5es de Throwable.printStackTrace() sem argumentos. Correspondem geralmente a instru\u00e7\u00f5es de depura\u00e7\u00e3o tempor\u00e1rias e devem ser provavelmente removidas do c\u00f3digo de produ\u00e7\u00e3o ou substitu\u00eddas por um recurso de log mais robusto.
DN_org.netbeans.modules.java.hints.SystemOut=System.out/err
DESC_org.netbeans.modules.java.hints.SystemOut=Esta inspe\u00e7\u00e3o reporta as utiliza\u00e7\u00f5es de System.out ou System.err. Correspondem geralmente a instru\u00e7\u00f5es de depura\u00e7\u00e3o tempor\u00e1rias e devem ser provavelmente removidas do c\u00f3digo de produ\u00e7\u00e3o ou substitu\u00eddas por um recurso de log mais robusto.
DN_org.netbeans.modules.java.hints.ObsoleteCollection=Cole\u00e7\u00e3o Obsoleta
DESC_org.netbeans.modules.java.hints.ObsoleteCollection=Esta inspe\u00e7\u00e3o reporta as utiliza\u00e7\u00f5es de java.util.Vector ou java.util.Hashtable. Embora ainda sejam suportadas, essas classes se tornaram obsoletas com o JDK1.2 e provavelmente n\u00e3o ser\u00e3o usadas em novos desenvolvimentos.
DN_org.netbeans.modules.java.hints.StaticNonFinalUsedInInitialization=Vari\u00e1vel est\u00e1tica n\u00e3o final usada durante a inicializa\u00e7\u00e3o
DESC_org.netbeans.modules.java.hints.StaticNonFinalUsedInInitialization=O uso de vari\u00e1veis est\u00e1ticas n\u00e3o finais pode ser perigoso no c\u00f3digo de inicializa\u00e7\u00e3o porque seus valores podem depender da ordem das instru\u00e7\u00f5es de inicializa\u00e7\u00e3o
DN_InitializerMayBeStatic=O inicializador pode ser est\u00e1tico
DESC_InitializerMayBeStatic=O inicializador n\u00e3o tem acesso a m\u00e9todos ou vari\u00e1veis de inst\u00e2ncia; ele deve ser est\u00e1tico e ser executado apenas uma vez, e n\u00e3o durante a cria\u00e7\u00e3o de cada inst\u00e2ncia.
DESC_indentation=Adverte sobre recuo que sugere poss\u00edvel bloco delimitado n\u00e3o encontrado
DN_indentation=Recuo confuso
DN_org.netbeans.modules.java.hints.bugs.AnnotationsNotRuntime=Anota\u00e7\u00f5es sem Reten\u00e7\u00e3o de runtime
DESC_org.netbeans.modules.java.hints.bugs.AnnotationsNotRuntime=Adverte sobre acesso reflexivo a anota\u00e7\u00f5es com reten\u00e7\u00f5es CLASS ou SOURCE
DN_org.netbeans.modules.java.hints.bugs.Regexp=Express\u00e3o regular malformada
DESC_org.netbeans.modules.java.hints.bugs.Regexp=Adverte sobre express\u00f5es regulares malformadas
DN_org.netbeans.modules.java.hints.bugs.Tiny.stringReplaceAllDot=String.replaceAll(".", )
DESC_org.netbeans.modules.java.hints.bugs.Tiny.stringReplaceAllDot=Localiza ocorr\u00eancias de chamadas a String.replaceAll(".", $target), que substitui todos os caracteres da string de origem por $target.
DN_org.netbeans.modules.java.hints.bugs.CastVSInstanceOf=Cast/instanceof incompat\u00edveis
DESC_org.netbeans.modules.java.hints.bugs.CastVSInstanceOf=Cast incompat\u00edvel com instanceof incompat\u00edvel
DN_org.netbeans.modules.java.hints.bugs.Tiny.newObject=Resultado de novo Objeto ignorado
DESC_org.netbeans.modules.java.hints.bugs.Tiny.newObject=Resultado de novo Objeto ignorado
DN_org.netbeans.modules.java.hints.bugs.Tiny.systemArrayCopy=Chamada suspeita de System.arraycopy
DESC_org.netbeans.modules.java.hints.bugs.Tiny.systemArrayCopy=Localiza chamadas de System.arraycopy com deslocamentos negativos, extensos ou usados em objetos que n\u00e3o sejam arrays.
DN_org.netbeans.modules.java.hints.bugs.Tiny.equalsNull=.equals(null)
DESC_org.netbeans.modules.java.hints.bugs.Tiny.equalsNull=Localiza chamadas do m\u00e9todo Object.equals com par\u00e2metro literal 'null'.
DN_org.netbeans.modules.java.hints.bugs.Tiny.resultSet=\u00cdndice de coluna incorreto em ResultSet
DESC_org.netbeans.modules.java.hints.bugs.Tiny.resultSet=Reporta \u00edndices de coluna incorretos em v\u00e1rios m\u00e9todos de java.sql.ResultSet
DN_org.netbeans.modules.java.hints.bugs.EqualsHint.arrayEquals=.equals em Array
DESC_org.netbeans.modules.java.hints.bugs.EqualsHint.arrayEquals=.equals em array
DN_org.netbeans.modules.java.hints.EqualsHint=.equals em Tipos Incompat\u00edveis
DESC_org.netbeans.modules.java.hints.EqualsHint=.equals em tipos incompat\u00edveis
DN_org.netbeans.modules.java.hints.bugs.CollectionRemove=Chamada de m\u00e9todo suspeita
DESC_org.netbeans.modules.java.hints.bugs.CollectionRemove=Adverte sobre as chamadas suspeitas a Collection.remove/contains e Map.containsKey/containsValue/remove
DN_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.unusedAssignment=Designa\u00e7\u00e3o N\u00e3o Utilizada
DESC_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.unusedAssignment=Designa\u00e7\u00e3o N\u00e3o Utilizada
DN_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.deadBranch=Ramifica\u00e7\u00e3o Inativa
DESC_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.deadBranch=Ramifica\u00e7\u00e3o Inativa
DN_org.netbeans.modules.java.hints.bugs.Unbalanced.Array=Leitura/grava\u00e7\u00e3o desbalanceada com arrays
DESC_org.netbeans.modules.java.hints.bugs.Unbalanced.Array=Leitura/grava\u00e7\u00e3o desbalanceada com arrays
DN_org.netbeans.modules.java.hints.bugs.Unbalanced.Collection=Leitura/grava\u00e7\u00e3o desbalanceada com cole\u00e7\u00f5es
DESC_org.netbeans.modules.java.hints.bugs.Unbalanced.Collection=Leitura/grava\u00e7\u00e3o desbalanceada com cole\u00e7\u00f5es

DESC_org.netbeans.modules.java.hints.bugs.CheckReturnValueHint=Confirma se um resultado do m\u00e9todo marcado com @CheckReturnValue foi realmente verificado.
DN_NPECheck=Cancelar Refer\u00eancia de Ponteiro Nulo
DESC_NPECheck=Verifica v\u00e1rios problemas relacionados ao cancelamento de refer\u00eancia de nulos
DN_TryCatchFinally_finallyDiscardsException=o bloco 'finally' suprime as exce\u00e7\u00f5es
DESC_TryCatchFinally_finallyDiscardsException=Reporta o uso das instru\u00e7\u00f5es de <b>return</b> no bloco <b>finally</b>. A op\u00e7\u00e3o <b>return</b> descarta a exce\u00e7\u00e3o que est\u00e1 sendo gerada e faz com que todo o m\u00e9todo seja conclu\u00eddo normalmente, o que geralmente n\u00e3o \u00e9 o resultado desejado. As instru\u00e7\u00f5es <b>Break</b> e <b>continue</b> que interrompem o bloco <b>finally</b> tamb\u00e9m ser\u00e3o reportadas.
DN_TryCatchFinally_finallyThrowsException='throw' no bloco 'finally'
DESC_TryCatchFinally_finallyThrowsException=O lan\u00e7amento de uma exce\u00e7\u00e3o no bloco <b>finally</b> ocultar\u00e1 a exce\u00e7\u00e3o original lan\u00e7ada pelos blocos <b>try</b> ou <b>catch</b> associados dos handlers de exce\u00e7\u00e3o de fechamento. Observe que a exce\u00e7\u00e3o ainda pode ser inspecionada com o uso de <b>Throwable.getSuppressedException()</b>, embora n\u00e3o possa ser capturada diretamente por um bloco <b>catch</b>.<p/>Se a op\u00e7\u00e3o "<i>Reportar relan\u00e7amento de exce\u00e7\u00f5es capturadas</i>" estiver desativada, a dica n\u00e3o reportar\u00e1 instru\u00e7\u00f5es, o que apenas relan\u00e7a as mesmas inst\u00e2ncias de exce\u00e7\u00e3o recebidas por um handler de captura de fechamento.
DN_CloneAndCloneable_cloneWithoutSuperClone=clone() n\u00e3o chama super.clone()
DESC_CloneAndCloneable_cloneWithoutSuperClone=As inst\u00e2ncias clonadas devem ser alocadas usando <b>super.clone()</b>, dessa forma, os campos s\u00e3o inicializados adequadamente.
DN_CloneAndCloneable_cloneWithoutThrows=clone() n\u00e3o gera CloneNotSupportedException
DESC_CloneAndCloneable_cloneWithoutThrows=Se clone() n\u00e3o for declarado para gerar <b>CloneNotSupportedException</b>, as subclasses n\u00e3o podem proibir a clonagem usando o contrado <b>Clon\u00e1vel</b> padr\u00e3o.
DN_CloneAndCloneable_cloneInNonCloneableClass=clone() em uma classe n\u00e3o Clon\u00e1vel
DESC_CloneAndCloneable_cloneInNonCloneableClass=O contrato de <b>Object.clone()</b> exige que uma classe implemente uma interface do marcador <b>Clon\u00e1vel</b>. Caso isso n\u00e3o ocorra, o m\u00e9todo clone() gerar\u00e1 <b>CloneNotSupportedException</b>. Declarar a interface <b>Clon\u00e1vel</b> geralmente \u00e9 ignorado.
DN_CloneAndCloneable_cloneableWithoutClone=A classe clon\u00e1vel n\u00e3o implementa clone().
DESC_CloneAndCloneable_cloneableWithoutClone=<html>A classe <b>Clon\u00e1vel</b> deve substituir clone(). Se isso n\u00e3o ocorrer, a opera\u00e7\u00e3o de clonagem usar\u00e1 o <b>java.lang.Object.clone()</b> padr\u00e3o, que geralmente n\u00e3o \u00e9 adequado. A falta de substitui\u00e7\u00e3o de <b>clonagem</b> indica um poss\u00edvel erro.</html>
DN_BroadCatch=Cl\u00e1usula 'catch' muito grande
DESC_BroadCatch=Reporta cl\u00e1usulas <b>catch</b>, que capturam um supertipo, em vez do tipo de exce\u00e7\u00e3o gerada realmente. Tais catches grandes podem fornecer relat\u00f3rios inadequados ou tratamento de exce\u00e7\u00e3o geral. <p/>\u00c0s vezes o m\u00e9todo produz <b>mais que um</b> tipo de exce\u00e7\u00e3o que pode ser tratada, capturando o supertipo comum. A op\u00e7\u00e3o "<i>Reportar supertipos comuns</i>" controla se as situa\u00e7\u00f5es ser\u00e3o reportadas. As <i>exce\u00e7\u00f5es gen\u00e9ricas</i> configuradas para a dica <b>Usar Catch Espec\u00edfico</b> s\u00e3o sempre reportadas. 
DN_MathRandomCastInt=Math.random() convertido em inteiro
DESC_MathRandomCastInt=Math.random produz um valor dobrado na faixa 0..1. Se o valor for imediatamente convertido em inteiro, ele ser\u00e1 sempre arredondado para 0, o que provavelmente n\u00e3o \u00e9 o que se pretende. A corre\u00e7\u00e3o deslocar\u00e1 a convers\u00e3o, de modo que a express\u00e3o aritm\u00e9tica seja convertida e possivelmente arredondada.
DN_AssertWithSideEffects=Declarar com efeitos colaterais
DESC_AssertWithSideEffects=Identifica instru\u00e7\u00f5es cuja condi\u00e7\u00e3o causa alguns efeitos colaterais conhecidos. A dica verifica designa\u00e7\u00f5es a vari\u00e1veis e campos locais feitas na express\u00e3o de condi\u00e7\u00e3o. Se a express\u00e3o chamar um m\u00e9todo, a dica verificar\u00e1 se o m\u00e9todo est\u00e1 sendo designado a alguns campos. Apenas os m\u00e9todos <b>chamados diretamente</b> s\u00e3o verificados. Por raz\u00f5es de desempenho, apesar de o m\u00e9todo chamado poder ser resolvido para algumas substitui\u00e7\u00f5es em subclasses durante o runtime, apenas o corpo do m\u00e9todo de classe base \u00e9 inspecionado. As chamadas para os m\u00e9todos de tipo de interface s\u00e3o ignoradas completamente. A inspe\u00e7\u00e3o de todas as poss\u00edveis substitui\u00e7\u00f5es de um m\u00e9todo prejudicaria muito o desempenho.
DN_ComparatorParameterNotUsed=Comparator.compare() n\u00e3o usa o par\u00e2metro {0}
DESC_ComparatorParameterNotUsed=O Comparador dever\u00e1 comparar os argumentos com seu m\u00e9todo de compara\u00e7\u00e3o. Se um dos par\u00e2metros n\u00e3o for usado para compara\u00e7\u00e3o, ele indicar\u00e1 que o outro argumento poder\u00e1 ser comparado com ele mesmo ou com algum outro erro na implementa\u00e7\u00e3o.
DN_HashCodeOnArray=hashCode() usado na inst\u00e2ncia do array
DESC_HashCodeOnArray=O hashCode para inst\u00e2ncias do array foi herdado de java.lang.Object e se baseia na refer\u00eancia do array, e n\u00e3o no conte\u00fado dele.<p>Para obter um hashCode mais razo\u00e1vel, que reflita objetos ou valores contidos, use <b>Arrays.hashCode</b>ou <b>Arrays.deepHashCode()</b>
DN_ToStringOnArray=toString() usado na inst\u00e2ncia do array
DESC_ToStringOnArray=A implementa\u00e7\u00e3o de toString() para arrays n\u00e3o converte o conte\u00fado do array em String; em vez disso, ela imprime o tipo do array e o c\u00f3digo de hash (definido como c\u00f3digo de hash de identidade). Para obter uma representa\u00e7\u00e3o de string do conte\u00fado do array, o array pode ser, por exemplo, encapsulado em Arrays.asList(), da mesma forma que Coletas produzem uma representa\u00e7\u00e3o de conte\u00fado em toString().
DN_ConfusingVarargsArray=Array de primitiva confusa especificada para o m\u00e9todo varargs
DESCR_ConfusingVarargsArray=Um array de primitiva especificado para o m\u00e9todo de argumento da vari\u00e1vel n\u00e3o ser\u00e1 encapsulado e seus itens n\u00e3o ser\u00e3o vistos como itens do argumento do tamanho da vari\u00e1vel no m\u00e9todo chamado. Em vez disso, o array ser\u00e1 especificado como um item simples.
DN_InfiniteRecursion=Recurs\u00e3o infinita
DESCR_InfiniteRecursion=Detecta m\u00e9todos que dever\u00e3o se repetir infinitamente e que s\u00f3 poder\u00e3o ser encerrados por meio do lan\u00e7amento de uma exce\u00e7\u00e3o. Apenas recurs\u00f5es definitivas s\u00e3o reportadas, e n\u00e3o possibilidades. A recurs\u00e3o s\u00f3 \u00e9 inspecionada no m\u00e9todo simples (portanto, uma recurs\u00e3o como a -> b -> a n\u00e3o \u00e9 reportada). Uma recurs\u00e3o em diversas inst\u00e2ncias da classe n\u00e3o \u00e9 reportada. A dica pode ser desativada para o caso de o m\u00e9todo de recurs\u00e3o ser sobreposto em subclasses, pois as implementa\u00e7\u00f5es de subclasse podem evitar a recurs\u00e3o. No entanto, se alguma subclasse n\u00e3o for substitu\u00edda e corrigir o m\u00e9todo, a recurs\u00e3o ainda poder\u00e1 acontecer. Por padr\u00e3o, a inspe\u00e7\u00e3o emite uma advert\u00eancia mesmo para o caso substitu\u00edvel.
DN_MalformedXPathExpression=Express\u00e3o XPath mal formada
DESC_MalformedXPathExpression=A sintaxe de verifica\u00e7\u00e3o de dica da express\u00e3o XPath especificada para o avaliador XPath JAXP. As chamadas verificadas s\u00e3o:<ul><li>chamadas de compila\u00e7\u00e3o e avalia\u00e7\u00e3o XPath JAXP,<li>cria\u00e7\u00e3o de XPath Xalan-J e uso da API XPath,<li>chamadas JXPath do Apache Comum</ul>
DN_MalformedFormatString=String de formato mal formada
DESC_MalformedFormatString=Reporta strings de formato especificadas para os m\u00e9todos String.format e printf-style. Verifica se o n\u00famero de argumentos corresponde ao n\u00famero de % especificadores e se os argumentos t\u00eam o tipo correto. 
DN_WrapperIdentityComparison=Compara\u00e7\u00e3o de identidades de valores demarcados
DESC_WrapperIdentityComparison=Se dois valores demarcados forem comparados usando <i>==</i> ou <i>!=</i>, a identidade do objeto demarcado ser\u00e1 comparada, em vez do valor demarcado. A inspe\u00e7\u00e3o sugere uma corre\u00e7\u00e3o, o que executa uma compara\u00e7\u00e3o sem nulos usando <b>java.util.Objects.equals()</b>.<p/>A corre\u00e7\u00e3o s\u00f3 est\u00e1 dispon\u00edvel para um n\u00edvel de origem >= 7, pois uma express\u00e3o condicional exigiria uma avalia\u00e7\u00e3o m\u00faltipla de um dos operandos, o que talvez n\u00e3o seja poss\u00edvel por causa dos efeitos colaterais potenciais da express\u00e3o.
DN_StringBufferCharConstructor=Construtor StringBuffer chamado com o argumento "char''
DESC_StringBufferCharConstructor=Os construtores <b>StringBuffer</b> e <b>StringBuilder</b> aceitam <i>int</i> como par\u00e2metro. Se um <i>char</i> for especificado, ele ser\u00e1 promovido silenciosamente para int, e a chamada criar\u00e1 uma inst\u00e2ncia de <b>StringBuffer</b> com uma capacidade inicial definida, em vez de um StringBuffer que inicialmente contenha um \u00fanico caractere (o especificado).<p/>A corre\u00e7\u00e3o oferecida adicionar\u00e1 um <i>append</i> que, por sua vez, adicionar\u00e1 o caractere.
DN_SuspiciousToArray=Chamada Collections.toArray() suspeita
DESC_SuspiciousToArrayCall=Detecta chamadas cujo par\u00e2metro de tipo de array n\u00e3o corresponde ao par\u00e2metro de tipo da Coleta. O par\u00e2metro de tipo da coleta dever\u00e1 ser design\u00e1vel ao tipo de array. Para Coletas brutas, a dica verifica se o tipo de array ser\u00e1 design\u00e1vel ao tipo de array da convers\u00e3o.<p/>A dica se oferece para alterar o tipo de array rec\u00e9m-criado ou para alterar o par\u00e2metro <b>toArray</b> para <i>new Type[]</i>, mas a corre\u00e7\u00e3o n\u00e3o estar\u00e1 dispon\u00edvel se a express\u00e3o de coleta tiver alguns efeitos colaterais.
DN_CreatedThrowableNotThrown=Throwable criado n\u00e3o lan\u00e7ado
DESC_DN_CreatedThrowableNotThrown=A dica detectou a cria\u00e7\u00e3o de um Throwable, que foi descartado. A cria\u00e7\u00e3o de um Throwable tem alto custo, e n\u00e3o usar um Throwable criado pode indicar um c\u00f3digo de tratamento de erros n\u00e3o finalizado. O Throwable ser\u00e1 considerado <i>usado</i> se for lan\u00e7ado, especificado para um m\u00e9todo como um par\u00e2metro, retornado como o resultado de um m\u00e9todo ou designado a um campo. As poss\u00edveis designa\u00e7\u00f5es por meio de vari\u00e1veis locais tamb\u00e9m s\u00e3o inspecionadas para determinar se o valor ser\u00e1 finalmente <i>usado</i>.
DN_ThrowableMethodResultIgnored=O resultado do m\u00e9todo Throwable \u00e9 ignorado
DESC_ThrowableMethodResultIgnored=Se um Throwable for retornado de uma chamada de m\u00e9todo como um <i>valor de retorno</i> (em vez de ser lan\u00e7ado), normalmente, de alguma forma, ele ser\u00e1 registrado (designado), processado (especificado para outra chamada de m\u00e9todo) ou lan\u00e7ado. Ignorar esse Throwable ou us\u00e1-lo em alguma compara\u00e7\u00e3o simples indica um defeito no tratamento de erros ou que o m\u00e9todo dever\u00e1 retornar outro valor para economizar tempo para a cria\u00e7\u00e3o do rastreamento da pilha do Throwable.
DN_MissingSwitchcase=Instru\u00e7\u00e3o "case'' de switch possivelmente ausente
DESC_MissingSwitchcase=A dica detecta um erro de digita\u00e7\u00e3o em um label de <b>instru\u00e7\u00e3o switch</b> sem uma instru\u00e7\u00e3o <b>case</b>.<p/>Apesar de poder ser um label pretendido para a instru\u00e7\u00e3o seguinte, tamb\u00e9m pode ser uma ramifica\u00e7\u00e3o <b>case</b> pretendida em que a palavra-chave foi esquecida.
DESC_org.netbeans.modules.java.hints.RemoveUnnecessaryReturn=Remover Instru\u00e7\u00e3o de Retorno Desnecess\u00e1ria
DESC_redundantConditional=Instru\u00e7\u00e3o condicional redundante
DESC_redundantIf=Instru\u00e7\u00e3o if redundante
DESC_RemoveUnnecessaryBreakLabel=Remover Label Desnecess\u00e1rio na instru\u00e7\u00e3o de interrup\u00e7\u00e3o
DESC_RemoveUnnecessaryContinue=Remover Instru\u00e7\u00e3o de Continua\u00e7\u00e3o Desnecess\u00e1ria
DESC_RemoveUnnecessaryContinueLabel=Remover Label Desnecess\u00e1rio na instru\u00e7\u00e3o de continua\u00e7\u00e3o
DN_org.netbeans.modules.java.hints.RemoveUnnecessaryReturn=Remover Instru\u00e7\u00e3o de Retorno Desnecess\u00e1ria
DN_redundantConditional=Instru\u00e7\u00e3o condicional redundante
DN_redundantIf=Instru\u00e7\u00e3o if redundante
DN_RemoveUnnecessaryBreakLabel=Remover Label Desnecess\u00e1rio na interrup\u00e7\u00e3o
DN_RemoveUnnecessaryContinue=Remover Instru\u00e7\u00e3o de Continua\u00e7\u00e3o Desnecess\u00e1ria
DN_RemoveUnnecessaryContinueLabel=Remover Label Desnecess\u00e1rio na continua\u00e7\u00e3o
DN_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.protectedField=Campo Protegido
DESC_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.protectedField=Adverte sobre a exist\u00eancia de vari\u00e1veis protegidas
DN_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.publicField=Campo P\u00fablico
DESC_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.publicField=Adverte sobre a exist\u00eancia de vari\u00e1veis p\u00fablicas
DN_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.packageField=Campo do Pacote
DESC_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.packageField=Adverte sobre a exist\u00eancia de vari\u00e1veis vis\u00edveis no pacote
DN_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.privateField=Acesso de Campo Privado de Outro Objeto
DESC_org.netbeans.modules.java.hints.encapsulation.FieldEncapsulation.privateField=Adverte sobre acesso de campos privados de outros objetos
DN_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.publicCls=Classe Interna P\u00fablica
DESC_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.publicCls=Adverte sobre a exist\u00eancia de classe interna vis\u00edvel p\u00fablica
DN_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.protectedCls=Classe Interna Protegida
DESC_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.protectedCls=Adverte sobre a exist\u00eancia de classe interna vis\u00edvel protegida
DN_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.packageCls=Classe Interna Vis\u00edvel do Pacote
DESC_org.netbeans.modules.java.hints.encapsulation.ClassEncapsulation.packageCls=Adverte sobre a exist\u00eancia de classe interna vis\u00edvel no pacote
DN_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.collection=Retorno do Campo de Cole\u00e7\u00e3o
DESC_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.collection=Adverte sobre retorno de campos de cole\u00e7\u00e3o
DN_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.array=Retorno do Campo Array
DESC_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.array=Adverte sobre retorno de campos do array
DN_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.date=Retorno do Campo de Data ou Calend\u00e1rio
DESC_org.netbeans.modules.java.hints.encapsulation.ReturnEncapsulation.date=Adverte sobre retorno de campos java.util.Date ou java.util.Calendar
DN_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.collection=Designa\u00e7\u00e3o ao Campo de Cole\u00e7\u00e3o do Par\u00e2metro
DESC_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.collection=Adverte sobre a designa\u00e7\u00e3o de java.util.Collection nos campos
DN_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.array=Designa\u00e7\u00e3o ao Campo Array com Base no Par\u00e2metro
DESC_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.array=Adverte sobre a designa\u00e7\u00e3o de array nos campos
DN_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.date=Designa\u00e7\u00e3o ao Campo de Data ou Calend\u00e1rio com Base no Par\u00e2metro
DESC_org.netbeans.modules.java.hints.encapsulation.ParamEncapsulation.date=Adverte sobre a designa\u00e7\u00e3o de java.util.Date ou java.util.Calendar nos campos
DN_org.netbeans.modules.java.hints.finalize.CallFinalize=finalize() chamado explicitamente
DESC_org.netbeans.modules.java.hints.finalize.CallFinalize=Adverte sobre uma chamada expl\u00edcita de Object.finalize()
DN_org.netbeans.modules.java.hints.finalize.FinalizeNotProtected=finalize() n\u00e3o declarado protegido
DESC_org.netbeans.modules.java.hints.finalize.FinalizeNotProtected=Adverte sobre implementa\u00e7\u00f5es n\u00e3o protegidas de Object.finalize()
DN_org.netbeans.modules.java.hints.finalize.FinalizeDeclared=finalize() declarado
DESC_org.netbeans.modules.java.hints.finalize.FinalizeDeclared=Adverte sobre implementa\u00e7\u00f5es de Object.finalize()
DN_org.netbeans.modules.java.hints.finalize.FinalizeDoesNotCallSuper=finalize() n\u00e3o chama super.finalize()
DESC_org.netbeans.modules.java.hints.finalize.FinalizeDoesNotCallSuper=Adverte sobre implementa\u00e7\u00f5es de Object.finalize() que n\u00e3o chamam a implementa\u00e7\u00e3o de supertipos
DN_org.netbeans.modules.java.hints.jackpot.hintsimpl.LoggerStringConcat=Concatena\u00e7\u00e3o de string no logger
DESC_org.netbeans.modules.java.hints.jackpot.hintsimpl.LoggerStringConcat=N\u00e3o \u00e9 bom para o desempenho concatenar strings nas mensagens do logger. \u00c9 melhor usar uma mensagem de modelo com espa\u00e7os reservados que s\u00e3o substitu\u00eddos por valores concretos somente quando a mensagem for realmente ser registrada.
DESC_containsForIndexOf=Localiza usos de String.indexOf que podem ser substitu\u00eddos por String.contains
DESC_IteratorToFor=Substitui os usos simples de Iterador por um loop for correspondente.
DN_containsForIndexOf=String.indexOf pode ser substitu\u00edda por String.contains
DN_IteratorToFor=Usar loop for JDK 5
DN_org.netbeans.modules.java.hints.jdk.ThrowableInitCause=Throwable.initCause desnecess\u00e1rio
DESC_org.netbeans.modules.java.hints.jdk.ThrowableInitCause=Localiza chamadas de Throwable.initCause que podem ser substitu\u00eddas por chamadas simples do construtor. Quando a caixa de sele\u00e7\u00e3o "Nunca alterar o resultado de getMessage()" n\u00e3o estiver marcada, <code>(IllegalStateException) new IllegalStateException().initCause(ex)</code> ser\u00e1 reescrito como <code>new IllegalStateException(ex)</code>, que alterar\u00e1 o valor de getMessage(). Quando a caixa de sele\u00e7\u00e3o estiver marcada, o c\u00f3digo se tornar\u00e1 <code>new IllegalStateException(null, ex)</code>. Uma regra semelhante se aplica para a cria\u00e7\u00e3o de exce\u00e7\u00e3o de <code>getMessage()</code> ou <code>getLocalizedMessage()</code> da causa.
DN_org.netbeans.modules.java.hints.jdk.ConvertToStringSwitch=Usar altern\u00e2ncia de Strings quando poss\u00edvel.
DESC_org.netbeans.modules.java.hints.jdk.ConvertToStringSwitch=Marca cascatas de ifs que podem ser convertidas em altern\u00e2ncias de Strings.
DN_org.netbeans.modules.java.hints.jdk.JoinCatches=Unir se\u00e7\u00f5es catch utilizando multicatch
DESC_org.netbeans.modules.java.hints.jdk.JoinCatches=Unir se\u00e7\u00f5es catch utilizando multicatch
DN_org.netbeans.modules.java.hints.jdk.UseSpecificCatch=Utilizar catch espec\u00edfico
DESC_org.netbeans.modules.java.hints.jdk.UseSpecificCatch=Converte catch (Throwable) ou catch (Exce\u00e7\u00e3o) para multicatch (quando o n\u00edvel de origem de java for 7 ou superior) ou em v\u00e1rias cl\u00e1usulas de catch (para plataformas Java mais recentes) obtendo as exce\u00e7\u00f5es geradas pelo corpo try. Os tipos de exce\u00e7\u00e3o observadas podem ser configuradas; nomes totalmente qualificados devem ser usados.
DN_org.netbeans.modules.java.hints.jdk.ConvertToARM=Converter em try-with-resources
DESC_org.netbeans.modules.java.hints.jdk.ConvertToARM=Converte o bloco try finally em try-with-resources
DN_Javac_canUseDiamond=\u00c9 poss\u00edvel utilizar Diamond
DESC_Javac_canUseDiamond=Adverte em que lugares o operador Diamond do JDK 7 pode ser utilizado no lugar dos par\u00e2metros de tipo expl\u00edcito
DN_org.netbeans.modules.java.hints.jdk.AddUnderscores=Adicionar Sublinhado
DESC_org.netbeans.modules.java.hints.jdk.AddUnderscores=Proposto para adicionar sublinhados a literais de inteiros para melhorar sua legibilidade
DN_AnnotationProcessors.overridingGetSupportedAnnotations=AbstractProcessor.getSupportedAnnotationTypes() \u00e9 substitu\u00eddo
DESC_AnnotationProcessors.overridingGetSupportedAnnotations=Substituir Processor.getSupportedAnnotationTypes() pode levar a carregamentos de classes desnecess\u00e1rios durante o desenvolvimento e pode impedir otimiza\u00e7\u00f5es importantes. Considere a utiliza\u00e7\u00e3o de @javax.annotation.processing.SupportedAnnotationTypes
DN_Javac_canUseLambda=Converter em Lambda ou Refer\u00eancia de Membro
DESC_Javac_canUseLambda=Converte classes internas an\u00f4nimas em express\u00f5es lambda ou refer\u00eancias de membro
DN_UnnecessaryBoxing=Demarca\u00e7\u00e3o desnecess\u00e1ria
DESC_UnnecessaryBoxing=Uma demarca\u00e7\u00e3o expl\u00edcita usando, por exemplo, <b>new Integer(x)</b> ou <b>Integer.valueOf(x)</b> n\u00e3o \u00e9 necess\u00e1ria no JDK 5+. Esta dica detecta tais situa\u00e7\u00f5es e sugere a remo\u00e7\u00e3o da chamada de demarca\u00e7\u00e3o.
DN_UnnecessaryUnboxing=Cancelamento de demarca\u00e7\u00e3o desnecess\u00e1rio
DESC_UnnecessaryUnboxing=Um cancelamento de demarca\u00e7\u00e3o expl\u00edcito usando, por exemplo, <b>x.intValue()</b> n\u00e3o \u00e9 necess\u00e1rio no JDK 5+. A dica localiza tais chamadas e sugere a remo\u00e7\u00e3o.
DESC_ForLoopToFunctionalHint=Use opera\u00e7\u00f5es funcionais, em vez de loop de estilo imperativo.
DN_ForLoopToFunctionalHint=Usar Opera\u00e7\u00f5es Funcionais
DN_org.netbeans.modules.java.hints.perf.ManualArrayCopy=C\u00f3pia manual de array
DESC_org.netbeans.modules.java.hints.perf.ManualArrayCopy=Localiza ocorr\u00eancias de c\u00f3pias manuais de array via loop for
DN_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Uso de .size() == 0
DESC_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Usar .isEmpty() ou !.isEmpty() em vez de .size() == 0 ou .size() != 0 quando poss\u00edvel.
DN_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=Construtor String
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=O uso do construtor java.lang.String \u00e9 geralmente in\u00fatil.
DN_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=String.equals("")
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=O uso de String.equals("") pode ser substitu\u00eddo por String.length() == 0 (no JDK5 e inferior) ou String.isEmpty() (no JDK6 e superior)
DN_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Uso in\u00fatil de StringBuffer
DESC_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Usar StringBuilder em vez de StringBuffer quando poss\u00edvel.
DN_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=Tamanho de uma String em String.indexOf
DESC_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=O tamanho de uma String literal em String.indexOf pode ser substitu\u00eddo por uma literal de caractere
DN_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=.getClass() substitu\u00edvel por .class
DESC_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=Localiza inst\u00e2ncias de uma classe diretamente seguidas pela chamada de .getClass() no objeto rec\u00e9m-constru\u00eddo
DN_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=String.intern() chamada na constante
DESC_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=As chamadas de String.intern() em constantes em tempo de compila\u00e7\u00e3o s\u00e3o desnecess\u00e1rias
DN_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=Criando novo Booliano
DESC_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=A cria\u00e7\u00e3o de novo Booliano \u00e9 ineficiente e normalmente in\u00fatil.
DN_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Cole\u00e7\u00f5es sem capacidade inicial
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Procura inst\u00e2ncias de cole\u00e7\u00f5es sem capacidade inicial. S\u00e3o testadas somente as cole\u00e7\u00f5es com array.
DN_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=StringBuilder sem capacidade inicial
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=Procura inst\u00e2ncias de StringBuilder ou StringBuffer sem capacidade inicial.
DN_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Set substitu\u00edvel por EnumSet
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Localiza inst\u00e2ncias de Set que podem ser substitu\u00eddas por EnumSet
DN_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Map substitu\u00edvel por EnumMap
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Localiza inst\u00e2ncias de Map que podem ser substitu\u00eddas por EnumMap
DN_org.netbeans.modules.java.hints.perf.Tiny.collectionsToArray=Array de elemento zero especificado para Collection.toArray
DESC_org.netbeans.modules.java.hints.perf.Tiny.collectionsToArray=A especifica\u00e7\u00e3o de array de elemento zero para Collection.toArray pode afetar o desempenho
DN_ReplaceBufferByString=Substituir StringBuffer/StringBuilder por String
DESC_ReplaceBufferByString=A dica localizar\u00e1 e se oferecer\u00e1 para substituir inst\u00e2ncias de <b>StringBuffer</b> ou <b>StringBuilder</b> acessadas por m\u00e9todos <b>String</b> comuns e que nunca s\u00e3o especificadas para fora do m\u00e9todo ou s\u00e3o designadas a outra vari\u00e1vel. Manter esses dados em StringBuffer/Builder n\u00e3o faz sentido, e String seria mais eficiente.
DN_BoxingOfBoxedValue=Demarca\u00e7\u00e3o de valor j\u00e1 demarcado
DESC_BoxingOfBoxedValue=Reporta a demarca\u00e7\u00e3o de um valor j\u00e1 demarcado. O construtor ou <i>valueOf</i> utiliza um par\u00e2metro primitivo; portanto, um valor demarcado tem a demarca\u00e7\u00e3o cancelada primeiro e \u00e9 demarcado novamente, o que pode criar uma inst\u00e2ncia extra do encapsulador e afetar o desempenho.
DN_RedundantToString=String.toString() redundante
DESC_RedundantToString=Reporta chamadas de String.toString() completamente in\u00fateis; a String pode ser usada diretamente.
DN_UnnecessaryTempFromString=Inst\u00e2ncia tempor\u00e1ria desnecess\u00e1ria durante a convers\u00e3o de String
DESC_UnnecessaryTempFromString=Localiza ocorr\u00eancias de <i>new Integer("111").intValue()</i> e constru\u00e7\u00f5es semelhantes nas quais a inst\u00e2ncia demarcada \u00e9 criada apenas para fazer parsing do par\u00e2metro String. Os tipos de demarca\u00e7\u00e3o t\u00eam m\u00e9todos <i>parseXXX</i> que executam a convers\u00e3o sem criar a inst\u00e2ncia tempor\u00e1ria.
DN_UnnecessaryTempToString=Inst\u00e2ncia tempor\u00e1ria desnecess\u00e1ria durante a convers\u00e3o para String
DESC_UnnecessaryTempToString=Localiza lugares como <i>new Integer(11).toString()</i>, nos quais uma inst\u00e2ncia demarcada tempor\u00e1ria \u00e9 criada apenas para produzir uma representa\u00e7\u00e3o de String de uma primitiva. Os tipos de demarca\u00e7\u00e3o t\u00eam o m\u00e9todo est\u00e1tico <i>toString()</i> apenas para esse objetivo.
DESC_addExplicitLambdaParameters=Converte lambdas para usar tipos de par\u00e2metro expl\u00edcitos
DESC_expression2Return=Converte corpos lambda para usar blocos, em vez de express\u00f5es
DESC_FlipOperands=Girar operandos do operador bin\u00e1rio
DESC_ImplementMethods=Implementar M\u00e9todos Abstratos
DESC_InvertIf=Inverter\u00e1 uma instru\u00e7\u00e3o if, negar\u00e1 a condi\u00e7\u00e3o e alternar\u00e1 as instru\u00e7\u00f5es das se\u00e7\u00f5es then e else.
DESC_JoinElseIf=Converte casos como <code>if - else { if }</code> info <code>if - else if</code>
DESC_lambda2Class=Converte express\u00f5es lambda em classes internas an\u00f4nimas
DESC_lambda2MemberReference=Converte express\u00f5es lambda em refer\u00eancias de membro
DESC_memberReference2Lambda=Converte refer\u00eancias de membro em express\u00f5es lambda
DESC_org.netbeans.modules.java.hints.suggestions.Move.moveInitialization=Move uma express\u00e3o de inicializa\u00e7\u00e3o de campos para os construtores.
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.extractIf=Divide uma instru\u00e7\u00e3o if com uma condi\u00e7\u00e3o complexa, como instru\u00e7\u00e3o <code>if (cond1 || cond2);</code>, em duas instru\u00e7\u00f5es if, como instru\u00e7\u00e3o <code>if (cond1); instru\u00e7\u00e3o else if (cond2);</code>.
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.mergeIfs=Combina duas instru\u00e7\u00f5es if aninhadas, como instru\u00e7\u00e3o <code>if (cond1) if (cond2);</code>, em uma instru\u00e7\u00e3o if, como instru\u00e7\u00e3o <code>if (cond1 && cond2);</code>.
DESC_splitIfCondition=Divide if cuja condi\u00e7\u00e3o \u00e9 || em dois ifs
DESC_ToOrIf=Converte casos como instru\u00e7\u00e3o <code>if (cond1); instru\u00e7\u00e3o else if (cond2);</code> em instru\u00e7\u00e3o <code>if (cond1 || cond2);</code>
DN_addExplicitLambdaParameters=Converter Lambda para Usar Tipos de Par\u00e2metros Expl\u00edcitos
DN_expression2Return=Converter Corpo Lambda para Usar um Bloco
DN_FlipOperands=Girar operandos do operador bin\u00e1rio
DN_ImplementMethods=Implementar M\u00e9todos Abstratos
DN_InvertIf=Inverter Se
DN_JoinElseIf=Junta ifs consecutivos em if-else
DN_lambda2Class=Converter Express\u00e3o Lambda em Classe Interna An\u00f4nima
DN_lambda2MemberReference=Converter Express\u00e3o Lambda em Refer\u00eancias de Membro
DN_memberReference2Lambda=Converter Refer\u00eancia de Membro em Express\u00e3o Lambda
DN_org.netbeans.modules.java.hints.suggestions.Move.moveInitialization=Mover inicializa\u00e7\u00e3o para construtor
DN_org.netbeans.modules.java.hints.suggestions.Tiny.extractIf=Dividir a condi\u00e7\u00e3o da instru\u00e7\u00e3o if
DN_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=Inverter .equals
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=Permite inverter o par\u00e2metro .equals e chamar local
DN_org.netbeans.modules.java.hints.suggestions.Tiny.mergeIfs=Combinar instru\u00e7\u00f5es if aninhadas
DN_splitIfCondition=Dividir condi\u00e7\u00e3o if
DN_ToOrIf=Dividir condi\u00e7\u00f5es if usando ||
DN_TooStrongCast=Tipo de transmiss\u00e3o muito forte
DN_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=Converter constante inteira em outra base
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=Converter constante inteira em outra base
DN_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=Expans\u00e3o Aprimorada para o Loop
DESC_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=Expans\u00e3o Aprimorada para o Loop
DN_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=Dividir Declara\u00e7\u00e3o
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=Divide a declara\u00e7\u00e3o com o inicializador em uma declara\u00e7\u00e3o e uma designa\u00e7\u00e3o
DN_org.netbeans.modules.java.hints.suggestions.CreateSubclass=Criar Subclasse
DESC_org.netbeans.modules.java.hints.suggestions.CreateSubclass=Criar Subclasse
DN_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=Preencher Cases Ausentes para Altern\u00e2ncia
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=Adiciona cases \u00e0 instru\u00e7\u00e3o de altern\u00e2ncia. O modelo de cl\u00e1usula default deve ser uma instru\u00e7\u00e3o Java; ocorr\u00eancias de $expression ser\u00e3o substitu\u00eddas pela express\u00e3o em que a instru\u00e7\u00e3o de altern\u00e2ncia atua.
DESC_TooStrongCast=Reporta tipos de transmiss\u00f5es que s\u00e3o muito restritas e a transmiss\u00e3o para um tipo mais geral seria suficiente para a express\u00e3o real. \u00c0s vezes, uma inst\u00e2ncia \u00e9 transmitida para um subtipo espec\u00edfico, mas os m\u00e9todos chamados ou campos usados da inst\u00e2ncia transmitida, geralmente s\u00e3o definidos por algum supertipo. Neste caso, transmitir para um tipo espec\u00edfico introduz um acoplamento desnecess\u00e1rio para o c\u00f3digo e limita sua extensibilidade. <p/>Esta inspe\u00e7\u00e3o ir\u00e1 sugerir usar o tipo mais geral que satisfa\u00e7a as necessidades da express\u00e3o. 
DN_ConvertIfToSwitch=Substituir cadeia de ifs por switch
DESC_ConvertIfToSwitch=\u00c0s vezes, instru\u00e7\u00f5es <i>if</i> s\u00e3o encadeadas e formam uma s\u00e9rie de compara\u00e7\u00f5es == com constantes. Essa situa\u00e7\u00e3o ser\u00e1 melhor lida se gravada com o uso da instru\u00e7\u00e3o <i>switch</i><. Essa dica sugere a altera\u00e7\u00e3o se o n\u00famero de <i>if</i>s exceder um limite.
DN_ConstantNameHint=Conven\u00e7\u00f5es de nomes de constantes
DESC_ConstantNameHint=Verifica se os nomes das constantes seguem as conven\u00e7\u00f5es estabelecidas. Uma constante \u00e9 o campo <b>est\u00e1tico</b> e <b>final</b>. A conven\u00e7\u00e3o de nomes \u00e9 definida usando uma express\u00e3o regular com tamanho m\u00ednimo e m\u00e1ximo do identificador. Se um tamanho for definido como 0, a restri\u00e7\u00e3o n\u00e3o ser\u00e1 aplicada. Defina a express\u00e3o de correspond\u00eancia como string vazia para desativar correspond\u00eancias de express\u00e3o regular. <p/>Se <i>Verificar somente tipos imut\u00e1veis</i> estiver marcado, somente primitivas e valores imut\u00e1veis ser\u00e3o verificados. Os valores imut\u00e1veis incluem <b>nulos</b>, arrays de tamanho zero (de qualquer tipo), valores de enumera\u00e7\u00e3o e determinadas classes JDK predefinidas, como <b>java.awt.Color</b> e semelhantes.<p/>Voc\u00ea pode aumentar a lista de tipos tratados como valores imut\u00e1veis com suas pr\u00f3prias classes.
DESC_assertEqualsForArrays=Adverte sobre assertEquals cujos par\u00e2metros s\u00e3o arrays
DESC_assertEqualsIncovertibleTypes=Par\u00e2metros n\u00e3o convert\u00edveis de Assert.assertEquals
DESC_assertEqualsMismatchedConstantVSReal=Ordem incorreta de par\u00e2metros de Assert.assertEquals
DN_assertEqualsForArrays=assertEquals para par\u00e2metros de array
DN_assertEqualsIncovertibleTypes=Par\u00e2metros n\u00e3o convert\u00edveis de Assert.assertEquals
DN_assertEqualsMismatchedConstantVSReal=Ordem incorreta de par\u00e2metros de Assert.assertEquals
DESC_CanBeFinal=Localiza campos que podem se tornar finais, o que pode simplificar a sincroniza\u00e7\u00e3o e clareza
DN_CanBeFinal=O Campo Pode ser Final
DN_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Chamando Condition.notify()
DESC_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=A chamada a notify ou notifyAll em java.util.concurrent.locks.Condition deve provavelmente ser substitu\u00edda pela chamada signal ou signalAll.
DN_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Chamando Condition.wait()
DESC_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=\u00c9 prov\u00e1vel que a chamada para aguardar java.util.concurrent.locks.Condition n\u00e3o tenha sido intencional.
DN_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Chamando Thread.run()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadRun=A chamada \u00e0 execu\u00e7\u00e3o de java.lang.Thread deve ser provavelmente substitu\u00edda pela chamada do m\u00e9todo start()
DN_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Iniciando Thread no construtor
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=O in\u00edcio de um novo Thread no construtor \u00e9 perigoso e deve ser evitado.
DN_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Chamando Thread.yield()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadYield=A chamada do m\u00e9todo yield() em java.lang.Thread \u00e9 geralmente usada para disfar\u00e7ar os problemas de sincroniza\u00e7\u00e3o e deve ser evitada.
DN_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Chamando Thread.stop()/suspend()/resume()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Os m\u00e9todos stop(), suspend() e resume() de java.lang.Thread s\u00e3o perigosos e n\u00e3o devem ser usados.
DN_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Blocos sincronizados aninhados
DESC_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=O aninhamento de blocos sincronizados \u00e9 in\u00fatil (se eles usarem o mesmo objeto de bloqueio) e perigoso.
DN_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Bloco sincronizado vazio
DESC_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Os blocos sincronizados vazios s\u00e3o geralmente in\u00fateis
DN_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Sincronizando em Lock
DESC_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=A sincroniza\u00e7\u00e3o em java.util.concurrent.locks.Lock \u00e9 geralmente n\u00e3o intencional e deve ser substitu\u00edda por Lock.lock()-Lock.unlock()
DN_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Campo de array vol\u00e1til
DESC_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Localiza declara\u00e7\u00f5es de campos de arrays vol\u00e1teis.
DN_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Lock n\u00e3o desbloqueado em finally
DESC_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Localiza ocorr\u00eancias de Lock.lock()-Lock.unlock() n\u00e3o encapsulado apropriadamente em try-finally.
DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait chamado fora de um contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait chamado fora de um contexto sincronizado
DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify chamado fora de um contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify chamado fora de um contexto sincronizado
DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Thread.sleep em contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=A chamada a Thread.sleep em contexto sincronizado pode causar problemas de desempenho
DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Thread.sleep em loop
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=A chamada a Thread.sleep em loop pode causar problemas de desempenho
JarResolver=Arquivo Compactado Java
CopyLibs=Tarefa CopyLibs
template_app=Aplica\u00e7\u00e3o Java
template_existing=Projeto Java com C\u00f3digos-fonte Existentes
template_library=Biblioteca de Classe Java
Templates/Project/Standard=Java
DN_MethodTooComplex=O m\u00e9todo \u00e9 muito complexo
DESC_MethodTooComplex=A inspe\u00e7\u00e3o reporta o m\u00e9todo, cuja <b>Complexidade Ciclom\u00e1tica</b> excede um valor configur\u00e1vel. A <i>Complexidade Ciclom\u00e1tica</i> mede v\u00e1rios pontos de ramifica\u00e7\u00e3o potencial (ou ciclos) em um m\u00e9todo. Acredita-se que m\u00e9todos com complexidade ciclom\u00e1tica geralmente funcionam muito mais e devem ser divididos em v\u00e1rios m\u00e9todos, mais focados. Tais m\u00e9todos complexos tamb\u00e9m s\u00e3o propensos a codificar duplica\u00e7\u00e3o entre os caminhos de execu\u00e7\u00e3o e s\u00e3o dif\u00edceis de manter. Geralmente, recomendamos que a complexidade ciclom\u00e1tica de um m\u00e9todo seja 5 ou inferior; menor que 10 tamb\u00e9m pode ser aceit\u00e1vel para algoritmos mais elaborados. 
DN_MethodTooDeepNesting=Aninhamento muito profundo
DESC_MethodTooDeepNesting=Reporta m\u00e9todos cujos corpos cont\u00eam instru\u00e7\u00f5es aninhadas <i>muito profundas</i>. Tais m\u00e9todos s\u00e3o menos leg\u00edveis, cont\u00e9m recuo e permite espa\u00e7o menor da tela para leitura do c\u00f3digo. Os m\u00e9todos, geralmente podem ser refatorados e divididos para melhorar a capacidade de leitura do c\u00f3digo.
DN_MethodTooLong=O corpo do m\u00e9todo \u00e9 muito grande
DESC_MethodTooLong=Reporta m\u00e9todos que t\u00eam corpo muito grande. Os m\u00e9todos maiores exigem rolagem alternada e geralmente, podem ser refatorados em v\u00e1rios m\u00e9todos chamados de um m\u00e9todo de media\u00e7\u00e3o. Dividir um m\u00e9todo longo em v\u00e1rias partes nomeadas tamb\u00e9m pode ajudar a reutilizar o c\u00f3digo. Algumas pr\u00e1ticas de codifica\u00e7\u00e3o demandam que um m\u00e9todo deve ajustar-se a um tamanho de tela, dessa forma, isso pode ser facilmente digitalizado e compreendido pelo desenvolvedor.
DN_MethodTooManyExceptions=O m\u00e9todo ou construtor declara muitas exce\u00e7\u00f5es
DESC_MethodTooManyExceptions=Reporta m\u00e9todos que declaram muitas exce\u00e7\u00f5es em sua cl\u00e1usula <b>throws</b>. O m\u00e9todo que produz um grande n\u00famero de tipos de exce\u00e7\u00e3o s\u00e3o dif\u00edceis de usar, pois o chamador deve tratar todos os resultados ou complicar sua pr\u00f3pria declara\u00e7\u00e3o com exce\u00e7\u00f5es. O c\u00f3digo de tratamento de erro fica mais complexo. <p/>A inspe\u00e7\u00e3o tamb\u00e9m processa construtores.
DN_MethodTooManyParameters=O m\u00e9todo declara muitos par\u00e2metros
DESC_MethodTooManyParameters=Reporta o m\u00e9todo que utiliza muitos par\u00e2metros. Os m\u00e9todos com um n\u00famero grande de par\u00e2metros indica um design incorreto. \u00c9 prov\u00e1vel que mais par\u00e2metros sejam adicionados no futuro, de forma que os par\u00e2metros devem ser agrupados em um Objeto de Comando, melhorando os custos de manuten\u00e7\u00e3o. Se preferir, o m\u00e9todo pode ser refatorado em v\u00e1rios m\u00e9todos, cada um fazendo parte da tarefa e exigindo menos par\u00e2metros na entrada.
DN_CtorTooManyParameters=O construtor declara muitos par\u00e2metros
DESC_CtorTooManyParameters=Reporta construtor que tem muitos par\u00e2metros. Os construtores geralmente tem mais par\u00e2metros que um m\u00e9todo regular, principalmente ao iniciar um objeto grande.<p/>Grande n\u00famero de par\u00e2metros indica um design incorreto. \u00c9 prov\u00e1vel que mais par\u00e2metros sejam adicionados no futuro, assim os padr\u00f5es de cria\u00e7\u00e3o como Builder devem ser considerados.
DN_MethodMultipleReturns=M\u00e9todo com v\u00e1rios pontos de retorno
DESC_MethodMultipleReturns=Reporta m\u00e9todos que saem em v\u00e1rios locais usando a instru\u00e7\u00e3o <b>return</b>. Tais m\u00e9todos podem confundir e serem dif\u00edceis de refatorar. A inspe\u00e7\u00e3o pode ignorar <b>guard returns</b> - uma instru\u00e7\u00e3o <b>return</b>, que \u00e9 a instru\u00e7\u00e3o \u00fanica em uma ramifica\u00e7\u00e3o <b>if</b>. Se preferir, todos os m\u00e9todos <b>equals</b> podem ser ignorados, pois o conte\u00fado de <b>equals</b> \u00e9 tradicionalmente gerado usando retornos antecipados na incompatibilidade de tipo ou valor.
DN_MethodMultipleNegations=O m\u00e9todo com v\u00e1rias nega\u00e7\u00f5es
DESC_MethodMultipleNegations=M\u00e9todos com v\u00e1rias express\u00f5es negadas (unary <b>!</b> or <b>!=</b>) s\u00e3o mencionados para confundir os leitores, express\u00f5es verdadeiras (n\u00e3o negadas) s\u00e3o consideradas mais f\u00e1ceis de ler e entender. Altere a l\u00f3gica para usar valores verdadeiros, em vez de falsos.
DN_MethodMultipleLoops=M\u00e9todo com v\u00e1rios loops
DESC_MethodMultipleLoops=M\u00e9todos que cont\u00eam v\u00e1rias instru\u00e7\u00f5es de loop. 
DN_MethodCoupled=M\u00e9todo muito acoplado
DESC_MethodCoupled=Reporta m\u00e9todos que est\u00e3o muito acoplados - que se referem a muitos outros tipos. Os m\u00e9todos que se referem a um grande n\u00famero de tipos s\u00e3o <i>fr\u00e1geis</i>: eles t\u00eam tend\u00eancia a falhar ou exigem refatora\u00e7\u00e3o, se os tipos referenciados forem alterados. Tamb\u00e9m \u00e9 mais dif\u00edcil mover o m\u00e9todo que tem muitas depend\u00eancias para outro m\u00f3dulo. <p/>As refer\u00eancias \u00e0 pr\u00f3pria classe do m\u00e9todo e suas superclasses s\u00e3o ignoradas. Com <i>Ignorar depend\u00eancias na Plataforma Java</i>, as refer\u00eancias para <code>java.**</code> e <code>javax.**</code> tamb\u00e9m s\u00e3o ignoradas.
DN_ClassTooComplex=A classe \u00e9 muito complexa
DESC_ClassTooComplex=Reporta classes, cuja complexidade ciclom\u00e1tica excede o limite configurado. A complexidade de uma classe \u00e9 calculada como uma soma de complexidades de seus m\u00e9todos.
DN_ClassAnonymousTooComplex=A classe an\u00f4nima \u00e9 muito complexa
DESC_ClassAnonymousTooComplex=Reporta classes an\u00f4nimas, cuja complexidade ciclom\u00e1tica excede o limite configurado. A complexidade de uma classe \u00e9 calculada como uma soma de complexidades de seus m\u00e9todos. As classes an\u00f4nimas devem ter menos responsabilidades e menor complexidade que uma classe regular.
DN_ClassTooCoupled=Classe muito acoplada
DESC_ClassTooCoupled=Reporta classes que est\u00e3o muito acopladas (usa muitos) a outros tipos. As refer\u00eancias \u00e0s bibliotecas do sistema Java (<code>java.**</code> and <code>javax.**</code>) podem ser ignoradas.
DN_ComplexArithmeticExpression=Express\u00e3o aritm\u00e9tica muito complexa
DESC_ComplexArithmeticExpression=Reporta express\u00f5es aritm\u00e9ticas que incluem mais que o n\u00famero definido de opera\u00e7\u00f5es. A express\u00e3o com muitos operandos s\u00e3o mais dif\u00edceis de ler e geralmente pode ser dividida em v\u00e1rias instru\u00e7\u00f5es de atribui\u00e7\u00e3o para vari\u00e1veis de resultado tempor\u00e1rias.
DN_ComplexLogicalExpression=Express\u00e3o l\u00f3gica muito complexa
DESC_ComplexLogicalExpression=Reporta express\u00f5es l\u00f3gicas que incluem mais que o n\u00famero definido de opera\u00e7\u00f5es. A express\u00e3o com muitos operandos s\u00e3o mais dif\u00edceis de ler e geralmente pode ser dividida em v\u00e1rias instru\u00e7\u00f5es de atribui\u00e7\u00e3o para vari\u00e1veis de resultado tempor\u00e1rias.
DN_ClassConstructorCount=A classe tem muitos construtores
DESC_ClassConstructorCount=Reporta classes que definem muitos construtores. 
DN_AnonClassMethodCount=A classe an\u00f4nima tem muitos m\u00e9todos
DESC_AnonClassMethodCount=Reporta classe an\u00f4nima com muitos m\u00e9todos. As classes an\u00f4nimas geralmente implementam uma interface muito simples e devem ser muito simples. Recomendamos criar pelo menos classe local com nome, se a complexidade da classe an\u00f4nima aumentar.
DN_ClassMethodCount=A classe tem muitos m\u00e9todos
DESC_ClassMethodCount=Reporta classe que cont\u00e9m muitos m\u00e9todos. As op\u00e7\u00f5es permitem ignorar antecessores da propriedade bean simples - getters ou setters inativos que acionam eventos de altera\u00e7\u00e3o n\u00e3o s\u00e3o considerados 'simples'. As implementa\u00e7\u00f5es de m\u00e9todos abstratos da superclasse (n\u00e3o implementa\u00e7\u00e3o dos m\u00e9todos da interface) tamb\u00e9m podem ser ignoradas.
DN_ClassFieldCount=A classe tem muitos campos
DESC_ClassFieldCount=Reporta uma classe que mant\u00e9m muitos campos. O estado mantido pela classe \u00e9 muito grande e deve ser investigado, se o estado puder ser dividido em v\u00e1rias classes de estado, geralmente tamb\u00e9m separa m\u00e9todos de manipula\u00e7\u00e3o e reduz a complexidade geral da classe.
Templates/Services/Platforms/org-netbeans-api-java-Platform/javaplatform.xml=Plataforma Java
Templates/Services/Platforms/org-netbeans-api-java-Platform=Plataformas Java
Templates/Services/Platforms=Plataformas
Templates/Services=Servi\u00e7os
AnnotationType.java=Tipo de Anota\u00e7\u00e3o Java
Applet.java=Applet
Class.java=Classe Java
Empty.java=Arquivo Java Vazio
Enum.java=Enum Java
Exception.java=Exce\u00e7\u00e3o Java
Interface.java=Interface Java
JApplet.java=JApplet
Main.java=Classe Java Principal
packageInfoWizard=Informa\u00e7\u00f5es sobre Pacote Java
packageWizard=Pacote Java
Singleton.java=Classe Singleton Java
Templates/Classes=Java
ClassResolver=Arquivos de Classe
JavaResolver.FileChooserName=Arquivos Java
JavaResolver.Name=Arquivos Java
GeneratedMethodBody=Corpo do M\u00e9todo Gerado
OverriddenMethodBody=Corpo do M\u00e9todo Substitu\u00eddo
Templates/Classes/Code=Excertos de C\u00f3digo
DESC_CreateTestClassHint=Cria uma classe de teste para a classe de c\u00f3digo-fonte selecionada.
DESC_CreateTestMethodsHint=Gera todos os m\u00e9todos de teste para a classe de c\u00f3digo-fonte selecionada.
DN_CreateTestClassHint=Criar Classe de Teste
DN_CreateTestMethodsHint=Gera Todos os M\u00e9todos de Teste
DN_CREATE_JAVADOC_HINT=Criar Javadoc
DESC_CREATE_JAVADOC_HINT=Criar Javadoc
DN_ERROR_IN_JAVADOC_HINT=Erro em Javadoc
DESC_ERROR_IN_JAVADOC_HINT=Erro em Javadoc
JnlpTemplate=Arquivo JNLP
JNLPResolver=Arquivos JNLP
JWSAntTasks=Tarefas do Ant JWS
Templates/UnitTests/SimpleJUnitTest.java=Teste para a Classe Existente
Templates/UnitTests/EmptyJUnitTest.java=Teste JUnit
Templates/UnitTests/TestSuite.java=Conjunto de Testes
Templates/UnitTests/JUnit3TestClass.java=Classe de Teste - JUnit 3.x
Templates/UnitTests/JUnit3Suite.java=Conjunto de Testes - JUnit 3.x
Templates/UnitTests/JUnit4TestClass.java=Classe de Teste - JUnit 4.x
Templates/UnitTests/JUnit4Suite.java=Conjunto de Testes - JUnit 4.x
Templates/UnitTests/junit-custom.xml=Script de execu\u00e7\u00e3o personalizado do JUnit
POMResolver=Arquivos POM Apache Maven

template.activator=Ativador de Pacote
template.project.OSGi=Pacote OSGi
LBL_Maven_JavaFx_Archetype=Aplica\u00e7\u00e3o JavaFX
LBL_Maven_JavaFx_Sample_Archetype=Exemplo de MigPane de FXML de Maven
template.existing=Projeto com POM Existente
template.pickArchetype=Projeto do Arqu\u00e9tipo

LBL_Maven_POM_Archetype=Projeto POM
LBL_Maven_Quickstart_Archetype=Aplica\u00e7\u00e3o Java
TIT_Maven_Category=Maven
KW_MavenOptions=Vers\u00e3o do Maven,Op\u00e7\u00f5es do Maven,Op\u00e7\u00f5es do reposit\u00f3rio Maven
LBL_Nashorn=Nashorn
KW_JavaScript=JavaScript,Nashorn
CTL_MenuItem=Projeto &Eclipse...
SeleniumTestCase_displayName=Caso de Teste do Selenium
Templates/SpringFramework=Spring Framework
Templates/SpringFramework/SpringXMLConfig.xml=Arquivo de Configura\u00e7\u00e3o XML do Spring
EmptyTestNGTest_displayName=Caso de Teste TestNG
suite.resolver=Arquivo TestNGSuite

TestNGSuite_displayName=Conjunto de Testes TestNG

Templates/SaaSServices=Servi\u00e7os SaaS
Templates/XML/JavaXMLBinding=Vincula\u00e7\u00e3o JAXB
JAXBResolver=Vincula\u00e7\u00e3o JAXB











