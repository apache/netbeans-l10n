OpenIDE-Module-Display-Category=Ruby
OpenIDE-Module-Name=Edi\u00e7\u00e3o Ruby
Services/MIMEResolver/ruby-mime-resolver.xml=Arquivos Ruby
text/x-ruby=Ruby
text/x-ruby-string-double=Strings Ruby citadas
text/x-ruby-string-single=Strings Ruby
text/x-ruby-comment=Coment\u00e1rios Ruby

ruby-reflow-paragraph=Reformatar par\u00e1grafo
editor-popup-ruby-reflow-paragraph=Reformatar par\u00e1grafo

NoRename=N\u00e3o pode renomear este s\u00edmbolo; somente par\u00e2metros, vari\u00e1veis locais e din\u00e2micas s\u00e3o permitidas
NoRenameWithErrors=N\u00e3o pode renomear quando o c\u00f3digo-fonte cont\u00e9m erros
UnexpectedError=Erro de sintaxe, n\u00e3o era esperado {0}
OptionsCategory_Name=Ruby
OptionsCategory_Title=Ruby
UnsafeIdentifierName=Somente a-z, A-Z, d\u00edgitos e sublinhados s\u00e3o nomes seguros em Ruby

## TEMPORARY -- this should be removed soon
# because the colors should be added dynamically from the infrastructure
ERROR=Erro
CLASS_VAR=Vari\u00e1vel de classe
REGEXP_LITERAL=Express\u00e3o regular
LINE_COMMENT=Coment\u00e1rio de linha
CONSTANT=Constante
INT_LITERAL=N\u00famero
IDENTIFIER=Identificador
keyword=Palavra-chave
WHITESPACE=Espa\u00e7o em branco
FLOAT_LITERAL=N\u00famero de ponto flutuante
ANY_OPERATOR=Operador
INSTANCE_VAR=Inst\u00e2ncia
STRING_INVALID=String inv\u00e1lida
GLOBAL_VAR=Vari\u00e1vel global
STRING_LITERAL=String
DOUBLE_LITERAL=Duplo
BLOCK_COMMENT=Coment\u00e1rio em bloco
STRING_TEXT=String
QUOTED_STRING_LITERAL=String citada
LONG_LITERAL=Longo
STRING_ESCAPE=String de escape
DOCUMENTATION=Documentation
COMMENT_TEXT=Texto de coment\u00e1rio
COMMENT_TODO=Texto de coment\u00e1rio TODO
COMMENT_RDOC=Marca\u00e7\u00e3o de coment\u00e1rio RDoc
COMMENT_HTMLTAG=Marca\u00e7\u00e3o de coment\u00e1rio HTML
COMMENT_LINK=Link de coment\u00e1rio
COMMENT_BOLD=Coment\u00e1rio negrito
COMMENT_ITALIC=Coment\u00e1rio it\u00e1lico
TYPE_SYMBOL=Tipo do s\u00edmbolo
REGEXP_TEXT=Express\u00e3o regular
REGEXP_META=Metacaractere para express\u00e3o regular
REGEXP_INVALID=Express\u00e3o regular inv\u00e1lida

#"Semantic" highlighting:
mod-unused=Elemento n\u00e3o utilizado
mod-abstract=Elemento abstrato
mod-field=Campo
mod-local-variable=Vari\u00e1vel local
mod-parameter=Par\u00e2metro
mod-method=M\u00e9todo
mod-constructor=Construtor
mod-class=Classe
mod-interface=Interface
mod-annotation-type=Anota\u00e7\u00e3o
mod-enum=Enum
mod-deprecated=Elemento obsoleto
mod-static=Membro est\u00e1tico
mod-private=Membro privado
mod-package-private=Membro privado do pacote
mod-protected=Membro protegido
mod-public=Membro p\u00fablico
mod-type-parameter-declaration=Tipo do par\u00e2metro
mod-type-parameter-use=Uso do tipo de par\u00e2metro
mod-undefined=Elemento indefinido
mark-occurrences=Marcar ocorr\u00eancias
covered=Coberto
uncovered=N\u00e3o coberto
inferred=Coberto inferido

#ct_l==&gt;
#ct_jc=import Java class
#ct_do=do { |e| \u2026 }
#ct_module=module end
#ct_begin=begin rescue end
#ct_if=if \u2026 | end
#ct_ife=if \u2026 | else \u2026 | end
#ct_doc==begin/=end documentation

# TextMate snippets: Ruby.tmbundle
ct_hash=Adicionar # =&gt; Marcador
ct_colon=Par de hash :key =&gt; "valor"
#ct_Comp=include Comparable \u2026
#ct_Dir=Dir.glob("\u2026") { |file| \u2026 }
#ct_Enum=include Enumerable \u2026
#ct_File=File.foreach ("\u2026") { |line| \u2026 }
#ct_Forw-=extend Forwardable
#ct_Hash=Hash.new { |hash, key| hash[key] = \u2026 }
#ct_Md=Marshal.dump(\u2026, file)
#ct_Ml=Marshal.load(obj)
#ct_Pn-=PStore.new( \u2026 )
#ct_Yd-=YAML.dump(\u2026, file)
#ct_Yl-=YAML.load(file)
#ct_all=all? { |e| \u2026 }
#ct_am=alias_method \u2026
#ct_any=any? { |e| \u2026 }
#ct_app=application_code { \u2026 }
#ct_as=assert(\u2026)
#ct_ase=assert_equal(\u2026)
#ct_asid=assert_in_delta(\u2026)
#ct_asio=assert_instance_of(\u2026)
#ct_asko=assert_kind_of(\u2026)
#ct_asm=assert_match(\u2026)
#ct_asn=assert_nil(\u2026)
#ct_asne=assert_not_equal(\u2026)
#ct_asnm=assert_no_match(\u2026)
#ct_asnn=assert_not_nil(\u2026)
#ct_asnr=assert_nothing_raised(\u2026) { \u2026 }
#ct_asns=assert_not_same(\u2026)
#ct_asnt=assert_nothing_thrown { \u2026 }
#ct_aso=assert_operator(\u2026)
#ct_asr=assert_raise(\u2026) { \u2026 }
#ct_asrt=assert_respond_to(\u2026)
#ct_ass=assert_same(\u2026)
#ct_ast=assert_throws(\u2026) { \u2026 }
#ct_bm-=Benchmark.bmbm do \u2026 end
#ct_case=case \u2026 | end
#ct_cl=classify { |e| \u2026 }
#ct_cla=ClassName = Struct \u2026 do \u2026 end
#ct_clafn=class_from_name()
#ct_col=collect { |e| \u2026 }
#ct_dop=do \u2026 end
#ct_deec=deep_copy(\u2026)
#ct_def=def \u2026 | end
#ct_defd=def_delegator \u2026
#ct_defds=def_delegators \u2026
#ct_defmm=def method_missing \u2026 end
#ct_defs=def self \u2026 end
#ct_deft=def test_ \u2026 end
#ct_deli=delete_if { |e| \u2026 }
#ct_det=detect { |e| \u2026 }
#ct_ea=each { |e| \u2026 }
#ct_eab=each_byte { |byte| \u2026 }
#ct_eac-=each_char { |chr| \u2026 }
#ct_eai=each_index { |i| \u2026 }
#ct_eak=each_key { |key| \u2026 }
#ct_eal=each_line { |line| \u2026 }
#ct_eap=each_pair { |name, val| \u2026 }
#ct_eas-=each_slice(\u2026) { |group| \u2026 }
#ct_eav=each_value { |val| \u2026 }
#ct_eawi=each_with_index { |e, i| \u2026 }
#ct_elsif=elsif \u2026
#ct_end=__END__
#ct_fin=find { |e| \u2026 }
#ct_fina=find_all { |e| \u2026 }
#ct_fl=flunk(\u2026)
#ct_flao=flatten_once()
#ct_gre=grep(/pattern/) { |match| \u2026 }
#ct_loo=loop { \u2026 }
#ct_map=map { |e| \u2026 }
#ct_mapwi-=map_with_index { |e, i| \u2026 }
#ct_max=max { |a, b| \u2026 }
#ct_min=min { |a, b| \u2026 }
#ct_mod=module \u2026 ClassMethods \u2026 end
#ct_par=partition { |e| \u2026 }
#ct_patfh=path_from_here( \u2026 )
#ct_r=attr_reader \u2026
#ct_ran=randomize()
#ct_rb=#!/usr/bin/env ruby -wKU
#ct_rej=reject { |e| \u2026 }
#ct_rep=results.report(\u2026) { \u2026 }
#ct_req=require "\u2026"
#ct_reve=reverse_each { |e| \u2026 }
#ct_rw=attr_accessor \u2026
#ct_sca=scan(/\u2026/) { |match| \u2026 }
#ct_sel=select { |e| \u2026 }
#ct_sin=singleton_class()
#ct_sor=sort { |a, b| \u2026 }
#ct_sorb=sort_by { |e| \u2026 }
#ct_tc=class \u2026 &lt; Test::Unit::TestCase \u2026 end
#ct_ts=require "tc_\u2026" \u2026
#ct_uni=unix_filter { \u2026 }
#ct_unless=unless \u2026 | end
#ct_until=until \u2026 end
#ct_usai=usage_if()
#ct_usau=usage_unless()
#ct_w=attr_writer \u2026
#ct_when=when \u2026 | 
#ct_while=while \u2026 end
#ct_y=:yields:
#ct_zip=zip(enums) { |row| \u2026 }

# TextMate snippets from Ruby on Rails.tmbundle
#ct_art=assert_redirected_to
#ct_asre=assert_response
#ct_bt=belongs_to
#ct_flash=flash[\u2026 | ]
#ct_habtm=has_and_belongs_to_many
#ct_hm=has_many
#ct_ho=has_one
#ct_log=logger.debug
ct_mccc=Criar v\u00e1rias colunas
ct_mcol=Adicionar coluna
#ct_mp=map(&amp;:sym_proc)
ct_mtab=Criar tabela
#ct_ra=render (action)
#ct_ral=render (action, layout)
#ct_rcea=render_component (action)
#ct_rcec=render_component (controller)
#ct_rceca=render_component (controller, action)
#ct_rdb=RAILS_DEFAULT_LOGGER.debug
#ct_rea=redirect_to (action)
#ct_reai=redirect_to (action, id)
#ct_rec=redirect_to (controller)
#ct_reca=redirect_to (controller, action)
#ct_recai=redirect_to (controller, action, id)
#ct_rf=render (file)
#ct_rfu=render (file, use_full_path)
#ct_ri=render (inline)
#ct_ril=render (inline, locals)
#ct_rit=render (inline, type)
#ct_rl=render (layout)
#ct_rn=render (nothing)
#ct_rns=render (nothing, status)
#ct_rp=render (partial)
#ct_rpc=render (partial, collection)
#ct_rpl=render (partial, locals)
#ct_rpo=render (partial, object)
#ct_rps=render (partial, status)
#ct_rt=render (text)
#ct_rtl=render (text, layout)
#ct_rtlt=render (text, layout =&gt; true)
#ct_rts=render (text, status)
#ct_va=validates_associated
#ct_vaif=validates_associated if
#ct_vc=validates_confirmation_of
#ct_vcif=validates_confirmation_of if
#ct_ve=validates_exclusion_of
#ct_veif=validates_exclusion_of if
#ct_verify=verify \u2026 render
#ct_vl=validates_length_of
#ct_vp=validates_presence_of
#ct_vpif=validates_presence_of if
#ct_vu=validates_uniqueness_of
#ct_vuif=validates_uniqueness_of if
# Mime Type application/x-httpd-eruby
#ct_ft=form_tag
#ct_lia=link_to (action)
#ct_liai=link_to (action, id)
#ct_lic=link_to (controller)
#ct_lica=link_to (controller, action)
#ct_licai=link_to (controller, action, id)

DynamicMethod=Este m\u00e9todo \u00e9 gerado dinamicamente pelo Rails e pesquisar\u00e1 seu modelo para correspond\u00eancias da coluna fornecida. Voc\u00ea tamb\u00e9m pode procurar combina\u00e7\u00f5es de colunas concatenando-as com <code>_and_</code>.
NoCommentFound=Nenhum coment\u00e1rio encontrado
#Documented=(documented)
#NoDoced=(:nodoc:)
RubyLib=Biblioteca do Ruby
In=in
FileDeleted=Arquivo n\u00e3o p\u00f4de ser encontrado. Talvez tenha sido exclu\u00eddo fora do IDE?\nVoc\u00ea pode for\u00e7ar uma atualiza\u00e7\u00e3o no \u00edndice removendo o diret\u00f3rio var/cache/gsf-index em seu diret\u00f3rio de usu\u00e1rio.
# Displayed as a return type (in navigator etc) when a method has an unknown return type
RubyUnknownType=Desconhecido
InferredType=Tipo inferido:
# used as a delimiter when displaying return types, e.g. String or Float 
Or=ou

InstalledVersions=Vers\u00e3o(\u00f5es) instalada(s): {0}

SC_100=100 (Continuar)
SC_100_DESC=O solicitante deve continuar com a solicita\u00e7\u00e3o. O servidor retorna este c\u00f3digo para indicar que recebeu a primeira parte de uma solicita\u00e7\u00e3o e est\u00e1 esperando o restante.
SC_101=101 (Alternando protocolos)
SC_101_DESC=O solicitante pediu ao servidor para alterar os protocolos e o servidor est\u00e1 confirmando que executar\u00e1 a a\u00e7\u00e3o.
SC_200=200 (Bem-sucedido)
SC_200_DESC=O servidor processou a solicita\u00e7\u00e3o com \u00eaxito. Geralmente, isso significa que o servidor forneceu a p\u00e1gina solicitada.
SC_201=201 (Criado)
SC_201_DESC=A solicita\u00e7\u00e3o foi bem-sucedida e o servidor criou um novo recurso.
SC_202=202 (Aceito)
SC_202_DESC=O servidor aceitou a solicita\u00e7\u00e3o, mas ainda n\u00e3o a processou.
SC_203=203 (Informa\u00e7\u00e3o n\u00e3o autorizada)
SC_203_DESC=O servidor processou a solicita\u00e7\u00e3o com \u00eaxito, mas retorna informa\u00e7\u00f5es que podem ser provenientes de outra fonte.
SC_204=204 (Sem conte\u00fado)
SC_204_DESC=O servidor processou a solicita\u00e7\u00e3o com \u00eaxito, mas n\u00e3o retorna nenhum conte\u00fado.
SC_205=205 (Redefinir conte\u00fado)
SC_205_DESC=O servidor processou a solicita\u00e7\u00e3o com \u00eaxito, mas n\u00e3o retorna nenhum conte\u00fado. Ao contr\u00e1rio da resposta 204, esta resposta requer que o solicitante redefina a visualiza\u00e7\u00e3o do documento (por exemplo, limpar um formul\u00e1rio para nova entrada).
SC_206=206 (Conte\u00fado parcial)
SC_206_DESC=O servidor processou com \u00eaxito uma solicita\u00e7\u00e3o GET parcial.
SC_300=300 (V\u00e1rias op\u00e7\u00f5es)
SC_300_DESC=O servidor apresenta v\u00e1rias a\u00e7\u00f5es dispon\u00edveis com base na solicita\u00e7\u00e3o. O servidor pode escolher uma a\u00e7\u00e3o com base no solicitante (agente usu\u00e1rio) ou o servidor pode apresentar uma lista para que o solicitante possa escolher uma a\u00e7\u00e3o.
SC_301=301 (Movido permanentemente)
SC_301_DESC=A p\u00e1gina solicitada foi movida permanentemente para um novo local. Quando o servidor retorna esta resposta (como resposta \u00e0 uma solicita\u00e7\u00e3o GET ou HEAD), ele automaticamente redireciona o solicitante para o novo local.
SC_302=302 (Movido temporariamente)
SC_302_DESC=O recurso solicitado est\u00e1 temporariamente em outra URI. Visto que o redirecionamento pode ser alterado ocasionalmente, o cliente DEVE continuar usando Request-URI em solicita\u00e7\u00f5es futuras. Esta resposta pode ser armazenada somente se indicado por um campo de cabe\u00e7alho cache-control ou expires.
SC_303=303 (Consultar outro local)
SC_303_DESC=O servidor retorna este c\u00f3digo quando o solicitante deve fazer uma solicita\u00e7\u00e3o GET diferente em outro local para recuperar a resposta. Para todas as outras solicita\u00e7\u00f5es diferentes de uma solicita\u00e7\u00e3o HEAD, o servidor se redireciona automaticamente para outro local.
SC_304=304 (N\u00e3o modificado)
SC_304_DESC=Se o cliente tiver feito uma solicita\u00e7\u00e3o GET condicional e o acesso for permitido, mas o documento n\u00e3o tiver sido modificado, o servidor DEVE responder com este c\u00f3digo de status. A resposta 304 N\u00c3O DEVE conter um corpo de mensagem e consequentemente termina sempre com a primeira linha vazia ap\u00f3s os campos de cabe\u00e7alho.
SC_305=305 (Usar proxy)
SC_305_DESC=O solicitante pode acessar somente a p\u00e1gina solicitada usando um proxy. Quando o servidor retorna esta resposta, ele tamb\u00e9m indica o proxy que o solicitante deve usar.
SC_307=307 (Redirecionamento tempor\u00e1rio)
SC_307_DESC=O recurso solicitado est\u00e1 temporariamente em outra URI. Visto que o redirecionamento PODE ser alterado ocasionalmente, o cliente DEVE continuar usando Request-URI em solicita\u00e7\u00f5es futuras. Esta resposta pode ser armazenada somente se indicado por um campo de cabe\u00e7alho cache-control ou expires.
SC_400=400 (Solicita\u00e7\u00e3o inv\u00e1lida)
SC_400_DESC=O servidor n\u00e3o entende a sintaxe da solicita\u00e7\u00e3o.
SC_401=401 (N\u00e3o autorizado)
SC_401_DESC=O solicita\u00e7\u00e3o precisa de autentica\u00e7\u00e3o. O servidor pode retornar esta resposta para uma p\u00e1gina ap\u00f3s um login.
SC_403=403 (Proibido)
SC_403_DESC=O servidor recusa a solicita\u00e7\u00e3o.
SC_404=404 (N\u00e3o encontrado)
SC_404_DESC=O servidor n\u00e3o consegue encontrar a p\u00e1gina solicitada. Por exemplo, o servidor geralmente retorna este c\u00f3digo se a solicita\u00e7\u00e3o for de uma p\u00e1gina que n\u00e3o existe no servidor.
SC_405=405 (M\u00e9todo n\u00e3o permitido)
SC_405_DESC=O m\u00e9todo especificado na solicita\u00e7\u00e3o n\u00e3o \u00e9 permitido.
SC_406=406 (N\u00e3o aceit\u00e1vel)
SC_406_DESC=A p\u00e1gina solicitada n\u00e3o pode responder com as caracter\u00edsticas de conte\u00fado solicitadas.
SC_407=407 (Autentica\u00e7\u00e3o de proxy necess\u00e1ria)
SC_407_DESC=Este c\u00f3digo de status \u00e9 semelhante ao 401 (N\u00e3o autorizado); mas especifica que o solicitante tem que autenticar usando um proxy. Quando o servidor retorna esta resposta, ele tamb\u00e9m indica o proxy que o solicitante deve usar.
SC_408=408 (Solicita\u00e7\u00e3o expirada)
SC_408_DESC=O servidor excedeu o tempo limite ao aguardar a solicita\u00e7\u00e3o.
SC_409=409 (Conflito)
SC_409_DESC=O servidor encontrou um conflito ao atender a solicita\u00e7\u00e3o. O servidor deve incluir informa\u00e7\u00f5es sobre o conflito na resposta. O servidor pode retornar este c\u00f3digo em resposta a uma solicita\u00e7\u00e3o PUT que est\u00e1 em conflito com uma solicita\u00e7\u00e3o anterior, junto com uma lista das diferen\u00e7as entre as solicita\u00e7\u00f5es.
SC_410=410 (Ausente)
SC_410_DESC=O servidor retorna esta resposta quando o recurso solicitado foi removido permanentemente. \u00c9 semelhante ao c\u00f3digo 404 (N\u00e3o encontrado), mas \u00e9 usado \u00e0s vezes no lugar do 404 para recursos que antes existiam mas que agora n\u00e3o existem mais. Se o recurso tiver sido removido permanentemente, voc\u00ea deve usar 301 para especificar o novo local do recurso.
SC_411=411 (Extens\u00e3o solicitada)
SC_411_DESC=O servidor n\u00e3o aceitar\u00e1 a solicita\u00e7\u00e3o sem um campo de cabe\u00e7alho content-length v\u00e1lido.
SC_412=412 (Condi\u00e7\u00e3o pr\u00e9via falha)
SC_412_DESC=O servidor n\u00e3o atendeu uma das condi\u00e7\u00f5es pr\u00e9vias que o solicitante colocou na solicita\u00e7\u00e3o.
SC_413=413 (Entidade de solicita\u00e7\u00e3o muito longa)
SC_413_DESC=O servidor n\u00e3o pode processar a solicita\u00e7\u00e3o porque \u00e9 muito longa.
SC_414=414 (URI solicitada muito longa)
SC_414_DESC=A URI solicitada (normalmente um URL) \u00e9 muito longa para que o servidor possa processar.
SC_415=415 (Tipo de m\u00eddia n\u00e3o suportado)
SC_415_DESC=A solicita\u00e7\u00e3o est\u00e1 em um formato n\u00e3o suportado pela p\u00e1gina solicitada.
SC_416=416 (Intervalo solicitado n\u00e3o atend\u00edvel)
SC_416_DESC=O servidor retorna este c\u00f3digo de status se a solicita\u00e7\u00e3o for de um intervalo n\u00e3o dispon\u00edvel na p\u00e1gina.
SC_417=417 (Expectativa falha)
SC_417_DESC=O servidor n\u00e3o pode atender os requisitos do campo de cabe\u00e7alho Expect da solicita\u00e7\u00e3o.
SC_500=500 (Erro interno do servidor)
SC_500_DESC=O servidor encontrou um erro e n\u00e3o pode atender a solicita\u00e7\u00e3o.
SC_501=501 (N\u00e3o implementado)
SC_501_DESC=O servidor n\u00e3o tem a funcionalidade para atender a solicita\u00e7\u00e3o. Por exemplo, o servidor pode retornar este c\u00f3digo quando n\u00e3o reconhece o m\u00e9todo de solicita\u00e7\u00e3o.
SC_502=502 (Gateway inv\u00e1lido)
SC_502_DESC=O servidor estava agindo como um gateway ou proxy e recebeu uma resposta inv\u00e1lida do servidor upstream.
SC_503=503 (Servi\u00e7o n\u00e3o dispon\u00edvel)
SC_503_DESC=O servidor n\u00e3o est\u00e1 dispon\u00edvel no momento (porque est\u00e1 sobrecarregado ou fora de servi\u00e7o para manuten\u00e7\u00e3o). Geralmente, trata-se de um estado tempor\u00e1rio.
SC_504=504 (Gateway expirado)
SC_504_DESC=O servidor estava agindo como um gateway ou proxy e n\u00e3o recebeu uma solicita\u00e7\u00e3o a tempo do servidor upstream.
SC_505=505 (Vers\u00e3o HTTP n\u00e3o suportada)
SC_505_DESC=O servidor n\u00e3o oferece suporte \u00e0 vers\u00e3o do protocolo HTTP usada na solicita\u00e7\u00e3o.

