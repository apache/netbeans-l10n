# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2013 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2013 Sun Microsystems, Inc.

# Method to complex
DN_MethodTooComplex=O m\u00e9todo \u00e9 muito complexo
DESC_MethodTooComplex=A inspe\u00e7\u00e3o reporta o m\u00e9todo, cuja <b>Complexidade Ciclom\u00e1tica</b> excede um valor configur\u00e1vel. A <i>Complexidade Ciclom\u00e1tica</i> mede v\u00e1rios pontos de ramifica\u00e7\u00e3o potencial (ou ciclos) em um m\u00e9todo. Acredita-se que m\u00e9todos com complexidade ciclom\u00e1tica geralmente funcionam muito mais e devem ser divididos em v\u00e1rios m\u00e9todos, mais focados. Tais m\u00e9todos complexos tamb\u00e9m s\u00e3o propensos a codificar duplica\u00e7\u00e3o entre os caminhos de execu\u00e7\u00e3o e s\u00e3o dif\u00edceis de manter. Geralmente, recomendamos que a complexidade ciclom\u00e1tica de um m\u00e9todo seja 5 ou inferior; menor que 10 tamb\u00e9m pode ser aceit\u00e1vel para algoritmos mais elaborados. 

# Too deep nesting
DN_MethodTooDeepNesting=Aninhamento muito profundo
DESC_MethodTooDeepNesting=Reporta m\u00e9todos cujos corpos cont\u00eam instru\u00e7\u00f5es aninhadas <i>muito profundas</i>. Tais m\u00e9todos s\u00e3o menos leg\u00edveis, cont\u00e9m recuo e permite espa\u00e7o menor da tela para leitura do c\u00f3digo. Os m\u00e9todos, geralmente podem ser refatorados e divididos para melhorar a capacidade de leitura do c\u00f3digo.

MethodComplexityCustomizer.limtLabel.text=Limite de complexidade:
OPTNAME_MethodComplexityLimit=Limite de complexidade

OPTNAME_MethodDepthLimit=Limite de profundidade da instru\u00e7\u00e3o


# Method too long - lines or statements
DN_MethodTooLong=O corpo do m\u00e9todo \u00e9 muito grande
DESC_MethodTooLong=Reporta m\u00e9todos que t\u00eam corpo muito grande. Os m\u00e9todos maiores exigem rolagem alternada e geralmente, podem ser refatorados em v\u00e1rios m\u00e9todos chamados de um m\u00e9todo de media\u00e7\u00e3o. Dividir um m\u00e9todo longo em v\u00e1rias partes nomeadas tamb\u00e9m pode ajudar a reutilizar o c\u00f3digo. Algumas pr\u00e1ticas de codifica\u00e7\u00e3o demandam que um m\u00e9todo deve ajustar-se a um tamanho de tela, dessa forma, isso pode ser facilmente digitalizado e compreendido pelo desenvolvedor.
OPTNAME_MethodLinesLimit=N\u00famero permitido de linhas

OPTNAME_MethodStatementsLimit=N\u00famero permitido de instru\u00e7\u00f5es


# Method throws too many exception
DN_MethodTooManyExceptions=O m\u00e9todo ou construtor declara muitas exce\u00e7\u00f5es
DESC_MethodTooManyExceptions=Reporta m\u00e9todos que declaram muitas exce\u00e7\u00f5es em sua cl\u00e1usula <b>throws</b>. O m\u00e9todo que produz um grande n\u00famero de tipos de exce\u00e7\u00e3o s\u00e3o dif\u00edceis de usar, pois o chamador deve tratar todos os resultados ou complicar sua pr\u00f3pria declara\u00e7\u00e3o com exce\u00e7\u00f5es. O c\u00f3digo de tratamento de erro fica mais complexo. <p/>A inspe\u00e7\u00e3o tamb\u00e9m processa construtores.
OPTNAME_MethodExceptionsLimit=Contagem de exce\u00e7\u00f5es permitida


# Method declares too may parameters
DN_MethodTooManyParameters=O m\u00e9todo declara muitos par\u00e2metros
DESC_MethodTooManyParameters=Reporta o m\u00e9todo que utiliza muitos par\u00e2metros. Os m\u00e9todos com um n\u00famero grande de par\u00e2metros indica um design incorreto. \u00c9 prov\u00e1vel que mais par\u00e2metros sejam adicionados no futuro, de forma que os par\u00e2metros devem ser agrupados em um Objeto de Comando, melhorando os custos de manuten\u00e7\u00e3o. Se preferir, o m\u00e9todo pode ser refatorado em v\u00e1rios m\u00e9todos, cada um fazendo parte da tarefa e exigindo menos par\u00e2metros na entrada.
OPTNAME_MethodParametersLimit=Contagem de par\u00e2metros permitida


DN_CtorTooManyParameters=O construtor declara muitos par\u00e2metros
DESC_CtorTooManyParameters=Reporta construtores que t\u00eam muitos par\u00e2metros. Os construtores geralmente t\u00eam mais par\u00e2metros que um m\u00e9todo regular, principalmente ao iniciar um objeto grande.<p/>Grande n\u00famero de par\u00e2metros indica um design incorreto. \u00c9 prov\u00e1vel que mais par\u00e2metros sejam adicionados no futuro, assim os padr\u00f5es de cria\u00e7\u00e3o como Builder devem ser considerados.

OPTNAME_CtorParametersLimit=Contagem de par\u00e2metros permitida


# Method with mulitple return statements
DN_MethodMultipleReturns=M\u00e9todo com v\u00e1rios pontos de retorno
DESC_MethodMultipleReturns=Reporta m\u00e9todos que saem em v\u00e1rios locais usando a instru\u00e7\u00e3o <b>return</b>. Tais m\u00e9todos podem confundir e serem dif\u00edceis de refatorar. A inspe\u00e7\u00e3o pode ignorar <b>guard returns</b> - uma instru\u00e7\u00e3o <b>return</b>, que \u00e9 a instru\u00e7\u00e3o \u00fanica em uma ramifica\u00e7\u00e3o <b>if</b>. Se preferir, todos os m\u00e9todos <b>equals</b> podem ser ignorados, pois o conte\u00fado de <b>equals</b> \u00e9 tradicionalmente gerado usando retornos antecipados na incompatibilidade de tipo ou valor.
OPTNAME_MethodIgnoreReturnEquals=Ignorar em 'equals'

OPTNAME_MethodIgnoreReturnGuards=Ignorar condi\u00e7\u00f5es de prote\u00e7\u00e3o

OPTNAME_MethodReturnLimit=Limite de retorno


# Method with multiple negations
DN_MethodMultipleNegations=O m\u00e9todo com v\u00e1rias nega\u00e7\u00f5es
DESC_MethodMultipleNegations=M\u00e9todos com v\u00e1rias express\u00f5es negadas (unary <b>!</b> or <b>!=</b>) s\u00e3o mencionados para confundir os leitores, express\u00f5es verdadeiras (n\u00e3o negadas) s\u00e3o consideradas mais f\u00e1ceis de ler e entender. Altere a l\u00f3gica para usar valores verdadeiros, em vez de falsos.
OPTNAME_MethodNegationsLimit=Limite de nega\u00e7\u00f5es

OPTNAME_MethodNegationsIgnoreEquals=Ignorar em equals()

OPTNAME_MethodNegationsIgnoreAsserts=Ignorar em asserts


# Method with multiple loops
DN_MethodMultipleLoops=M\u00e9todo com v\u00e1rios loops
DESC_MethodMultipleLoops=M\u00e9todos que cont\u00eam v\u00e1rias instru\u00e7\u00f5es de loop. 

OPTNAME_MethodLoopsLimit=N\u00famero m\u00e1ximo de loops
OPTDESC_MethodLoopsLimit

DN_MethodCoupled=M\u00e9todo muito acoplado
DESC_MethodCoupled=Reporta m\u00e9todos que est\u00e3o muito acoplados - que se referem a muitos outros tipos. Os m\u00e9todos que se referem a um grande n\u00famero de tipos s\u00e3o <i>fr\u00e1geis</i>: eles t\u00eam tend\u00eancia a falhar ou exigem refatora\u00e7\u00e3o, se os tipos referenciados forem alterados. Tamb\u00e9m \u00e9 mais dif\u00edcil mover o m\u00e9todo que tem muitas depend\u00eancias para outro m\u00f3dulo. <p/>As refer\u00eancias \u00e0 pr\u00f3pria classe do m\u00e9todo e suas superclasses s\u00e3o ignoradas. Com <i>Ignorar depend\u00eancias na Plataforma Java</i>, as refer\u00eancias para <code>java.**</code> e <code>javax.**</code> tamb\u00e9m s\u00e3o ignoradas.


# Method with many dependencies
OPTNAME_MethodCouplingIgnoreJava=Ignorar depend\u00eancias na plataforma Java
OPTDESC_MethodCouplingIgnoreJava=Reporta m\u00e9todos que cont\u00eam muitas instru\u00e7\u00f5es de loop.
OPTNAME_MethodCouplingLimit=Acoplamento m\u00e1ximo


DN_ClassTooComplex=A classe \u00e9 muito complexa
DESC_ClassTooComplex=Reporta classes, cuja complexidade ciclom\u00e1tica excede o limite configurado. A complexidade de uma classe \u00e9 calculada como uma soma de complexidades de seus m\u00e9todos.
OPTNAME_ClassComplexityLimit=Limite de complexidade


DN_ClassAnonymousTooComplex=A classe an\u00f4nima \u00e9 muito complexa
DESC_ClassAnonymousTooComplex=Reporta classes an\u00f4nimas, cuja complexidade ciclom\u00e1tica excede o limite configurado. A complexidade de uma classe \u00e9 calculada como uma soma de complexidades de seus m\u00e9todos. As classes an\u00f4nimas devem ter menos responsabilidades e menor complexidade que uma classe regular.
OPTNAME_ClassAnonymousComplexityLimit=Limite de complexidade


DN_ClassTooCoupled=Classe muito acoplada
DESC_ClassTooCoupled=Reporta classes que est\u00e3o muito acopladas (usa muitos) a outros tipos. As refer\u00eancias \u00e0s bibliotecas do sistema Java (<code>java.**</code> and <code>javax.**</code>) podem ser ignoradas.
OPTNAME_ClassCouplingLimit=Limite de acoplamento

OPTNAME_ClassCouplingIgnoreJava=Ignorar depend\u00eancias na plataforma Java


DN_ComplexArithmeticExpression=Express\u00e3o aritm\u00e9tica muito complexa
DESC_ComplexArithmeticExpression=Reporta express\u00f5es aritm\u00e9ticas que incluem mais que o n\u00famero definido de opera\u00e7\u00f5es. A express\u00e3o com muitos operandos s\u00e3o mais dif\u00edceis de ler e geralmente pode ser dividida em v\u00e1rias instru\u00e7\u00f5es de atribui\u00e7\u00e3o para vari\u00e1veis de resultado tempor\u00e1rias.
OPTNAME_ComplexArithmeticLimit=Limite do operador


DN_ComplexLogicalExpression=Express\u00e3o l\u00f3gica muito complexa
DESC_ComplexLogicalExpression=Reporta express\u00f5es l\u00f3gicas que incluem mais que o n\u00famero definido de opera\u00e7\u00f5es. A express\u00e3o com muitos operandos s\u00e3o mais dif\u00edceis de ler e geralmente pode ser dividida em v\u00e1rias instru\u00e7\u00f5es de atribui\u00e7\u00e3o para vari\u00e1veis de resultado tempor\u00e1rias.
OPTNAME_ComplexLogicalLimit=Limite do operador


DN_ClassConstructorCount=A classe tem muitos construtores
DESC_ClassConstructorCount=Reporta classes que definem muitos construtores. 

DN_AnonClassMethodCount=A classe an\u00f4nima tem muitos m\u00e9todos
DESC_AnonClassMethodCount=Reporta classe an\u00f4nima com muitos m\u00e9todos. As classes an\u00f4nimas geralmente implementam uma interface muito simples e devem ser muito simples. Recomendamos criar pelo menos classe local com nome, se a complexidade da classe an\u00f4nima aumentar.

DN_ClassMethodCount=A classe tem muitos m\u00e9todos
DESC_ClassMethodCount=Reporta classe que cont\u00e9m muitos m\u00e9todos. As op\u00e7\u00f5es permitem ignorar antecessores da propriedade bean simples - getters ou setters inativos que acionam eventos de altera\u00e7\u00e3o n\u00e3o s\u00e3o considerados 'simples'. As implementa\u00e7\u00f5es de m\u00e9todos abstratos da superclasse (n\u00e3o implementa\u00e7\u00e3o dos m\u00e9todos da interface) tamb\u00e9m podem ser ignoradas.

OPTNAME_AnonClassMethodsLimit=Limite de m\u00e9todos


OPTNAME_ClassConstructorsLimit=Limite de construtores

OPTNAME_ClassMethodsLimit=Limite de m\u00e9todos

OPTNAME_ClassFieldsLimit=Limite de campos

OPTNAME_ClassMethodCountIgnoreAccessors=Ignorar quem acessa simples
OPTDESC_ClassMethodCountIgnoreAccessors=N\u00e3o inclui quem acessa da propriedade simples
OPTNAME_ClassMethodCountIgnoreAbstract=Ignorar implementa\u00e7\u00f5es do m\u00e9todo abstrato


DN_ClassFieldCount=A classe tem muitos campos
DESC_ClassFieldCount=Reporta uma classe que mant\u00e9m muitos campos. O estado mantido pela classe \u00e9 muito grande e deve ser investigado, se o estado puder ser dividido em v\u00e1rias classes de estado, geralmente tamb\u00e9m separa m\u00e9todos de manipula\u00e7\u00e3o e reduz a complexidade geral da classe.
OPTNAME_FieldCountIgnoreConstants=Ignorar constantes

# {0} - method count
TEXT_AnonClassManyMethods=A classe an\u00f4nima tem muitos m\u00e9todos: {0}
# {0} - number of operands
TEXT_ArithmeticTooComplex=A express\u00e3o aritm\u00e9tica \u00e9 muito complexa: {0} opera\u00e7\u00f5es
# {0} - complexity
TEXT_ClassAnonymousTooComplex=A classe an\u00f4nima \u00e9 muito complexa. Complexidade ciclom\u00e1tica = {0}
# {0} - class name
# {1} - constructor count
TEXT_ClassManyConstructors=A classe {0} tem muitos construtores: {1}
# {0} - class name
# {1} - field count
TEXT_ClassManyFields=A classe {0} tem muitos campos: {1}
# {0} - class name
# {1} - method count
TEXT_ClassManyMethods=A classe {0} tem muitos m\u00e9todos: {1}
# {0} - class name
# {1} - complexity
TEXT_ClassTooComplex=A classe {0} \u00e9 muito complexa. Complexidade ciclom\u00e1tica = {1}
# {0} - class name
# {1} - number of referencies
TEXT_ClassTooCoupled=A classe {0} est\u00e1 muito acoplada. Faz refer\u00eancia {1} a outros tipos
# {0} - number of loops
TEXT_ConstructorMultipleLoops=O construtor cont\u00e9m {0} loops
# {0} - number of negations
TEXT_ConstructorMultipleNegations=O construtor cont\u00e9m muitas nega\u00e7\u00f5es: {0}
# {0} - number of return points
TEXT_ConstructorMultipleReturns=O construtor tem v\u00e1rios pontos de retorno: {0}
# {0} - cyclomatic complexity of the method
TEXT_ConstructorTooComplex=O construtor \u00e9 muito complexo; complexidade ciclom\u00e1tica: {0}
# {0 - number of dependencies
TEXT_ConstructorTooCoupled=O construtor est\u00e1 muito acoplado. Faz refer\u00eancia a {0} tipos
# {0} - maximum depth of statements in method
TEXT_ConstructorTooDeepNesting=O construtor cont\u00e9m estrutura de instru\u00e7\u00e3o muito profunda: {0}
# {0} - number of lines in method
TEXT_ConstructorTooLongLines=O construtor \u00e9 muito longo: {0} linhas
# {0} - number of lines in method
TEXT_ConstructorTooLongStatements=O construtor \u00e9 muito longo: {0} instru\u00e7\u00f5es
# {0} - number of exceptions declared by the method
TEXT_ConstructorTooManyExceptions=O construtor declara muitas exce\u00e7\u00f5es: {0}
# {0} - number of parameters declared by the method
TEXT_ConstructorTooManyParameters=O construtor utiliza muitos par\u00e2metros: {0}
# {0} - number of operands
TEXT_LogicalTooComplex=A express\u00e3o l\u00f3gica \u00e9 muito complexa: {0} opera\u00e7\u00f5es
# {0} - method name
# {1} - number of loops
TEXT_MethodMultipleLoops=O m\u00e9todo ''{0}'' cont\u00e9m {1} loops
# {0} - method name
# {1} - number of negations
TEXT_MethodMultipleNegations=O m\u00e9todo ''{0}'' cont\u00e9m muitas nega\u00e7\u00f5es: {1}
# {0} - method name
# {1} - number of return points
TEXT_MethodMultipleReturns=O m\u00e9todo ''{0}'' tem v\u00e1rios pontos de retorno: {1}
# {0} - method name
# {1} - cyclomatic complexity of the method
TEXT_MethodTooComplex=O m\u00e9todo ''{0}'' \u00e9 muito complexo; complexidade ciclom\u00e1tica: {1}
# {0} - method name
# {1} - number of dependencies
TEXT_MethodTooCoupled=O m\u00e9todo {0} est\u00e1 muito acoplado. Faz refer\u00eancia {1} a outros tipos
# {0} - method name
# {1} - maximum depth of statements in method
TEXT_MethodTooDeepNesting=O m\u00e9todo ''{0}'' cont\u00e9m estrutura de instru\u00e7\u00e3o muito profunda: {1}
# {0} - method name
# {1} - number of lines in method
TEXT_MethodTooLongLines=O m\u00e9todo ''{0}'' \u00e9 muito longo: {1} linhas
# {0} - method name
# {1} - number of lines in method
TEXT_MethodTooLongStatements=O m\u00e9todo ''{0}'' \u00e9 muito longo: {1} instru\u00e7\u00f5es
# {0} - method name
# {1} - number of exceptions declared by the method
TEXT_MethodTooManyExceptions=O m\u00e9todo ''{0}'' declara muitas exce\u00e7\u00f5es: {1}
# {0} - method name
# {1} - number of parameters declared by the method
TEXT_MethodTooManyParameters=O m\u00e9todos ''{0}'' utiliza muitos par\u00e2metros: {1}

