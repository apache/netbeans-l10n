# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2010 Sun Microsystems, Inc.

DESC_indentation=Adverte sobre recuo que sugere poss\u00edvel bloco delimitado n\u00e3o encontrado
# {0} - the name of the annotation
DN_AnnotationsNotRuntime_isAnnotation={0} n\u00e3o tem Reten\u00e7\u00e3o de runtime; o resultado ser\u00e1 sempre falso
# {0} - the name of the annotation
DN_AnnotationsNotRuntime_getAnnotation={0} n\u00e3o tem Reten\u00e7\u00e3o de runtime; o resultado ser\u00e1 sempre nulo
# {0} - the name of the annotation
DN_AnnotationsNotRuntime_instanceof={0} n\u00e3o tem Reten\u00e7\u00e3o de runtime; a condi\u00e7\u00e3o ser\u00e1 sempre falsa
DN_indentation=Recuo confuso
#{0}: PatternSyntaxException.getDescription()
#{1}: PatternSyntaxException.getMessage()
#{2}: PatternSyntaxException.getPattern()
#{3}: PatternSyntaxException.getIndex()
DN_RegExp=Express\u00e3o regular inv\u00e1lida: ''{0}

DN_org.netbeans.modules.java.hints.bugs.AnnotationsNotRuntime=Anota\u00e7\u00f5es sem Reten\u00e7\u00e3o de runtime
DESC_org.netbeans.modules.java.hints.bugs.AnnotationsNotRuntime=Adverte sobre acesso reflexivo a anota\u00e7\u00f5es com reten\u00e7\u00f5es CLASS ou SOURCE

DN_org.netbeans.modules.java.hints.bugs.Regexp=Express\u00e3o regular malformada
DESC_org.netbeans.modules.java.hints.bugs.Regexp=Adverte sobre express\u00f5es regulares malformadas

DN_org.netbeans.modules.java.hints.bugs.Tiny.stringReplaceAllDot=String.replaceAll(".", )
DESC_org.netbeans.modules.java.hints.bugs.Tiny.stringReplaceAllDot=Localiza ocorr\u00eancias de chamadas a String.replaceAll(".", $target), que substitui todos os caracteres da string de origem por $target.
# {0} - flag name
ERR_DuplicateFormatFlag=Flag duplicado: ''{0}''
# {0} - conversion spec
# {1} - flags
ERR_FormatConversionFlags=Os flags ''{1}'' n\u00e3o correspondem \u00e0 convers\u00e3o ''{0}''
# {0} - number of parameters in format string
# {1} - actual number of passed parameters
ERR_FormatMissingParameters=Poucos par\u00e2metros especificados para o formato. A string de formato requer: {0}, n\u00famero real: {1}
# {0} - format string
ERR_FormatWidthRequired=Largura especificada em ''{0}''
ERR_indentation=Recuo confuso
# {0} - argument index
ERR_InvalidFormatArgumentIndex=N\u00famero de argumentos inv\u00e1lido: ''{0}''
# {0} - precision specifier
ERR_InvalidFormatPrecision=Precis\u00e3o formatada inv\u00e1lida: ''{0}''
# {0} - width specifier
ERR_InvalidFormatWidth=Largura formatada inv\u00e1lida: ''{0}''
# {0} - value type [string representation]
# {1} - format specified
# {2} - parameter index
ERR_InvalidTypeForSpecifier=Tipo de valor inv\u00e1lido ''{0}'' para o especificador de formato ''{1}'', par\u00e2metro {2}
# {0} - error message
ERR_MalformedFormatString=String de formato incorreta: {0}
# {0} - xpath text
# {1} - XPath parser error message
ERR_MalformedXPathExpression=Express\u00e3o XPath malformada {0}: {1}
# {0} - argumentIndex
ERR_MessageFormatDateTime=O argumento {0} n\u00e3o \u00e9 uma data/hora
# {0} - argument index
ERR_MessageFormatNumber=O argumento {0} n\u00e3o \u00e9 um n\u00famero
# {0} - the original error from message format
ERR_MessageFormatStringMalformed=String de formato de mensagem inv\u00e1lido: {0}
# {0} - the desired number of arguments
ERR_MessageFormatTooFewVals=Poucos valores informados para o formato; {0} valores s\u00e3o necess\u00e1rios
# {0} - method name
ERR_MethodMayRecurse=O m\u00e9todo {0} poder\u00e1 se repetir se n\u00e3o for substitu\u00eddo em subclasses
# {0} - method name
ERR_MethodWillRecurse=O m\u00e9todo {0} ser\u00e1 repetido infinitamente
ERR_NullFormatString=A string de formato n\u00e3o deve ser nula
ERR_string-replace-all-dot=A chamada a String.replaceAll(".", $target) provavelmente n\u00e3o \u00e9 desejada
ERR_SyntaxError=Erro de sintaxe
# {0} - the specifier char
ERR_UnknownFormatSpecifier=Especificador de formato desconhecido: ''{0}''
# {0} - conversion flag
ERR_UnkownFormatFlag=Flag desconhecido: ''{0}''
FIX_AddCloneMethod=Substituir m\u00e9todo clone()
FIX_AddCloneNotSupportedException=Declarar CloneNotSupportedException
# {0} - constant identifier
FIX_AddMissingSwitchCase=Substituir label por switch case {0}
FIX_BroadCatchNarrowCatch=Usar tipo espec\u00edfico no catch
FIX_BroadCatchSplitIntoCatches=Criar catches para cada tipo de exce\u00e7\u00e3o
FIX_BroadCatchUnionCatch=Alterar para multicatch
# {0} - new component type
FIX_ChangeToArrayType=Alterar tipo de array para {0}[]
FIX_ImplementCloneableInterface=Implementar java.lang.Cloneable
FIX_MathRandomCastInt=Converter a express\u00e3o inteira que cont\u00e9m Math.random()
# {0} - new component type
FIX_ReplaceWithNewArray=Substituir por novo(a) {0}[]
FIX_string-replace-all-dot=Substituir pela chamada a String.replaceAll("\\.", $target)

DN_org.netbeans.modules.java.hints.bugs.CastVSInstanceOf=Cast/instanceof incompat\u00edveis
DESC_org.netbeans.modules.java.hints.bugs.CastVSInstanceOf=Cast incompat\u00edvel com instanceof incompat\u00edvel
ERR_CastVSInstanceOf=O cast \u00e9 incompat\u00edvel com determinado instanceof

DN_org.netbeans.modules.java.hints.bugs.Tiny.newObject=Resultado de novo Objeto ignorado
DESC_org.netbeans.modules.java.hints.bugs.Tiny.newObject=Resultado de novo Objeto ignorado
ERR_newObject=Nova inst\u00e2ncia ignorada

DN_org.netbeans.modules.java.hints.bugs.Tiny.systemArrayCopy=Chamada suspeita de System.arraycopy
DESC_org.netbeans.modules.java.hints.bugs.Tiny.systemArrayCopy=Localiza chamadas de System.arraycopy com deslocamentos negativos, extensos ou usados em objetos que n\u00e3o sejam arrays.
ERR_system_arraycopy_notarray={0} n\u00e3o \u00e9 uma inst\u00e2ncia de um tipo de array
ERR_system_arraycopy_negative={0} \u00e9 negativo

DN_org.netbeans.modules.java.hints.bugs.Tiny.equalsNull=.equals(null)
DESC_org.netbeans.modules.java.hints.bugs.Tiny.equalsNull=Localiza chamadas do m\u00e9todo Object.equals com par\u00e2metro literal 'null'.
ERR_equalsNull=Objeto igual a "null" nunca \u00e9 verdadeiro
FIX_equalsNull=Use == em vez de m\u00e9todos de compara\u00e7\u00e3o

DN_org.netbeans.modules.java.hints.bugs.Tiny.resultSet=\u00cdndice de coluna incorreto em ResultSet
DESC_org.netbeans.modules.java.hints.bugs.Tiny.resultSet=Reporta \u00edndices de coluna incorretos em v\u00e1rios m\u00e9todos de java.sql.ResultSet
ERR_ResultSetZero=O \u00edndice de coluna \u00e9 zero, mas as colunas de ResultSet s\u00e3o contadas a partir de 1
ERR_ResultSetNegative=O \u00edndice de coluna \u00e9 negativo, mas as colunas de ResultSet s\u00e3o contadas a partir de 1


DN_org.netbeans.modules.java.hints.bugs.EqualsHint.arrayEquals=.equals em Array
DESC_org.netbeans.modules.java.hints.bugs.EqualsHint.arrayEquals=.equals em array
DN_org.netbeans.modules.java.hints.EqualsHint=.equals em Tipos Incompat\u00edveis
DESC_org.netbeans.modules.java.hints.EqualsHint=.equals em tipos incompat\u00edveis
FIX_ReplaceWithArraysEquals=Substituir por Arrays.equals
FIX_ReplaceWithInstanceEquals=Substituir por ==

ERR_ARRAY_EQUALS=.equals() chamado em array
ERR_INCOMPATIBLE_EQUALS=.equals() em tipos incompat\u00edveis

# {0} - StringBuffer/StringBuilder
FIX_StringBufferCharConstructor=Substituir por novo(a) {0}().append()
FIX_UseArraysDeepHashCode=Usar Arrays.deepHashCode()
FIX_UseArraysHashCode=Usar Arrays.hashCode()
FIX_UseNullSafeEquals=Substituir por null-safe equals()
FIX_WrapUsingArraysAsDeepList=Encapsular array usando Arrays.deepToString
FIX_WrapUsingArraysAsList=Encapsular array usando Arrays.toString
LBL_org.netbeans.modules.java.hints.bugs.EqualsHint.ERASURE_PREFS_KEY=<html>A Cria\u00e7\u00e3o de Dicas Iguais Considera &Apagar<br> Tipos Comparados
OPT_ReportFinallyRethrow=Reportar relan\u00e7amento de exce\u00e7\u00f5es capturadas
TEXT_ArrayConcatenatedToString=Array concatenado com String
TEXT_ArrayFormatParameter=Inst\u00e2ncia de array especificada como par\u00e2metro para uma fun\u00e7\u00e3o formatadora
TEXT_ArrayPrintedOnStream=Inst\u00e2ncia de array impressa em PrintStream
TEXT_ArrayPrintedOnWriter=Inst\u00e2ncia de array impressa em PrintWriter
TEXT_AssertWithSideEffects=A condi\u00e7\u00e3o de declara\u00e7\u00e3o produz efeitos colaterais
# {0} - typename of the boxed type
TEXT_BoxedValueIdentityComparison=Valores de {0} comparados usando == ou !=
# {0} - preceding items as text
# {1} - final item
TEXT_BroadCatchExceptionListEnd={0} e {1}
# {0} - preceding items as text
# {1} - next item

# {0} - starting item

# {0} - the catched exception type
# {1} - the actual matching exception types
TEXT_BroadCatchMaskedExceptions=A captura({0}) \u00e9 muito grande, ela captura os seguintes tipos de exce\u00e7\u00e3o: {1}
# {0} - the catched exception type
# {1} - the actual matching exception type
TEXT_BroadCatchMoreSpecificException=A captura({0}) \u00e9 muito grande, a exce\u00e7\u00e3o obtida \u00e9 {1}
TEXT_CloneableWithoutClone=A classe clon\u00e1vel n\u00e3o implementa clone()
TEXT_CloneWithoutCloneable=clone() em uma classe n\u00e3o Clon\u00e1vel
TEXT_CloneWithoutCloneNotSupported=clone() n\u00e3o gera CloneNotSupportedException
TEXT_CloneWithoutSuperClone=clone() n\u00e3o chama super.clone()
# {0} - parameter name
TEXT_ComparatorParameterNotUsed=Comparator.comparable n\u00e3o usa o par\u00e2metro ''{0}''
TEXT_ConfusingNullPassedToVararg=Valor nulo confuso especificado para m\u00e9todo vararg
TEXT_ConfusingPrimitveArrayToVararg=Array de primitiva confuso especificado para o m\u00e9todo vararg
TEXT_HashCodeOnArray=hashCode() chamado na inst\u00e2ncia do array
TEXT_MathRandomCastInt=Math.int() convertido imediatamente em valor inteiro ou longo
TEXT_MissingSwitchCase=Instru\u00e7\u00e3o "case'' de switch possivelmente ausente
# {0} - the rogue statement
TEXT_returnBreakContinueInFinallyBlock=A instru\u00e7\u00e3o ''{0}'' no bloco ''finally'' descarta as exce\u00e7\u00f5es n\u00e3o tratadas
# {0} - StringBuffer/StringBuilder
TEXT_StringBufferCharConstructor=Construtor {0} chamado com o argumento ''char''
# {0} - the array type
# {1} - the collection parameter type
TEXT_SuspiciousToArrayCast=Chamada Collection.toArray() suspeita. O tipo de array {0}[] n\u00e3o \u00e9 igual ao tipo para convers\u00e3o {1}[]
# {0} - the array type
# {1} - the collection parameter type
TEXT_SuspiciousToArrayCol=Chamada Collection.toArray() suspeita. O tipo de item de coleta {1} n\u00e3o \u00e9 atribu\u00edvel ao tipo de componente de array {0}
TEXT_ThrowableNotThrown=Inst\u00e2ncia Throwable n\u00e3o lan\u00e7ada
TEXT_ThrowableValueNotThrown=O resultado do m\u00e9todo Throwable \u00e9 ignorado
TEXT_throwsInFinallyBlock=A instru\u00e7\u00e3o 'throw' no bloco 'finally' pode ocultar a exce\u00e7\u00e3o original
TEXT_ToStringCalledOnArray=toString() chamado na inst\u00e2ncia do array
TP_org.netbeans.modules.java.hints.bugs.EqualsHint.ERASURE_PREFS_KEY=As decis\u00f5es de dicas iguais t\u00eam base na exclus\u00e3o de tipos comparados

HINT_SuspiciousCall=Chamada suspeita para {0}:\nTipo esperado {2}, tipo real {1}
HINT_SuspiciousCallIncompatibleTypes=Chamada suspeita para {0}:\nDeterminado objeto n\u00e3o pode conter inst\u00e2ncias de {1} (esperado {2})
DN_org.netbeans.modules.java.hints.bugs.CollectionRemove=Chamada de m\u00e9todo suspeita
DESC_org.netbeans.modules.java.hints.bugs.CollectionRemove=Adverte sobre as chamadas suspeitas a Collection.remove/contains e Map.containsKey/containsValue/remove
LBL_org.netbeans.modules.java.hints.bugs.CollectionRemove.WARN_FOR_CASTABLE_KEY=Advertir Tamb\u00e9m sobre Tipos Que Podem Ser Difundidos
TP_org.netbeans.modules.java.hints.bugs.CollectionRemove.WARN_FOR_CASTABLE_KEY=Advertir Tamb\u00e9m sobre Tipos Que Podem Ser Difundidos

DN_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.unusedAssignment=Designa\u00e7\u00e3o N\u00e3o Utilizada
DESC_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.unusedAssignment=Designa\u00e7\u00e3o N\u00e3o Utilizada
DN_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.deadBranch=Ramifica\u00e7\u00e3o Inativa
DESC_org.netbeans.modules.java.hints.bugs.UnusedAssignmentOrBranch.deadBranch=Ramifica\u00e7\u00e3o Inativa
LBL_UNUSED_ASSIGNMENT_LABEL=O valor designado nunca \u00e9 utilizado
LBL_DEAD_BRANCH=A ramifica\u00e7\u00e3o nunca \u00e9 utilizada

DN_org.netbeans.modules.java.hints.bugs.Unbalanced.Array=Leitura/grava\u00e7\u00e3o desbalanceada com arrays
DESC_org.netbeans.modules.java.hints.bugs.Unbalanced.Array=Leitura/grava\u00e7\u00e3o desbalanceada com arrays
ERR_UnbalancedArrayREAD=S\u00f3 \u00e9 poss\u00edvel ler o array, e n\u00e3o gravar
ERR_UnbalancedArrayWRITE=S\u00f3 \u00e9 poss\u00edvel gravar no array, e n\u00e3o ler

DN_org.netbeans.modules.java.hints.bugs.Unbalanced.Collection=Leitura/grava\u00e7\u00e3o desbalanceada com cole\u00e7\u00f5es
DESC_org.netbeans.modules.java.hints.bugs.Unbalanced.Collection=Leitura/grava\u00e7\u00e3o desbalanceada com cole\u00e7\u00f5es
ERR_UnbalancedCollectionREAD=A cole\u00e7\u00e3o nunca \u00e9 adicionada a
ERR_UnbalancedCollectionWRITE=A cole\u00e7\u00e3o \u00e9 apenas adicionada, nunca lida


DESC_org.netbeans.modules.java.hints.bugs.CheckReturnValueHint=Confirma se um resultado do m\u00e9todo marcado com @CheckReturnValue foi realmente verificado.
ERR_org.netbeans.modules.java.hints.bugs.CheckReturnValueHint=Deve verificar o valor de retorno do m\u00e9todo

DN_NPECheck=Cancelar Refer\u00eancia de Ponteiro Nulo
DESC_NPECheck=Verifica v\u00e1rios problemas relacionados ao cancelamento de refer\u00eancia de nulos
ERR_DereferencingNull=Cancelando a refer\u00eancia de ponteiro nulo
ERR_PossiblyDereferencingNull=Cancelando a refer\u00eancia de ponteiro nulo poss\u00edvel
ERR_AssigningNullToNotNull=Designando nulo para vari\u00e1vel n\u00e3o nula
ERR_PossibleAssigingNullToNotNull=Designando nulo poss\u00edvel para vari\u00e1vel n\u00e3o nula
ERR_NULL_TO_NON_NULL_ARG=Passando nulo para argumento n\u00e3o nulo
ERR_POSSIBLENULL_TO_NON_NULL_ARG=Passando nulo poss\u00edvel para argumento n\u00e3o nulo
ERR_NotNullWouldBeNPE=Teste desnecess\u00e1rio para nulo - uma NullPointerException j\u00e1 teria sido lan\u00e7ada
ERR_NotNull=Teste desnecess\u00e1rio para nulo - a express\u00e3o nunca \u00e9 nula
ERR_ReturningNullFromNonNull=Retornando valor nulo de um m\u00e9todo cujo tipo de retorno \u00e9 n\u00e3o nulo
ERR_ReturningPossibleNullFromNonNull=Retornando valor possivelmente nulo de um m\u00e9todo cujo tipo de retorno \u00e9 n\u00e3o nulo

LBL_NPECheck.ENABLE_FOR_FIELDS=Tamb\u00e9m advertir para &campos
TP_NPECheck.ENABLE_FOR_FIELDS=Tamb\u00e9m fornecer advert\u00eancias para campos - experimental

DN_TryCatchFinally_finallyDiscardsException=o bloco 'finally' suprime as exce\u00e7\u00f5es
DESC_TryCatchFinally_finallyDiscardsException=Reporta o uso das instru\u00e7\u00f5es de <b>return</b> no bloco <b>finally</b>. A op\u00e7\u00e3o <b>return</b> descarta a exce\u00e7\u00e3o que est\u00e1 sendo gerada e faz com que todo o m\u00e9todo seja conclu\u00eddo normalmente, o que geralmente n\u00e3o \u00e9 o resultado desejado. As instru\u00e7\u00f5es <b>Break</b> e <b>continue</b> que interrompem o bloco <b>finally</b> tamb\u00e9m ser\u00e3o reportadas.

DN_TryCatchFinally_finallyThrowsException='throw' no bloco 'finally'
DESC_TryCatchFinally_finallyThrowsException=O lan\u00e7amento de uma exce\u00e7\u00e3o no bloco <b>finally</b> ocultar\u00e1 a exce\u00e7\u00e3o original lan\u00e7ada pelos blocos <b>try</b> ou <b>catch</b> associados dos handlers de exce\u00e7\u00e3o de fechamento. Observe que a exce\u00e7\u00e3o ainda pode ser inspecionada com o uso de <b>Throwable.getSuppressedException()</b>, embora n\u00e3o possa ser capturada diretamente por um bloco <b>catch</b>.<p/>Se a op\u00e7\u00e3o "<i>Reportar relan\u00e7amento de exce\u00e7\u00f5es capturadas</i>" estiver desativada, a dica n\u00e3o reportar\u00e1 instru\u00e7\u00f5es, o que apenas relan\u00e7a as mesmas inst\u00e2ncias de exce\u00e7\u00e3o recebidas por um handler de captura de fechamento.

DN_CloneAndCloneable_cloneWithoutSuperClone=clone() n\u00e3o chama super.clone()
DESC_CloneAndCloneable_cloneWithoutSuperClone=As inst\u00e2ncias clonadas devem ser alocadas usando <b>super.clone()</b>, dessa forma, os campos s\u00e3o inicializados adequadamente.

DN_CloneAndCloneable_cloneWithoutThrows=clone() n\u00e3o gera CloneNotSupportedException
DESC_CloneAndCloneable_cloneWithoutThrows=Se clone() n\u00e3o for declarado para gerar <b>CloneNotSupportedException</b>, as subclasses n\u00e3o podem proibir a clonagem usando o contrado <b>Clon\u00e1vel</b> padr\u00e3o.

DN_CloneAndCloneable_cloneInNonCloneableClass=clone() em uma classe n\u00e3o Clon\u00e1vel
DESC_CloneAndCloneable_cloneInNonCloneableClass=O contrato de <b>Object.clone()</b> exige que uma classe implemente uma interface do marcador <b>Clon\u00e1vel</b>. Caso isso n\u00e3o ocorra, o m\u00e9todo clone() gerar\u00e1 <b>CloneNotSupportedException</b>. Declarar a interface <b>Clon\u00e1vel</b> geralmente \u00e9 ignorado.

DN_CloneAndCloneable_cloneableWithoutClone=A classe clon\u00e1vel n\u00e3o implementa clone().
DESC_CloneAndCloneable_cloneableWithoutClone=<html>A classe <b>Clon\u00e1vel</b> deve substituir clone(). Se isso n\u00e3o ocorrer, a opera\u00e7\u00e3o de clonagem usar\u00e1 o <b>java.lang.Object.clone()</b> padr\u00e3o, que geralmente n\u00e3o \u00e9 adequado. A falta de substitui\u00e7\u00e3o de <b>clonagem</b> indica um poss\u00edvel erro.</html>
BroadCatchCustomizer.cbCommonTypes.text=&Reportar supertipos comuns

DN_BroadCatch=Cl\u00e1usula 'catch' muito grande
DESC_BroadCatch=Reporta cl\u00e1usulas <b>catch</b>, que capturam um supertipo, em vez do tipo de exce\u00e7\u00e3o gerada realmente. Tais catches grandes podem fornecer relat\u00f3rios inadequados ou tratamento de exce\u00e7\u00e3o geral. <p/>\u00c0s vezes o m\u00e9todo produz <b>mais que um</b> tipo de exce\u00e7\u00e3o que pode ser tratada, capturando o supertipo comum. A op\u00e7\u00e3o "<i>Reportar supertipos comuns</i>" controla se as situa\u00e7\u00f5es ser\u00e3o reportadas. As <i>exce\u00e7\u00f5es gen\u00e9ricas</i> configuradas para a dica <b>Usar Catch Espec\u00edfico</b> s\u00e3o sempre reportadas. 
BroadCatchCustomizer.cbSuppressUmbrellas.text=Ignorar exce\u00e7\u00f5es de &umbrella


DN_MathRandomCastInt=Math.random() convertido em inteiro
DESC_MathRandomCastInt=Math.random produz um valor dobrado na faixa 0..1. Se o valor for imediatamente convertido em inteiro, ele ser\u00e1 sempre arredondado para 0, o que provavelmente n\u00e3o \u00e9 o que se pretende. A corre\u00e7\u00e3o deslocar\u00e1 a convers\u00e3o, de modo que a express\u00e3o aritm\u00e9tica seja convertida e possivelmente arredondada.

DN_AssertWithSideEffects=Declarar com efeitos colaterais
DESC_AssertWithSideEffects=Identifica instru\u00e7\u00f5es cuja condi\u00e7\u00e3o causa alguns efeitos colaterais conhecidos. A dica verifica designa\u00e7\u00f5es a vari\u00e1veis e campos locais feitas na express\u00e3o de condi\u00e7\u00e3o. Se a express\u00e3o chamar um m\u00e9todo, a dica verificar\u00e1 se o m\u00e9todo est\u00e1 sendo designado a alguns campos. Apenas os m\u00e9todos <b>chamados diretamente</b> s\u00e3o verificados. Por raz\u00f5es de desempenho, apesar de o m\u00e9todo chamado poder ser resolvido para algumas substitui\u00e7\u00f5es em subclasses durante o runtime, apenas o corpo do m\u00e9todo de classe base \u00e9 inspecionado. As chamadas para os m\u00e9todos de tipo de interface s\u00e3o ignoradas completamente. A inspe\u00e7\u00e3o de todas as poss\u00edveis substitui\u00e7\u00f5es de um m\u00e9todo prejudicaria muito o desempenho.

DN_ComparatorParameterNotUsed=Comparator.compare() n\u00e3o usa o par\u00e2metro {0}
DESC_ComparatorParameterNotUsed=O Comparador dever\u00e1 comparar os argumentos com seu m\u00e9todo de compara\u00e7\u00e3o. Se um dos par\u00e2metros n\u00e3o for usado para compara\u00e7\u00e3o, ele indicar\u00e1 que o outro argumento poder\u00e1 ser comparado com ele mesmo ou com algum outro erro na implementa\u00e7\u00e3o.

DN_HashCodeOnArray=hashCode() usado na inst\u00e2ncia do array
DESC_HashCodeOnArray=O hashCode para inst\u00e2ncias do array foi herdado de java.lang.Object e se baseia na refer\u00eancia do array, e n\u00e3o no conte\u00fado dele.<p>Para obter um hashCode mais razo\u00e1vel, que reflita objetos ou valores contidos, use <b>Arrays.hashCode</b>ou <b>Arrays.deepHashCode()</b>

DN_ToStringOnArray=toString() usado na inst\u00e2ncia do array
DESC_ToStringOnArray=A implementa\u00e7\u00e3o de toString() para arrays n\u00e3o converte o conte\u00fado do array em String; em vez disso, ela imprime o tipo do array e o c\u00f3digo de hash (definido como c\u00f3digo de hash de identidade). Para obter uma representa\u00e7\u00e3o de string do conte\u00fado do array, o array pode ser, por exemplo, encapsulado em Arrays.asList(), da mesma forma que Coletas produzem uma representa\u00e7\u00e3o de conte\u00fado em toString().

DN_ArrayConversionToString=Array convertido em String
DESC_ArrayConversionToString=Quando uma inst\u00e2ncia de array \u00e9 especificada para determinados m\u00e9todos de biblioteca, como, por exemplo, PrintStream, para m\u00e9todos de formata\u00e7\u00e3o ou s\u00e3o concatenados com uma String,uma chamada para o m\u00e9todo <b>toString</b> na inst\u00e2ncia de array ser\u00e1 feita. A representa\u00e7\u00e3o resultante n\u00e3o ter\u00e1 conte\u00fado de array, mas um tipo de array e um c\u00f3digo hash.

DN_ConfusingVarargsNull=Valor nulo confuso especificado para m\u00e9todo varargs
DESCR_ConfusingVarargsNull=Se o valor <b>nulo</b> for especificado no lugar do par\u00e2metro de tamanho de vari\u00e1vel (retic\u00eancias) para um m\u00e9todo, ele n\u00e3o ser\u00e1 recebido como um item <b>nulo</b> no array de par\u00e2metro de tamanho de vari\u00e1vel, mas o par\u00e2metro inteiro de tamanho de vari\u00e1vel ser\u00e1 nulo. <p/>\u00c9 necess\u00e1rio especificar um valor nulo explicitamente.

DN_ConfusingVarargsArray=Array de primitiva confusa especificada para o m\u00e9todo varargs
DESCR_ConfusingVarargsArray=Um array de primitiva especificado para o m\u00e9todo de argumento da vari\u00e1vel n\u00e3o ser\u00e1 encapsulado e seus itens n\u00e3o ser\u00e3o vistos como itens do argumento do tamanho da vari\u00e1vel no m\u00e9todo chamado. Em vez disso, o array ser\u00e1 especificado como um item simples.

DN_InfiniteRecursion=Recurs\u00e3o infinita
DESCR_InfiniteRecursion=Detecta m\u00e9todos que dever\u00e3o se repetir infinitamente e que s\u00f3 poder\u00e3o ser encerrados por meio do lan\u00e7amento de uma exce\u00e7\u00e3o. Apenas recurs\u00f5es definitivas s\u00e3o reportadas, e n\u00e3o possibilidades. A recurs\u00e3o s\u00f3 \u00e9 inspecionada no m\u00e9todo simples (portanto, uma recurs\u00e3o como a -> b -> a n\u00e3o \u00e9 reportada). Uma recurs\u00e3o em diversas inst\u00e2ncias da classe n\u00e3o \u00e9 reportada. A dica pode ser desativada para o caso de o m\u00e9todo de recurs\u00e3o ser sobreposto em subclasses, pois as implementa\u00e7\u00f5es de subclasse podem evitar a recurs\u00e3o. No entanto, se alguma subclasse n\u00e3o for substitu\u00edda e corrigir o m\u00e9todo, a recurs\u00e3o ainda poder\u00e1 acontecer. Por padr\u00e3o, a inspe\u00e7\u00e3o emite uma advert\u00eancia mesmo para o caso substitu\u00edvel.

OPTNAME_InfiniteRecursionNoOverridables=Excluir m\u00e9todos que podem ser substitu\u00eddos
OPTDESC_InfiniteRecursionNoOverridables=N\u00e3o reporta a recurs\u00e3o de m\u00e9todos, que podem ser substitu\u00eddos em subclasses e a substitui\u00e7\u00e3o poderia evitar perfeitamente a recurs\u00e3o definitiva.

DN_MalformedXPathExpression=Express\u00e3o XPath mal formada
DESC_MalformedXPathExpression=A sintaxe de verifica\u00e7\u00e3o de dica da express\u00e3o XPath especificada para o avaliador XPath JAXP. As chamadas verificadas s\u00e3o:<ul><li>chamadas de compila\u00e7\u00e3o e avalia\u00e7\u00e3o XPath JAXP,<li>cria\u00e7\u00e3o de XPath Xalan-J e uso da API XPath,<li>chamadas JXPath do Apache Comum</ul>

DN_MalformedFormatString=String de formato mal formada
DESC_MalformedFormatString=Reporta strings de formato especificadas para os m\u00e9todos String.format e printf-style. Verifica se o n\u00famero de argumentos corresponde ao n\u00famero de % especificadores e se os argumentos t\u00eam o tipo correto. 

DN_WrapperIdentityComparison=Compara\u00e7\u00e3o de identidades de valores demarcados
DESC_WrapperIdentityComparison=Se dois valores demarcados forem comparados usando <i>==</i> ou <i>!=</i>, a identidade do objeto demarcado ser\u00e1 comparada, em vez do valor demarcado. A inspe\u00e7\u00e3o sugere uma corre\u00e7\u00e3o, o que executa uma compara\u00e7\u00e3o sem nulos usando <b>java.util.Objects.equals()</b>.<p/>A corre\u00e7\u00e3o s\u00f3 est\u00e1 dispon\u00edvel para um n\u00edvel de origem >= 7, pois uma express\u00e3o condicional exigiria uma avalia\u00e7\u00e3o m\u00faltipla de um dos operandos, o que talvez n\u00e3o seja poss\u00edvel por causa dos efeitos colaterais potenciais da express\u00e3o.

DN_StringBufferCharConstructor=Construtor StringBuffer chamado com o argumento "char''
DESC_StringBufferCharConstructor=Os construtores <b>StringBuffer</b> e <b>StringBuilder</b> aceitam <i>int</i> como par\u00e2metro. Se um <i>char</i> for especificado, ele ser\u00e1 promovido silenciosamente para int, e a chamada criar\u00e1 uma inst\u00e2ncia de <b>StringBuffer</b> com uma capacidade inicial definida, em vez de um StringBuffer que inicialmente contenha um \u00fanico caractere (o especificado).<p/>A corre\u00e7\u00e3o oferecida adicionar\u00e1 um <i>append</i> que, por sua vez, adicionar\u00e1 o caractere.

DN_SuspiciousToArray=Chamada Collections.toArray() suspeita
DESC_SuspiciousToArrayCall=Detecta chamadas cujo par\u00e2metro de tipo de array n\u00e3o corresponde ao par\u00e2metro de tipo da Coleta. O par\u00e2metro de tipo da coleta dever\u00e1 ser design\u00e1vel ao tipo de array. Para Coletas brutas, a dica verifica se o tipo de array ser\u00e1 design\u00e1vel ao tipo de array da convers\u00e3o.<p/>A dica se oferece para alterar o tipo de array rec\u00e9m-criado ou para alterar o par\u00e2metro <b>toArray</b> para <i>new Type[]</i>, mas a corre\u00e7\u00e3o n\u00e3o estar\u00e1 dispon\u00edvel se a express\u00e3o de coleta tiver alguns efeitos colaterais.

DN_CreatedThrowableNotThrown=Throwable criado n\u00e3o lan\u00e7ado
DESC_DN_CreatedThrowableNotThrown=A dica detectou a cria\u00e7\u00e3o de um Throwable, que foi descartado. A cria\u00e7\u00e3o de um Throwable tem alto custo, e n\u00e3o usar um Throwable criado pode indicar um c\u00f3digo de tratamento de erros n\u00e3o finalizado. O Throwable ser\u00e1 considerado <i>usado</i> se for lan\u00e7ado, especificado para um m\u00e9todo como um par\u00e2metro, retornado como o resultado de um m\u00e9todo ou designado a um campo. As poss\u00edveis designa\u00e7\u00f5es por meio de vari\u00e1veis locais tamb\u00e9m s\u00e3o inspecionadas para determinar se o valor ser\u00e1 finalmente <i>usado</i>.

DN_ThrowableMethodResultIgnored=O resultado do m\u00e9todo Throwable \u00e9 ignorado
DESC_ThrowableMethodResultIgnored=Se um Throwable for retornado de uma chamada de m\u00e9todo como um <i>valor de retorno</i> (em vez de ser lan\u00e7ado), normalmente, de alguma forma, ele ser\u00e1 registrado (designado), processado (especificado para outra chamada de m\u00e9todo) ou lan\u00e7ado. Ignorar esse Throwable ou us\u00e1-lo em alguma compara\u00e7\u00e3o simples indica um defeito no tratamento de erros ou que o m\u00e9todo dever\u00e1 retornar outro valor para economizar tempo para a cria\u00e7\u00e3o do rastreamento da pilha do Throwable.

DN_MissingSwitchcase=Instru\u00e7\u00e3o "case'' de switch possivelmente ausente
DESC_MissingSwitchcase=A dica detecta um erro de digita\u00e7\u00e3o em um label de <b>instru\u00e7\u00e3o switch</b> sem uma instru\u00e7\u00e3o <b>case</b>.<p/>Apesar de poder ser um label pretendido para a instru\u00e7\u00e3o seguinte, tamb\u00e9m pode ser uma ramifica\u00e7\u00e3o <b>case</b> pretendida em que a palavra-chave foi esquecida.

