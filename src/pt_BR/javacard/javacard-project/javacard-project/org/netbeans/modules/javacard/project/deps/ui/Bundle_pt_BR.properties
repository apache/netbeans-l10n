# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2009, 2016 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
Sig#DependenciesChildren
MSG_REMOVING_DEPENDENCY=Removendo Depend\u00eancia {0}

DependencyPanel.jLabel1.text=Tipo de &Biblioteca

DependencyPanel.jLabel2.text=Estrat\u00e9gia de &Implanta\u00e7\u00e3o
DependencyPanel.jLabel3.text=&Caminho

DependencyPanel.jLabel4.text=&Exp Arquivo


#Depend
ACTION_REMOVE_DEPENDENCY=Remover
LIBRARIES_NODE_NAME=Bibliotecas
DependenciesEditorPanel.libsLabel.text=&Bibliotecas
DependenciesEditorPanel.addButton.text=&Adicionar
DependenciesEditorPanel.remButton.text=&Remover
DependenciesEditorPanel.moveUpButton.text=Mover para &Cima
DependenciesEditorPanel.moveDownButton.text=Mover para &Baixo
DependenciesEditorPanel.editButton.text=&Editar


DependenciesEditorPanel.pathLabel.text=&Caminho
DependenciesEditorPanel.depStrategyLabel.text=&Estrat\u00e9gia de Implanta\u00e7\u00e3o
TTL_EDIT_LIBRARY=Editar Detalhes da Biblioteca

#DependenciesPanel
MSG_LOADING=Carregando e resolvendo bibliotecas...
MSG_LOAD_FAILED=N\u00e3o foi poss\u00edvel resolver as bibliotecas - metadados do projeto provavelmente corrompidos
ChooseDependencyKindPanelVisual.jarFileDescription.text=<html>Depende de um arquivo JAR que voc\u00ea tem no disco. Utilize esta op\u00e7\u00e3o se tiver <ul><li>Um arquivo JAR que n\u00e3o deve ser implantado, mas que representa alguma API que existe no cart\u00e3o de destino, ou se tiver </li><li>Um arquivo JAR que contenha classes que devem ser inclu\u00eddas no arquivo JAR do seu projeto</li></ul>
ChooseDependencyKindPanelVisual.projectDescription.text=<html>Depende de outro projeto que voc\u00ea tem no disco. Se o projeto for Java Card, ele ser\u00e1 implantado conforme necess\u00e1rio antes deste projeto ser implantado.
ChooseDependencyKindPanelVisual.jarfileButton.text=Arquivo JAR
ChooseDependencyKindPanelVisual.projectButton.text=Projeto

WIZARD_CHOOSE_LIBRARY_KIND=Escolher Tipo

ChooseOriginPanelVisual.originLbl.text=Origem
ChooseOriginPanelVisual.browseOriginButton.text=&Procurar...
LBL_FILE=Arquivo
LBL_PROJECT=Projeto
FILE_FILTER_EXP_FILES=Pasta ou Zip/JAR
TTL_BROWSE_SOURCES=Localizar Pasta de C\u00f3digo-Fonte, Arquivo Zip ou JAR
FILE_FILTER_SOURCES=Pastas, Arquivos Zip ou JAR
FILE_FILTER_SIGNATURE=Arquivos de assinatura (.sig, .signature)
FILE_FILTER_JAR_FILES=Arquivos Compactados Java
TTL_BROWSE_SIGFILE=Localizar Arquivo de Assinatura
ERR_EXP_FILE_MISSING=O arquivo de exporta\u00e7\u00e3o n\u00e3o foi definido ou n\u00e3o \u00e9 um arquivo
ERR_EXPECTING_DIR=''{0}" n\u00e3o \u00e9 uma pasta
ERR_EXPECTING_FILE=''{0}'' n\u00e3o \u00e9 um arquivo
ERR_NON_EXISTENT_FILE=Local do projeto/arquivo JAR n\u00e3o definido
ERR_ORIGIN_NOT_SET=Local do projeto/arquivo JAR n\u00e3o definido
ERR_SOURCE_FILE_DOES_NOT_EXIST=O local de origem n\u00e3o existe
ERR_MISSING_MANIFEST=O arquivo JAR n\u00e3o possui META-INF/MANFEST.MF
#WizardDepKind
JAR_WITH_EXP_FILE=Jar com Arquivo Exp ({0})
PROJECT=Projeto
JAR_FILE=Arquivo Jar ({0})
CLSLIB_JAR=JAR de Biblioteca Cl\u00e1ssica ({0})
EXTLIB_JAR=JAR de Biblioteca de Extens\u00f5es ({0})
JAVA_PROJECT=Projeto Java

#ChooseOriginWizardPanel
ERR_NON_EXISTENT_JAR_FILE={0} n\u00e3o existe
ERR_NOT_FILE=N\u00e3o \u00e9 um arquivo: {0}
ERR_NOT_FOLDER=N\u00e3o \u00e9 uma pasta: {0}
ERR_EXP_FILE_NOT_SET=Arquivo de exporta\u00e7\u00e3o n\u00e3o definido
ERR_EXP_FILE_NON_EXISTENT={0} n\u00e3o existe
ERR_PROJECT_CANNOT_DEPEND_ON_SELF=N\u00e3o \u00e9 poss\u00edvel adicionar um projeto ao pr\u00f3prio projeto como uma biblioteca
ERR_NOT_PROJECT_ROOT={0} n\u00e3o \u00e9 um diret\u00f3rio raiz do projeto
ERR_NOT_PROJECT={0} n\u00e3o \u00e9 um projeto
ERR_NOT_LIBRARY_PROJECT={0} n\u00e3o \u00e9 um projeto de biblioteca
ERR_WRONG_MANIFEST_TAG=O manifesto jar deve listar o Tipo de Aplica\u00e7\u00e3o como {0}, n\u00e3o ''{1}''
ERR_NOT_JAVA_PROJECT=N\u00e3o \u00e9 um projeto Java - nada a ser inclu\u00eddo no classpath: {0}
ERR_CLASSIC_TO_EXT_DEPENDENCY=Os projetos cl\u00e1ssicos podem n\u00e3o depender de projetos Card 3 e vice-versa

#ChooseDeploymentStrategyPanelVisual
WIZARD_STEP_CHOOSE_DEPLOYMENT_STRATEGY=Selecionar Estrat\u00e9gia de Implanta\u00e7\u00e3o
WARNING_DEPLOYMENT_STRATEGY=Importante: o suporte ao script de build para as estrat\u00e9gias de implanta\u00e7\u00e3o ainda n\u00e3o foi implantado. Atualmente suas depend\u00eancias ser\u00e3o adicionadas somente ao classpath do tempo de compila\u00e7\u00e3o. Isso significa que, atualmente, todas as depend\u00eancias devem ser implantadas manualmente.\n\nConfigure sua estrat\u00e9gia de implanta\u00e7\u00e3o conforme suas necessidades de longo prazo; o suporte ao script de build para depend\u00eancias complexas ser\u00e1 disponibilizado em uma build futura.

#DependencyWizardIterator
TTL_ADD_LIBRARY=Adicionar Biblioteca

#AddDependencyAction
ACTION_ADD_DEPENDENCY=Adicionar Biblioteca...
MSG_LOADING_DEPS=Carregando Depend\u00eancias...
WIZARD_STEP_CHOOSE_ORIGIN=Escolher Arquivos

#AddDependencyWizardIterator
LOCATION_IN_WIZARD={0} de {1}

#ChooseDependencyKindWizardPanel
ERR_CHOOSE_DEP_KIND=Escolher o tipo de biblioteca a ser adicionada

#ChooseDependencyKindWizardPanel
ERR_CHOOSE_DEPLOYMENT=Escolha como a biblioteca ser\u00e1 implantada
ChooseOriginPanelVisual.sourcesLabel.text=&Origens

ChooseOriginPanelVisual.browseSourcesButton.text=Pr&ocurar
ChooseSigOrExpFilePanelVisual.fileLabel.text=Arquivo Exp (opcional)

ChooseSigOrExpFilePanelVisual.browseFileButton.text=&Procurar...

#IntermediatePanelKind
SIG_FILE=Arquivo de Assinatura
EXP_FILE=Caminho de Exporta\u00e7\u00e3o (opcional)
SIG_FILE.desc=\u00c9 necess\u00e1rio um arquivo de assinatura para implantar applets cl\u00e1ssicas ou projetos de biblioteca
EXP_FILE.desc=As bibliotecas Java Card que destinadas \u00e0 implanta\u00e7\u00e3o em um dispositivo requerem um diret\u00f3rio ou arquivo zip de arquivos .exp (export), 1 por arquivo de pacote na mesma estrutura de pacotes das classes. Se esta biblioteca tiver um conjunto de arquivos de exporta\u00e7\u00e3o, defina aqui o caminho para o diret\u00f3rio raiz. \n\nSe nenhum caminho de exporta\u00e7\u00e3o for definido, as \u00fanicas op\u00e7\u00f5es de implanta\u00e7\u00e3o ser\u00e3o pressupor que as classes deste JAR j\u00e1 est\u00e3o no cart\u00e3o ou incluir as classes deste JAR no seu projeto.
#ChooseSigOrExpFilePanelVisual
ERR_FILE_DOES_NOT_EXIST={0} n\u00e3o existe
ERR_SIG_FILE_NOT_SET=Arquivo de Assinatura n\u00e3o definido
LBL_EXP_FILE=Caminho de Exporta\u00e7\u00e3o (opcional)
LBL_SIG_FILE=Arquivo de Assinatura
NAME_EXP_FILE_PANEL=Escolher Arquivo de Exporta\u00e7\u00e3o
NAME_SIG_FILE_PANEL=Localizar Arquivo de Assinatura
EditOneDependencyPanel.deploymentStrategyLabel.text=Estrat\u00e9gia de &Implanta\u00e7\u00e3o
EditOneDependencyPanel.pathLabel.text=&Caminho

MSG_BAD_JAR=N\u00e3o foi poss\u00edvel ler o JAR {0}
MSG_NOT_PROJECT=N\u00e3o \u00e9 um projeto: {0}
MSG_NOT_PROJECT_ROOT=N\u00e3o \u00e9 o diret\u00f3rio raiz do projeto: {0}
MSG_WRONG_JAR_TYPE=N\u00e3o \u00e9 poss\u00edvel usar um JAR de aplica\u00e7\u00e3o/applet como uma biblioteca ({0})
MSG_WRONG_PROJECT_TYPE=N\u00e3o \u00e9 poss\u00edvel usar um projeto de aplica\u00e7\u00e3o/applet como uma biblioteca ({0})
MSG_CLASSIC_LIB_REQUIRES_EXP=Os arquivos de exporta\u00e7\u00e3o s\u00e3o necess\u00e1rios para usar a biblioteca cl\u00e1ssica
MSG_EXT_PROJECT_REQUIRES_EXT_DEP=Os projetos Java Card 3 n\u00e3o podem chamar JARs de Biblioteca Cl\u00e1ssica
MSG_CLASSIC_PROJECT_REQUIRES_CLASSIC_DEP=Os projetos Java Card Cl\u00e1ssicos n\u00e3o podem chamar JARs do Java Card 3
MSG_DEPEND_ON_SELF=O projeto n\u00e3o pode depender dele pr\u00f3prio
MSG_PROJECT_MUST_BE_FOLDER=O projeto deve ser uma pasta: {0}
ERR_NO_BUILD_SCRIPT=N\u00e3o \u00e9 poss\u00edvel localizar o script de build Ant para o projeto em {0}
LBL_BROWSE=&Procurar
ERR_SIG_FILE_REQUIRED=O arquivo de assinatura \u00e9 necess\u00e1rio para implanta\u00e7\u00e3o no cart\u00e3o
ERR_SIG_FILE_DOES_NOT_EXIST=O arquivo n\u00e3o existe
ERR_SIG_FILE_IS_DIR=O arquivo de assinatura n\u00e3o pode ser uma pasta

