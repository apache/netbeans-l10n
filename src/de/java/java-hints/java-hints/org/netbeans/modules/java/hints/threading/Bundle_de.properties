# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2010 Sun Microsystems, Inc.

DN_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Aufruf von Condition.notify()
DESC_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Der Aufruf von "notify" oder "notifyAll" von java.util.concurrent.locks.Condition sollte durch "signal" oder "signalAll" ersetzt werden.
#{0}: method name:
ERR_NotifyOnCondition=Aufruf {0} von Condition.notify()
FIX_NotifyOnConditionFix=Durch Aufruf von {0} ersetzen

DN_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Aufruf von Condition.wait()
DESC_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Der Aufruf von "notify" oder "notifyAll" von java.util.concurrent.locks.Condition ist wahrscheinlich nicht beabsichtigt.
ERR_WaitOnCondition=Aufruf von "wait" von java.util.concurrent.locks.Condition

DN_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Aufruf von Thread.run()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Der Aufruf von Thread.run() sollte besser durch den Aufruf von start() ersetzt werden
ERR_ThreadRun=Aufruf von run() aus java.lang.Thread
FIX_ThreadRun=Durch "Thread.start" ersetzen

DN_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Threadstart im Konstruktor
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Das Starten eines Threads im Konstruktor ist gef\u00e4hrlich und sollte vermieden werden.
ERR_ThreadStartInConstructor=Threadstart im Konstruktor

DN_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Aufruf von Thread.yield()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Der Aufruf der Methode yield() von java.lang.Thread versteckt normalerweise Synchronisationsprobleme und sollte daher vermieden werden.
ERR_ThreadYield=Aufruf der Methode yield() von java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Aufruf von Thread.stop()/suspend()/resume()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Die Methoden stop(), suspend() und resume() in java.lang.Thread sind gef\u00e4hrlich und sollten vermieden werden.
#{0}: method name (stop, suspend, resume):
ERR_ThreadSuspend=Aufruf von {0} in java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Verschachtelung synchronisierter Bl\u00f6cke
DESC_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Die Verschachtelung von synchronisierten Bl\u00f6cken ist nutzlos (wenn sie auf dem gleichen Objekt erfolgt) oder gef\u00e4hrlich.
ERR_NestedSynchronized=Verschachtelung synchronisierter Bl\u00f6cke

DN_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Leerer synchronisierter Block
DESC_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Ein leerer synchronisierter Block ist normalerweise nutzlos
ERR_EmptySynchronized=Leerer synchronisierter Block

DN_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Synchronisierung auf Sperre
DESC_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Die Synchronisierung auf java.util.concurrent.locks.Lock ist normalerweise nicht gewollt und sollte durch Lock.lock()-Lock.unlock() ersetzt werden
ERR_SynchronizedOnLock=Synchronisierung auf java.util.concurrent.locks.Lock
FIX_SynchronizedOnLock=Ersetzen durch Lock.lock()-Lock.unlock()

DN_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Arrayfeld ist "volatile"
DESC_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Findet Deklarationen von Arrays als Felder, die "volatile" sind.
ERR_VolatileArrayField=Arrayfeld ist "volatile"

DN_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Sperre wird in finally nicht aufgehoben
DESC_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Findet Vorkommen von Lock.lock()-Lock.unlock(), die nicht korrekt in try-finally eingebettet sind.
ERR_UnlockOutsideTryFinally=Lock.lock() wird in finally nicht entsperrt
FIX_UnlockOutsideTryFinally=In try-finally einbetten

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=Aufruf von .wait au\u00dferhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=Aufruf von .wait au\u00dferhalb der Synchronisation
ERR_UnsyncedWait=Aufruf von Object.wait au\u00dferhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=Aufruf von .wait au\u00dferhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=Aufruf von .wait au\u00dferhalb der Synchronisation
ERR_UnsyncedNotify=Aufruf von Object.notify au\u00dferhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Thread.sleep innerhalb der Synchronisation
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Aufruf von Thread.sleep innerhalb der Synchronisation kann zu Performanceproblemen f\u00fchren
ERR_SleepInSync=Aufruf von Thread.sleep innerhalb der Synchronisation

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Thread.sleep in Schleife
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Der Aufruf von Thread.sleep in einer Schleife kann Performanceprobleme verursachen.
ERR_SleepInLoop=Aufruf von Thread.sleep in Schleife



