# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2009 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

LBL_JavaDebugger=Java-Debugger
HINT_JavaDebugger=Options f\u00fcr den Java-Debugger
KW_JavaDebugger=debug, Optionen f\u00fcr den Java Debugger, Optionen f\u00fcr die Debuggerkonsole, Optionen f\u00fcr Debugschritte, Optionen f\u00fcr die Debuggerformatierung

CategoryPanelGeneral.stopOnExceptionsCheckBox.text=An nicht abg&efangenen Fehler halten
CategoryPanelGeneral.applyCodeChangesCheckBox.text=&Code\u00e4nderungen beim Speichern anwenden (nur im Modus "Kompilieren nach Speichern")
CategoryPanelGeneral.breakpointsSuspendLabel.text=Neue &Haltepunkte anhalten
CategoryPanelGeneral.breakpointsSuspendCB.allThreads=Alle Threads
CategoryPanelGeneral.breakpointsSuspendCB.breakpointThread=Haltepunktthread
CategoryPanelGeneral.breakpointsSuspendCB.noThread=Kein Thread (logging)
CategoryPanelGeneral.stepsResumeLabel.text=&Schritte fortsetzen
CategoryPanelGeneral.stepsResumeCB.allThreads=Alle Threads
CategoryPanelGeneral.stepsResumeCB.currentThread=Nur aktuellen Thread
CategoryPanelGeneral.openDebuggerConsoleCheckBox.text=Debugger&konsole f\u00fcr Debuggingsitzung \u00f6ffnen
CategoryPanelGeneral.reuseTabsCheckBox.text=&Editor beim Anzeigen von Quellcode wiederverwenden

CategoryPanelStepFilters.useStepFiltersCheckBox.text=&Nicht eintreten in
CategoryPanelStepFilters.filterSyntheticCheckBox.text=&Synthetische Methoden
CategoryPanelStepFilters.filterStaticInitCheckBox.text=Statische Initia&lisierer
CategoryPanelStepFilters.filterConstructorsCheckBox.text=&Konstruktoren
CategoryPanelStepFilters.filterClassesLabel.text=&Passende Klassen:
CategoryPanelStepFilters.stepThroughFiltersCheckBox.text=Durch die &Filter gehen, um nicht gefilterten Code zu erreichen
CategoryPanelStepFilters.filterAddButton.text=&Hinzuf\u00fcgen...
CategoryPanelStepFilters.filterRemoveButton.text=&Entfernen
CategoryPanelStepFilters.filtersCheckAllButton.text=&Alle w\u00e4hlen
CategoryPanelStepFilters.filtersUncheckAllButton.text=A&lle abw\u00e4hlen

CategoryPanelFormatters.formattersAddButton.text=&Hinzuf\u00fcgen...
CategoryPanelFormatters.formattersRemoveButton.text=&Entfernen
CategoryPanelFormatters.formattersRemoveButton.tooltip=Standardformatierungen k\u00f6nnen nicht gel\u00f6scht werden. Stattdessen abw\u00e4hlen.
CategoryPanelFormatters.copyButton.text=&Kopieren
CategoryPanelFormatters.editButton.text=&Bearbeiten...
CategoryPanelFormatters.editButton.tooltip=Standardformatierungen k\u00f6nnen nicht bearbeitet werden. Zum \u00c4ndern, bitte vorher kopieren.
CategoryPanelFormatters.formattersMoveUpButton.text=Nach &Oben
CategoryPanelFormatters.formattersMoveDownButton.text=Nach &Unten
CategoryPanelFormatters.formatterNameLabel.text=Formatierungsdetails
CategoryPanelFormatters.formatterClassTypesLabel.text=K&lassentypen:
CategoryPanelFormatters.formatValueLabel.text=&Wert mit folgendem Code formatieren:
CategoryPanelFormatters.formatChildrenLabel.text=&Kinder anzeigen, wenn
CategoryPanelFormatters.formatChildrenLabelNoTestCode.text=&Kinder als Ergebnis folgenden Codes anzeigen:
CategoryPanelFormatters.formatChildrenLabelNoTestVars.text=&Kinder als Liste von Variablen anzeigen:
CategoryPanelFormatters.formatChildrenListTable.Name=Name
CategoryPanelFormatters.formatChildrenListTable.Value=Wert
CategoryPanelFormatters.addDLG.nameLabel=Name:
CategoryPanelFormatters.addDLG.title=Variablenformatierung hinzuf\u00fcgen
TTL_AddFormatter=Variablenformatierung hinzuf\u00fcgen
TTL_EditFormatter=Variablenformatierung bearbeiten

JavaDebuggerPanel.categoriesLabel.text=Kate&gorien:
JavaDebuggerPanel.categoryRadioButtonGeneral.text=Allgemein
JavaDebuggerPanel.categoryRadioButtonStepFilters.text=Filter f\u00fcr Schritte
JavaDebuggerPanel.categoryRadioButtonFormatters.text=Variablenformatierungen
VariableFormatterEditPanel.nameLabel.text=Formatieru&ngsname:
VariableFormatterEditPanel.nameTextField.text=
VariableFormatterEditPanel.classTypesLabel.text=&Klassentypen:
VariableFormatterEditPanel.classTypesTextField.text=
VariableFormatterEditPanel.subtypesCheckBox.text=Untert&ypen einbeziehen
VariableFormatterEditPanel.valueFormatCheckBox.text=&Wert mit folgendem Code formatieren:
VariableFormatterEditPanel.childrenFormatCheckBox.text=&Kinder anzeigen als
VariableFormatterEditPanel.childrenCodeRadioButton.text=Ergebnis folgenden Codes
VariableFormatterEditPanel.childrenVariablesRadioButton.text=&Liste von Variablen
VariableFormatterEditPanel.addVarButton.text=&Hinzuf\u00fcgen
VariableFormatterEditPanel.removeVarButton.text=&Entfernen
VariableFormatterEditPanel.moveUpVarButton.text=Nach &Oben
VariableFormatterEditPanel.moveDownVarButton.text=Nach &Unten
VariableFormatterEditPanel.testChildrenCheckBox.text=Ausdruck &testen, wenn Variable erweitert werden kann:
VariableFormatterEditPanel.testChildrenCheckBox.tooltip=Keine Kinder, wenn Ausdruck zu "unwahr" evaluiert.
MSG_EmptyFormatterName=Es mu\u00df ein Formatierungsname angegeben werden.
MSG_EmptyClassName=Es mu\u00df ein Klassenangegeben werden.
MSG_InvalidClassNameAtPos=Ung\u00fcltiger Klassenname an Position {0}.
MSG_ExistingFormatterName=Es existiert bereits eine Formatierung diesen Namens.
MSG_NoFormatSelected=Es mu\u00df entweder der Wert, die Kinder oder beides formatiert werden.
CategoryPanelFormatters.subtypesLabel.text=(inklusive Untertypen)
CategoryPanelFormatters.formatChildrenLabelIf.text=ist wahr
CategoryPanelFormatters.childrenCodeLabel.text=als Ergbnis f&olgenden Codes:
CategoryPanelFormatters.childrenVarsLabel.text=a&ls Liste von Variablen:
CategoryPanelFormatters.testChildrenTextField.text=
CategoryPanelFormatters.formattersMoveButtons.tooltip=Erm\u00f6glicht das \u00c4ndern der Reihenfolge - die erste anwendbare Formatierung wird genutzt.
VariableFormatterEditPanel.classTypesLabel.tooltip=Kommaseparierte Liste von vollst\u00e4ndigen Klassennamen, deren Instanzen formatiert werden sollen.
CategoryPanelStepFilters.filterClassesLabel.a11y.name=Passende Klassen
CategoryPanelStepFilters.filterClassesLabel.a11y.description=Nicht in Klassen eintreten, welche zu Eintr\u00e4gen in dieser Liste passen.
CategoryPanelFormatters.formattersList.a11y.name=Liste der Formatierungen
CategoryPanelFormatters.formattersList.a11y.description=Liste der Formatierungen f\u00fcr Variablen.
VariableFormatterEditPanel.childrenVariablesTable.a11y.name=Liste der Variablen.
VariableFormatterEditPanel.childrenVariablesTable.a11y.description=Kinder werden als diese Liste der Variablen angezeigt.
Categories_description=Optionskategorien
CategoryPanelGeneral.stopOnExceptionsCheckBox.AccessibleContext.accessibleDescription=Die Ausf\u00fchrung des Debuggers wird unterbrochen, wenn ein nicht abgefangener Ausnahmefehler auftritt.
CategoryPanelGeneral.applyCodeChangesCheckBox.AccessibleContext.accessibleDescription=Wenn Kompilieren beim Speichern aktiviert ist, Code\u00e4nderungen beim Speichern anwenden
CategoryPanelGeneral.breakpointsSuspendLabel.AccessibleContext.accessibleDescription=Angeben, welche Threads durch einen Haltepunkt gestoppt werden.
CategoryPanelGeneral.stepsResumeLabel.AccessibleContext.accessibleDescription=Angeben, welche Threads fortgef\u00fchrt werden sollen.
CategoryPanelGeneral.openDebuggerConsoleCheckBox.AccessibleContext.accessibleDescription=Legt fest, ob die Debuggerkonsole beim Start des Debuggers ge\u00f6ffnet wird.
CategoryPanelGeneral.reuseTabsCheckBox.AccessibleContext.accessibleDescription=Legt fest, ob der Editortab wieder verwendet wird, wenn der Debugger eine Quelldatei \u00f6ffnet.
CategoryPanelStepFilters.useStepFiltersCheckBox.AccessibleContext.accessibleDescription=Unten festlegen, wo der Debugger nicht eintreten soll.
CategoryPanelStepFilters.filterSyntheticCheckBox.AccessibleContext.accessibleDescription=Nicht in synthetische Methoden springen.
CategoryPanelStepFilters.filterStaticInitCheckBox.AccessibleContext.accessibleDescription=Nicht in statische Initialisierer springen.
CategoryPanelStepFilters.filterConstructorsCheckBox.AccessibleContext.accessibleDescription=Nicht in Konstruktoren springen.
CategoryPanelStepFilters.filterClassesLabel.AccessibleContext.accessibleDescription=Nicht in Klassen eintreten, welche zu den Mustern in untenstehender Tabelle passen.
CategoryPanelStepFilters.stepThroughFiltersCheckBox.AccessibleContext.accessibleDescription=Legt fest, ob die Filter im Hintergrund durchgegangen werden, um potentiell nicht gefilterten Code zu erreichen.
CategoryPanelStepFilters.filterAddButton.AccessibleContext.accessibleDescription=F\u00fcgt einen neuen Filter zur Tabelle hinzu, der auf Klassen sucht.
CategoryPanelStepFilters.filterRemoveButton.AccessibleContext.accessibleDescription=Gew\u00e4hlten Klassenfilter aus der Tabelle entfernen.
CategoryPanelStepFilters.filtersCheckAllButton.AccessibleContext.accessibleDescription=Alle Klassenfilter in der Tabelle ausw\u00e4hlen.
CategoryPanelStepFilters.filtersUncheckAllButton.AccessibleContext.accessibleDescription=Alle Klassenfilter in der Tabelle abw\u00e4hlen.
VariableFormatterEditPanel.nameLabel.AccessibleContext.accessibleDescription=Anzeigename der Formatierung zeigen.
VariableFormatterEditPanel.classTypesLabel.AccessibleContext.accessibleDescription=Zu formatierende Klassentypen.
VariableFormatterEditPanel.subtypesCheckBox.AccessibleContext.accessibleDescription=Legt fest, ob auch Subtypen der angegebenen Klassentypen formartiert werden sollen.
VariableFormatterEditPanel.valueFormatCheckBox.AccessibleContext.accessibleDescription=Liefert den Ausdruck zur Formatierung des Wertes.
VariableFormatterEditPanel.childrenFormatCheckBox.AccessibleContext.accessibleDescription=Ausw\u00e4hlen, wie die Elemente formatiert werden sollen.
VariableFormatterEditPanel.childrenCodeRadioButton.AccessibleContext.accessibleDescription=Elemente werden mit untenstehenden Codes formatiert.
VariableFormatterEditPanel.childrenVariablesRadioButton.AccessibleContext.accessibleDescription=Elemente werden alles Liste der untenstehenden Variablen formatiert.
VariableFormatterEditPanel.addVarButton.AccessibleContext.accessibleDescription=Eine neue Variable in die Liste der f\u00fcr die Elementformatierung zust\u00e4ndigen Variablen einf\u00fcgen.
VariableFormatterEditPanel.removeVarButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variable aus der Liste der f\u00fcr die Elementformatierung zust\u00e4ndigen Variablen entfernen.
VariableFormatterEditPanel.moveUpVarButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variable nach oben verschieben.
VariableFormatterEditPanel.moveDownVarButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variable nach unten verschieben.
CategoryPanelFormatters.formattersAddButton.AccessibleContext.accessibleDescription=Eine neue Variablenformatierung zur Liste hinzuf\u00fcgen.
CategoryPanelFormatters.copyButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variablenformatierung kopieren.
CategoryPanelFormatters.editButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variablenformatierung bearbeiten.
CategoryPanelFormatters.formattersRemoveButton.AccessibleContext.accessibleDescription=Gew\u00e4hlte Variablenformatierung aus der Liste entfernen.
CategoryPanelFormatters.formatterClassTypesLabel.AccessibleContext.accessibleDescription=Die Klassentypen, die von der gew\u00e4hlten Formatierung bearbeitet werden.
CategoryPanelFormatters.subtypesLabel.AccessibleContext.accessibleDescription=Legt fest, ob auch Subtypen formatiert werden.
CategoryPanelFormatters.formatValueLabel.AccessibleContext.accessibleDescription=Der Wert wird mit folgendem Code formatiert.
CategoryPanelFormatters.formatChildrenLabel.AccessibleContext.accessibleDescription=Kindelemente werden angezeigt, wenn die Bedinung wahr ist.
CategoryPanelFormatters.childrenCodeLabel.AccessibleContext.accessibleDescription=Kindelemente werden als Ergebnis folgenden Codes angezeigt.
CategoryPanelFormatters.childrenVarsLabel.AccessibleContext.accessibleDescription=Kindelemente werden als Liste der Variablen in untenstehender Tabelle angezeigt.

