# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.



#BreakpointActionsProvider
CTL_Breakpoint_Customizer_Title=Eigenschaften des Haltepunktes
ACSD_Breakpoint_Customizer_Dialog=Eigenschaften des Haltepunkts anpassen

#BreakpointsNodeModel
CTL_Line_Breakpoint=Zeile {0}:{1}
CTL_Thread_Started_Breakpoint=Start des Threads
CTL_Thread_Death_Breakpoint=Ende des Threads
CTL_Thread_Breakpoint=Start oder Ende des Threads
CTL_Field_Access_Breakpoint=Feld {0}.Zugriff auf {1}
CTL_Field_Modification_Breakpoint=Feld {0}\u00c4nderung von {1}
CTL_Field_Access_or_Modification_Breakpoint=Feld {0}\u00c4nderung oder Zugriff auf {1}
CTL_Method_Breakpoint=Methode {0}.{1}
CTL_All_Methods_Breakpoint=Methoden {0}
CTL_Class_Loaded_Breakpoint=Klasse {0} laden
CTL_Class_Unloaded_Breakpoint=Entladen der Klasse {0}
CTL_Class_Breakpoint=Klasse {0} laden/entladen
CTL_Exception_Catched_Breakpoint=Ausnahmefehler {0} behandelt
CTL_Exception_Uncatched_Breakpoint=Ausnahmefehler {0} nicht behandelt
CTL_Exception_Breakpoint=Ausnahmefehler {0}

CTL_APPEND_BP_Valid=[\u00dcbermittelt]
CTL_APPEND_BP_Invalid=[Ung\u00fcltig]
CTL_APPEND_BP_Invalid_with_reason=[Ung\u00fcltig, Grund: {0}]


#WatchesActionsProvider
CTL_WatchAction_AddNew = Neue \u00dcberwachung...
CTL_WatchAction_DeleteAll = Alle l\u00f6schen
CTL_WatchAction_Delete = L\u00f6schen
CTL_WatchAction_Customize = Bearbeiten
CTL_Edit_Watch_Dialog_Title=Bearbeiten - {0}
CTL_New_Watch_Dialog_Title=Neue \u00dcberwachung


#LocalsDisplayFilter
CTL_Variable_DisplayAs_Popup = Anzeigen als
CTL_Variable_DisplayAs_Decimal = Dezimal
CTL_Variable_DisplayAs_Hexadecimal = Hexadezimal
CTL_Variable_DisplayAs_Octal = Oktal
CTL_Variable_DisplayAs_Binary = Bin\u00e4r
CTL_Variable_DisplayAs_Character = Zeichen
CTL_Variable_DisplayAs_Time = Zeit

#SessionsView
CTL_Session_Resume_Threads = Reichweite
CTL_Session_Resume_All_Threads = Alle Threads \u00fcberwachen
CTL_Session_Resume_Current_Thread = Aktuellen Thread \u00fcberwachen
CTL_Session_Popup_Language = Spra&che

#BreakpointsActionsProvider
CTL_Breakpoint_Customize_Label = Eigenschaften

#ThreadsTableModel - old Threads view
CTL_Thread_Status_OnMonitor = Auf dem Monitor
CTL_Thread_Status_NotStarted = Nicht gestartet
CTL_Thread_Status_Running = F\u00fchre aus
CTL_Thread_Status_Sleeping = Schlafend
CTL_Thread_Status_Unknown = Unbekannt
CTL_Thread_Status_Waiting = Wartend
CTL_Thread_Status_Zombie = Zombie
CTL_ThreadAction_Interrupt_Label=Unterbrochen

#CallStackTableModel
MSG_Callstack_NoInformation = Keine Informationen
NoCurrentThread=Keine Aufrufliste anzeigebar, da es keinen aktuellen Thread gibt.
ThreadIsRunning=Der aktuelle Thread wird ausgef\u00fchrt, Aufrufstapel nicht verf\u00fcgbar.

MSG_NoSourceInfo=Es ist keine Quelltextinformation verf\u00fcgbar.

#SessionsTableModel
MSG_Session_State_Disconnected = Nicht verbunden
MSG_Session_State_Running = F\u00fchre aus
MSG_Session_State_Starting = Startet
MSG_Session_State_Stopped = Angehalten

#CallStackNodeModel
CTL_CallstackModel_Column_Name_Name = Name
CTL_CallstackModel_Column_Name_Desc = Name des Stapelelementes
CTL_CallStackFrame=Stackframe aufrufen: {0}
CTL_RunType=Ausf\u00fchrungstyp: {0}

#ClassesActionsProvider
LBL_change_package_type=Paket zeigen als
ChangePackageViewTypeAction_list=&Liste
ChangePackageViewTypeAction_tree=&Baum

#ClassesNodeModel
CTL_ClassesModel_Column_Name_Name = &Name
CTL_ClassesModel_Column_Name_Desc = Name von Klasse oder Paket
CTL_ClassesModel_Column_Name_AppClassLoader = Classloader der Anwendung
CTL_ClassesModel_Column_Name_ClassLoader = Classloader {0}
CTL_ClassesModel_Column_Name_SystemClassLoader = Classloader des Systems
CTL_ClassesModel_Column_Name_Package = Paket {0}
CTL_ClassesModel_Column_Name_Class = Klasse {0}
CTL_ClassesModel_Column_Name_Interface = Schnittstelle {0}
CTL_ClassesModel_Column_Name_LoadedBy = geladen von {0}

#MonitorModel
CTL_MonitorModel_Column_ContendedMonitor = Warten auf Monitor {0} ({1})
CTL_MonitorModel_Column_OwnedMonitors = Gehaltene Sperren
CTL_MonitorModel_Column_Monitor = Eigener Monitor: {0} ({1})

#SourcesModel
CTL_SourcesModel_Column_Name_Name=&Quellwurzel
CTL_SourcesModel_Column_Name_Desc=Quelltextherkunft
CTL_SourcesModel_Action_AddFilter = Filter zum Ausschlie\u00dfen von Klassen hinzuf\u00fcgen
CTL_SourcesModel_NewFilter_Filter_Label = &Filter f\u00fcr Klassenausschlu\u00df:
CTL_SourcesModel_NewFilter_Title = Dialog f\u00fcr Filter zum Ausschlie\u00dfen von Klassen
CTL_SourcesModel_Action_Delete = L\u00f6schen
CTL_SourcesModel_Name_DoNotStopIn = Nicht stoppen in:   
CTL_SourcesModel_Action_AddSrc = Quellwurzel hinzuf\u00fcgen
CTL_SourcesModel_AddSrc_Chooser_Filter_Description = Quellwurzeln
CTL_SourcesModel_AddSrc_Btn = Hinzuf\u00fcgen
CTL_SourcesModel_MoveUpSrc = Nach oben
CTL_SourcesModel_MoveDownSrc = Nach unten
CTL_SourcesModel_ResetOrderSrc = Reihenfolge zur\u00fccksetzen

#ThreadsModel

CTL_ThreadsModel_Suspended_Thread_Desc = Thread durch Debugger angehalten
CTL_ThreadsModel_Resumed_Thread_Desc = Laufender Thread
CTL_ThreadsModel_Thread_State_Desc = Zustand in VM: {0}
CTL_ThreadsModel_Column_Name_Name = Name
CTL_ThreadsModel_Column_Name_Desc = Alle Threads der aktuellen Sitzung anzeigen
CTL_ThreadsModel_State_Unknown = Unbekannt
CTL_ThreadsModel_State_Monitor = Warte auf synchronisierten Block
CTL_ThreadsModel_State_ConcreteMonitor = Warte auf synchronisierten Block ({0})
CTL_ThreadsModel_State_NotStarted = Nicht gestartet
CTL_ThreadsModel_State_Running = F\u00fchre aus
CTL_ThreadsModel_State_Sleeping = Schlafend
CTL_ThreadsModel_State_Waiting = Wartend
CTL_ThreadsModel_State_WaitingOn = Warte auf {0}
CTL_ThreadsModel_State_Zombie = Zombie

#WatchesModel
CTL_WatchesModel_Column_Name_Name = Name
CTL_WatchesModel_Empty_Watch_Hint = Neue \u00dcberwachung eingeben

#Watches View
CTL_WatchesView_Column_Name_Name = &Name
CTL_WatchesView_Column_Name_Desc = Name der \u00dcberwachung
#CTL_WatchesView_Column_ToString_Name = to&String()
CTL_WatchesView_Column_ToString_Desc = Zeigt Ergebnis des toString()-Aufrufes an
CTL_WatchesView_Column_Type_Name = &Typ
CTL_WatchesView_Column_Type_Desc = Ergebnistyp
CTL_WatchesView_Column_Value_Name = &Wert
CTL_WatchesView_Column_Value_Desc = Wert des \u00dcberwachungsausdrucks
CTL_LocalsView_Column_Name_Name = &Name
CTL_LocalsView_Column_Name_Desc = Name der Variablen

#ThreadsActionsProvider
CTL_ThreadAction_MakeCurrent_Label = Als Aktuell setzen
CTL_ThreadAction_GoToSource_Label = Gehe zu Quelltext
CTL_ThreadAction_Suspend_Label = Unterbrechen
CTL_ThreadAction_Resume_Label = Fortsetzen

#ThreadsActionsProvider
CTL_CallstackAction_MakeCurrent_Label = Als Aktuell setzen
CTL_CallstackAction_PopToHere_Label = Bis hier zur\u00fcckkehren
CTL_CallstackAction_Copy2CLBD_Label = Stapel kopieren

# Debugging
CTL_Debugging_Column_Name_Name=&Threads
CTL_Debugging_Column_Name_Desc=Sitzungthread mit Aufruflisten
CTL_Debugging_Column_Suspend_Name=&Anhalten
CTL_Debugging_Column_Suspend_Desc=Anhaltestatus

CTL_Thread_State_Unknown = ''{0}''
CTL_Thread_State_Monitor = ''{0}'' wartet auf Monitor
CTL_Thread_State_Monitor_At = ''{0}'' wartet auf Monitor bei ''{1}''
CTL_Thread_State_NotStarted = ''{0}'' wurde noch nicht gestartet
CTL_Thread_State_Running = ''{0}'' l\u00e4uft
CTL_Thread_State_Running_At = ''{0}'' l\u00e4uft auf ''{1}''
CTL_Thread_State_Suspended = ''{0}'' wurde angehalten
CTL_Thread_State_Suspended_At = ''{0}'' wurde angehalten bei ''{1}''
CTL_Thread_State_Sleeping = ''{0}'' schl\u00e4ft
CTL_Thread_State_Sleeping_At = ''{0}'' schl\u00e4ft bei ''{1}''
CTL_Thread_State_Waiting = ''{0}'' wartet
CTL_Thread_State_Waiting_At = ''{0}'' waret bei ''{1}''
CTL_Thread_State_Zombie = ''{0}'' ist gestorben
CTL_Thread_At_LineBreakpoint = ''{0}'' bei Zeilenhaltepunkt {1} : {2}
CTL_Thread_At_MethodBreakpoint = ''{0}'' bei Methodenhaltepunkt {1}.{2}
CTL_Thread_At_MethodBreakpointSig = ''{0}'' bei Methodenhaltepunkt {1}.{2} {3}
CTL_Thread_At_ExceptionBreakpoint = ''{0}'' bei Fehlerhaltepunkt {1}
CTL_Thread_At_FieldBreakpoint = ''{0}'' bei Feldhaltepunkt {1}.{2}
CTL_Thread_At_ThreadBreakpoint = ''{0}'' bei Threadhaltepunkt
CTL_Thread_At_ClassBreakpoint = ''{0}'' bei Klassenhaltepunkt {1}
CTL_Thread_At_Breakpoint = ''{0}'' bei {1}
CTL_Thread_Invoking_Method = ''{0}'' - Evaluierung der Methode...

CTL_Frame_Loading=Lade Frame-Beschreibung...

#VariablesTreeModelFilterSI
MSG_VariablesFilter_StaticNode = Statisch
MSG_VariablesFilter_InheritedNode = Geerbt

#VariablesNodeModel
CTL_LocalsModel_Column_Name_Desc = Lokale Variablen
CTL_LocalsModel_Column_Name_Name = Name
CTL_LocalsModel_Column_Name_SubArray = [{0} - {1}]
CTL_LocalsModel_Column_Descr_SubArray = Wertefeldelemente von {0} bis {1}.
NoCurrentThreadVar=Keine Variablen zum Anzeigen, da es keinen aktuellen Thread gibt.
CTL_No_Info=Variableninformation nicht vorhanden, Quelltext nicht mit Option -g \u00fcbersetzt
CTL_No_Info_descr=Variableninformation nicht vorhanden (Bitte pr\u00fcfen, ob der Quelltext mit Option -g \u00fcbersetzt wurde).
TTP_NewWatch=Einen neuen zu \u00fcberwachenden Ausdruck einf\u00fcgen oder schreiben.

MSG_VariablesFilter_StaticNode_descr = Der statische Kontext
MSG_VariablesFilter_Class_descr = Das aktuelle Klassenobjekt
MSG_VariablesFilter_Return_descr = Der R\u00fcckgabwert der Methode ''{0}''.
beforeOperation=Vor dem Aufruf von ''{0}()''
beforeOperation_descr=Das Programm wurde direkt vor dem Aufruf der Methode ''{0}()'' angehalten.
afterOperation=Nach der R\u00fcckkehr von' '{0}()''
afterOperation_descr=Das Programm wurde direkt nach der R\u00fcckkehr aus der Methode ''{0}()'' angehalten.
lastOperationsNode = Verlauf der R\u00fcckgabewerte
MSG_LastOperations_descr = Die Werte der Unterausdr\u00fccke wurden durch den Ausdrucksschritt \u00fcbersprungen.
operationArgumentsNode = Argumente:
operationArgumentsNode_descr = Argumente f\u00fcr die \u00dcbergabe an Methode ''{0}'.
NativeMethod = F\u00fcr native Methoden sind Argumente verf\u00fcgbar
NativeMethod_descr = Es ist nicht m\u00f6glich f\u00fcr native Methoden Argumente zu erhalten.
noDebugInfoWarning = Keine Variableninformationen verf\u00fcgbar, da die Quellen ohne "-g" kompiliert wurden.
noDebugInfoWarning_descr = Keine Variableninformationen verf\u00fcgbar, da die Quellen ohne "-g" kompiliert wurden.

#VariablesTableModel
# When the information is not available
MSG_NA=k.A.

#VariablesActionProvider
CTL_GoToSource=Gehe zu Quelltext

# Hidden Call Stack Frames Filter
LBL_HIDDEN_FRAMES=Versteckte Quellaufrufe
TLT_HIDDEN_FRAMES=Aufrufe aus den Quellen werden nicht f\u00fcr das Debugging genutzt.
#RES_FRAME_GROUP=org/netbeans/modules/debugger/jpda/resources/CallStackFrameGroup

#Evaluator History Filter
MSG_EvaluatorHistoryFilterNode=Verlauf
CTL_EvaluatorHistoryNode=Evaluierer f\u00fcr Verlaufsknoten
CTL_EvaluatorHistoryItem=Evaluierer f\u00fcr Verlaufseintrag
CTL_PasteExprFromHistoryToEvaluator=In Evaluierer einf\u00fcgen

# VariablesFormatterFilter
MSG_LoopInTypeFormattingIntroErrorMessage = Schleife in der Variablenformatierung gefunden.\nDie Variablenformatierung werden rekursiv angewendet, die anwendbare Formatierung betrifft jeden formatierbaren Wert. Details der Rekursion, siehe unten:
MSG_LoopInTypeFormatting = Schleife in der Variablenformatierung der Namen {0} gefunden.

