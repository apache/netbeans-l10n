# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

DSC_ElNotAvail=Das \u00fcberarbeitete Originalelement ist nicht verf\u00fcgbar. Es wurde gel\u00f6scht oder signifikant ge\u00e4ndert. Benutzung k\u00f6nnen nicht gesammelt werden.
DSC_ElementNotResolved=Nicht aufgel\u00f6ste Elemente k\u00f6nnen nicht \u00fcberarbeitet werden
ERR_ProjectNotOpened={0} kann nicht \u00fcberarbeitet werden, wenn es sich ausserhalb eines ge\u00f6ffneten Projektes befindet.

# --- SAFE DELETE REFACTORING ------------------------------------------------------
ERR_SafeDel=Ein Fehler trat auf beim L\u00f6schen von <b>{0}</b>
LBL_ShowUsages=&Vorkommen anzeigen...
ERR_ReferencesFound=Es wurden Verweise auf ausgew\u00e4hlte Elemente gefunden. Bitte alle Verweise auf diese Elemente entfernen, um die Klasse sicher zu entfernen.
ERR_SafeDel_FromReference=Ein sicheres L\u00f6schen kann nicht von Klassen- oder Methodenreferenzen aufgerufen werden
ERR_SafeDel_InvalidType=Ein sicheres L\u00f6schen kann nur f\u00fcr eine Methode, ein Feld oder eine Klasse aufgerufen werden
ERR_OverridesAbstractMethod=Die ausgew\u00e4hlte Methode kann nicht sicher gel\u00f6scht werden, da sie eine abstrakte Methode implementiert: {0}.  

# --- EXTRACT INTERFACE REFACTORING ------------------------------------------------
TXT_ExtractInterface_CreateIfc=Schnittstelle <b>{0}</b> erzeugen.
TXT_ExtractInterface_Method=Deklaration der Methode <b>{0}</b> in der neuen Schnittstelle erzeugen.
TXT_ExtractInterface_MoveMethod=Methode <b>{0}</b> in die neue Schnittstelle verschieben.
TXT_ExtractInterface_Field=Feld <b>{0}</b> in die neue Schnittstelle verschieben.
TXT_ExtractInterface_Class=Innere Klasse <b>{0}</b> in die neue Schnittstelle verschieben.
TXT_ExtractInterface_Implements=<b>{0}</b> in die extends-Klausel der neuen Schnittstelle verschieben.
TXT_ExtractInterface_AddImplements=<b>{0}</b> zur implements-/extends-Klausel hinzuf\u00fcgen.
ERR_ElementNotAvailable=Element kann nicht aufgel\u00f6st werden.
ERR_ExtractInterface_MembersNotAvailable=Nichts zu extrahieren.
ERR_ExtractInterface_WrongModifiers=Die Methode {0} mu\u00df \u00f6ffentlich (public) und nicht-statisch sein.
ERR_ExtractInterface_UnknownMember={0} Feld kann nicht extrahiert werden.

# --- EXTRACT SUPER CLASS REFACTORING ------------------------------------------------
ERR_ExtractSC_MustBeClass=Der ausgew\u00e4hlte Typ muss eine Klasse sein (die Operation kann nicht mit einer Schnittstelle, Enumeration oder Annotation ausgef\u00fchrt werden).
# Illegal member (0 = member name)
ERR_ExtractSC_IllegalMember=Element "{0}" kann nicht in eine Superklasse extrahiert werden. Es geh\u00f6rt nicht zum Quelltyp.
ERR_ExtractSuperClass_MembersNotAvailable=Nichts zu extrahieren.
ERR_ExtractSuperClass_UnknownMember={0} Feld kann nicht extrahiert werden.
TXT_ExtractSC_CreateSC=Klasse <b>{0}</b> erzeugen.
TXT_ExtractSC_Method=Deklaration der Methode <b>{0}</b> in der neuen Superklasse erzeugen.
TXT_ExtractSC_Member=<b>{0}</b> in die neue Superklasse verschieben.
TXT_ExtractSC_AddExtends=<b>{0}</b> in die extends-Klausel setzen.

# --- PULL UP REFACTORING ------------------------------------------------------
# *** Pre-check ***
# No supertype
ERR_PullUp_NoSuperTypes=Es kann kein Element nach oben verschoben werden. Der ausgew\u00e4hlte Typ hat keine Superklasse in aktuell ge\u00f6ffneten Projekten.
# No member
ERR_PullUp_NoMembers=Der ausgew\u00e4hlte Typ und sein Supertyp haben keine Elemente zum verschieben.
# *** Fast parameters check
# No selected member
ERR_PullUp_NoMembersSelected=Keine Elemente zum Verschieben in Superklassen ausgew\u00e4hlt.
# No target type selected
ERR_PullUp_NoTargetType=Kein Supertyp ausgew\u00e4hlt.
# *** Parameters check
# Illegal target type
ERR_PullUp_IllegalTargetType=Der Zieltyp ist kein Supertyp des Quelltyps oder der Quelltext des Zieltyps ist nicht verf\u00fcgbar.
# Illegal member (0 = member name)
ERR_PullUp_IllegalMember=Feld "{0}" kann nicht in die Superklasse verschoben werden. Es geh\u00f6rt nicht zum Quelltyp oder zu einem der Supertypen des Quelltyps die Subtypen des Zieltyps sind.
# Member already exists in the target type (0 = member name)
ERR_PullUp_MemberAlreadyExists=Element "{0}" existiert bereits im Zieltyp.
# *** Refactoring element descriptions
# Add abstract method to the target type (0 = method name)
ERR_CannotPullupDuplicateMembers=Kann keine Elemente mit derselben Signatur in die Superklasse verschieben.
ERR_PullupNonPublicToInterface=Das Element "{0}" soll in das nterface verschoben werden, ist aber nicht \u00f6ffentlich (public).

TXT_PullUp_AddMethod=Abstrakte Methode hinzuf\u00fcgen\: <b>{0}</b>
# Move member to the target type (0 = member name)
TXT_PullUp_Member=<b>{0}</b> in den Zieltyp verschieben.

# --- PUSH DOWN REFACTORING ------------------------------------------------------
TXT_PushDown_Member=<b>{0}</b> in den Typ <b>{1}</b> kopieren.
TXT_PushDown_Remove=Element <b>{0}</b> entfernen.
TXT_PushDown_Abstract=Methode <b>{0}</b> abstract machen.
TXT_PushDown_RelaxAccessModifier=Zugriffsrechte von <b>{0}</b> nach <b>{1}</b> \u00e4ndern.
LBL_PushDown_private=private
LBL_PushDown_package_private=Standard
LBL_PushDown_protected=protected
ERR_PushDown_InvalidSource=Gew\u00e4hlte Quelle kann nicht aufgel\u00f6st werden: "{0}" -> "{1}".
ERR_PushDOwn_NoSubtype=Es kann kein Element nach unten verschoben werden. Der ausgew\u00e4hlte Typ hat keine Subklasse in aktuell ge\u00f6ffneten Projekten.
ERR_PushDown_NoMembers=Der ausgew\u00e4hlte Typ hat keine Elemente zum Verschieben in eine Subklasse.
ERR_PushDown_NoMembersSelected=Keine Elemente zum Verschieben in eine Subklasse ausgew\u00e4hlt.
ERR_PushDown_AlreadyExists={0} existiert bereits in {1}.

# --- INNER TO OUTER REFACTORING ------------------------------------------------
ERR_InnerToOuter_MustBeInnerClass=Der ausgew\u00e4hlte Typ muss ein innerer Typ sein (kann diese Operation nicht auf einem \u00e4u\u00dferen Typ ausf\u00fchren).
ERR_InnerToOuter_FieldNameClash=Ein Feld namens <b>{0}</b> existiert bereits in der Klasse.
ERR_InnerToOuter_ClassNameClash=Eine innere Klasse namens <b>{0}</b> existiert bereits in der Zielklasse.
ERR_InnerToOuter_OuterUsed=Die nach au\u00dfen zu verschiebende Klasse nutzt Elemente ihrer Umgebungsklasse. Das \u00dcberarbeiten sollte eine Instanzvariable erzeugen, die eine Referenz auf die urspr\u00fcngliche Umgebungsklasse enth\u00e4lt.
ERR_InnerToOuter_InnerHidden=Einer der Supertypen der Zielklasse definiert bereits eine innere Klasse namens <b>{0}</b>.
TXT_InnerToOuter_MoveToOuter=Diese Klasse zur inneren Klasse von <b>{0}</b> konvertieren.
TXT_InnerToOuter_MoveToTop=Diese Klasse in eine \u00e4u\u00dfere Klasse konvertieren.
TXT_InnerToOuter_Rename=Diese Klasse umbenennen nach <b>{0}</b>.
TXT_InnerToOuter_AddReference=Der Instanz ein neues Feld <b>{0}</b> hinzuf\u00fcgen, welches auf die urspr\u00fcngliche Umgebungsklasse verweist, aktualisiere die Konstruktoren.
TXT_InnerToOuter_AddConstructor=Einen Konstruktor hinzuf\u00fcgen, da der Standardkonstruktor in der Superklasse nicht verf\u00fcgbar ist.
TXT_InnerToOuter_AddConstructorInvocation=Einen expliziten Konstruktoraufruf hinzuf\u00fcgen, da der Standardkonstruktor in der Superklasse nicht verf\u00fcgbar ist.
TXT_InnerToOuter_RelaxAccessRights=Von private in paketintern \u00e4ndern.
ERR_InnerToOuter_UseDeclareField="{0}" kann nicht \u00fcberarbeitet werden. Bitte die Option "Feld deklarieren" benutzen.
ERR_InnerToOuter_Anonymous=Anonyme Klassen k\u00f6nnen nicht \u00fcberarbeitet werden.
WRN_InnerToOuterRefToPrivate=Die innere Klasse nutzt die private Funktion {0}, auf welche nach dem \u00dcberarbeiten nicht mehr zugegriffen werden kann

# --- USE SUPERTYPE REFACTORING ------------------------------------------------------
TXT_UseSuperType=Falls m\u00f6glich Supertyp von <b>{0}</b> benutzen
TXT_UseSuperTypeVariable=Typ von <b>{0}</b> nach <b>{1}</b> \u00e4ndern
TXT_UseSuperTypeReturnType=R\u00fcckgabetyp von <b>{0}</b> zu <b>{1}</b> \u00e4ndern
TXT_UseSuperTypeLocalVar=Typ der lokalen Variable(n) <b>{0}</b> zu <b>{1}</b> \u00e4ndern
TXT_UseSuperTypeProblem=Typ {0} ist innerhalb des Rumpfes von {1} nicht sichtbar
ERR_UseSuperType_InvalidElement=Die Benutzung der Supertyps kann nur bei g\u00fcltigen Typen erfolgen
ERR_UseSuperTypeNoSuperType=Kein Supertyp ausgew\u00e4hlt.

# --- COPY CLASS ---------------------------------------------------------------
TXT_CopyClassToPackage=Erzeuge eine neue Klasse ({0}) im Package {1}, als Kopie von {2}

# rename error messages
ERR_RenameWrongType=Dieser Objekttyp kann nicht ge\u00e4ndert werden. Es mu\u00df mindestens ein Paket, eine Klasse, eine Methode oder ein Feld gew\u00e4hlt werden.
ERR_Overrides=Diese Methode \u00fcberschreibt oder implementiert Methoden der Superklasse/-interface. Diese werden auch umbenannt.
ERR_Overrides_Fatal=Diese Methode \u00fcberschreibt oder implementiert eine Methode einer Superklasse/Schnittstelle, daher kann sie nicht umbenannt werden.
ERR_Overrides_tree=Diese Methode \u00fcberschreibt oder implementiert ein Methode in {0}. Diese Methode ist in {1} ebenfalls \u00fcberschrieben. Wenn diese Operation wirklich ausgef\u00fchrt werden soll, mu\u00df sie auf der Methode in {2} aufgerufen werden.
ERR_IsOverridden=Es existieren Methoden in Subklassen/Implementierungen von {0} welche diese Methode \u00fcberschreiben oder implementieren. Diese werden auch umbenannt.
ERR_WillBeOverridden=Nach der Umbenennung, wird die Originalmethode "{0}" aus {1} von der Methode  "{2}" aus {3} \u00fcberschrieben.
ERR_WillBeOverridden_access=Nach dem Umbenennen wird die Originalmethode {0} in {1} \u00fcberschrieben von der Methode "{2}" in {3} mit schw\u00e4cheren Zugriffsrechten.
ERR_WillBeOverridden_static=Nach dem Umbenennen wird die urspr\u00fcnglich {0} Methode "{1}" in {2} \u00fcberschrieben von der {3} Methode "{4}" in {5}.
ERR_WillBeOverridden_final=Nach dem Umbenennen wird die urspr\u00fcnglich finale Methode "{0}" in {1} \u00fcberschrieben von der Methode "{2}" in {3}.
ERR_WillOverride=Nach dem Umbenennen wird Methode "{0}" in {1} die Originalmethode "{2}" in {3} \u00fcberschreiben.
ERR_WillOverride_access=Nach dem Umbenennen wird Methode "{0}" in {1} die Originalmethode "{2}" in {3} mit st\u00e4rkeren Zugriffsrechten \u00fcberschreiben.
ERR_WillOverride_static=Nach dem Umbenennen wird die {0} Methode "{1}" in {2} die urspr\u00fcnglich {3} Methode "{4}" in {5} \u00fcberschreiben.
ERR_WillOverride_final=Nach dem Umbenennen wird Methode "{0}" in {1} die urspr\u00fcnglich finale Methode "{2}" in {3} \u00fcberschreiben.
ERR_NameNotChanged=Der Name wurde nicht ge\u00e4ndert. Es werden keine \u00c4nderungen vorgenommen.
ERR_InvalidIdentifier={0} ist kein g\u00fcltiger Java-Bezeichner.
ERR_InvalidPackage="{0}" ist kein g\u00fcltiger Paket-Bezeichner.
ERR_PackageExists=Paket "{0}" existiert bereits.
ERR_InnerClassClash=Kann nicht umbenennen. Die innere Klasse {0} existiert bereits in Klasse {1}.
ERR_ClassClash=Kann nicht umbenennen. Klasse {0} existiert bereits in Verzeichnis {1}.
ERR_ClassPackageClash=Kann nicht umbenennen. Es existiert bereits ein Verzeichnis {0} in {1}.
ERR_MethodClash=Kann nicht umbenennen. Die Methode {0} mit der gleichen Signatur existiert bereits in Klasse {1}.
ERR_FieldClash=Kann nicht umbenennen. Das Feld {0} existiert bereits in Klasse {1}.
ERR_LocVariableClash=Kann nicht umbenennen. {0} wird bereits benutzt.
ERR_Hides=Das umzubenennende Feld verdeckt ein Feld in {0}.
ERR_WillHide=Das neue Feld wird ein Feld aus {0} verdecken.
ERR_NameNotSet=Der Name wurde nicht angegeben.
ERR_CannotMoveIntoSamePackage=Kann Klasse(n) nicht in dasselbe Paket verschieben.
ERR_CannotRenameFile=Kann Element in Bibliotheksdatei "{0}" nicht umbennen.
ERR_ResourceUnavailable=Methode {0} kann nicht umbenannt erden. Quelldatei "{1}" ist nicht verf\u00fcgbar.
ERR_RenameNative=Versuchte Umbennung der nativen Methode "{0}". Das Umbenennen von nativen Methoden kann zur Laufzeit einen "UnsatisfiedLinkError" verursachen.
ERR_CannotRefactorThis="{0}" kann nicht \u00fcberarbeitet werden.

#Rename package
TXT_RenamePackage=Datei umbennen  

#where used error messages
ERR_WhereUsedWrongType=F\u00fcr diesen Objekttyp kann nicht nach Verwendungen gesucht werden. Ein Java-Element muss gew\u00e4hlt werden.

# move class/package error messages
ERR_TargetFolderNotSet=Es wurde kein Zielpaket angegeben.
ERR_TargetFolderNotJavaPackage=Das Zielverzeichnis is kein Javapaket.
ERR_SourceWithoutClass=Der gew\u00e4hlte Quelltext enth\u00e4lt keine Klasse.
ERR_SourceWithMoreClasses=Aus einer Quelltextdatei kann keine Klasse verschoben werden, wenn diese mehrere oberste Klassen enth\u00e4lt.
ERR_AccessesPackagePrivateFeature=Die Klasse "{0}" im selben Paket nutzt die Funktion "{1}" der zu verschiebenden Klasse ("{2}").
ERR_AccessesPackagePrivateClass=Die Klasse "{0}" im selben Paket nutzt {1} der zu verschiebenden Klasse ("{2}").
ERR_AccessesPackagePrivateConstructor=Die Klasse "{0}" im selben Paket nutzt den {1} Konstruktor der zu verschiebenden Klasse ("{2}").
ERR_AccessesPackagePrivateFeature2=Die zu verschiebende Klasse ("{0}") nutzt die Funktion "{1}" von Klasse "{2}" im selben Paket.
ERR_AccessesPackagePrivateClass2=Die zu verschiebende Klasse ("{0}") nutzt {1} der Klasse ("{2}") im selben Paket.
ERR_AccessesPackagePrivateConstructor2=Die zu verschiebende Klasse ("{0}") nutzt den Konstruktor {1} aus Klasse ("{2}") im selben Paket.
ERR_PackageIsReadOnly=Paket "{0}" ist schreibgesch\u00fctzt.
ERR_ClassToMoveClashes=Klasse "{0}" existiert bereits im Zielpaket.
ERR_ClassToMoveInDefaultPackage=Nach dem Verschieben wird es nicht m\u00f6glich sein, Klassen im Standardpaket zu importieren.
ERR_MovingClassToDefaultPackage=Wenn die Klasse ins Standardpaket verschieben wird, k\u00f6nnen Klassen aus anderen Paketen sie nicht mehr importieren.
ERR_FileAlreadyExists=Datei {0} existiert bereits im Paket {1}.
ERR_PackageMovesToItself=Das Originalpackage wurde als Ziel gew\u00e4hlt. Es liegen keine \u00c4nderungen vor.
ERR_CannotMovePackageToSubpackage=Ein Paket kann nicht in eines seiner Unterpakete oder in sich selbst verschoben werden.
ERR_DefaultPackageCannotBeMoved=Das Standardpaket kann nicht verschoben werden.
ERR_CannotMoveFile=Kann Datei aus der Bibliothek nicht verschieben: "{0}".
ERR_MissingProjectDeps=Im Projekt "{0}" existieren Verweise auf verschobene Dateien, aber das Quellprojekt "{0}" ist nicht nicht abh\u00e4ngig vom Zielprojekt "{1}". Die Projekte m\u00fc\u00dfen kompiliert werden.
ERR_ClasspathNotFound=F\u00fcr {0} wurde kein Klassenpfad definiert.

# encapsulate field error messages
ERR_EncapsulateWrongType=Dieser Objekttyp kann nicht gekapselt werden. Es mu\u00df ein Feld ausgew\u00e4hlt werden.
ERR_EncapsulateNoFields=Kein Feld in {0} gefunden.
ERR_EncapsulateInIntf=Ein Feld einer Schnittstelle kann nicht gekapselt werden.
ERR_EncapsulateMethods=Die Namen von get- und set-Methoden m\u00fcssen g\u00fcltig sein.
ERR_EncapsulateMethodsAccess=Die Zugriffsrechte der erzeugten Methoden stehen auf "private", aber einige der ausgew\u00e4hlten Felder werden direkt von anderen Quellen referenziert.
ERR_EncapsulateMethodsDefaultAccess=Die \u00dcberarbeitung k\u00f6nnte negativen Einflu\u00df auf die Kompilierung haben, da die erzeugten Methoden \u00fcber Standardzugriffsrechte verf\u00fcgen, die gew\u00e4hlten Felder aber aus anderen Quellen direkt referenziert werden.
ERR_EncapsulateInsideAssignment={0} in {1} kann nicht durch einen "void"-Set in {2} ersetzt werden.
ERR_EncapsulateInsideConstructor=Die Zugriffsrechte von Feld {0} stehen auf "private", es wird aber durch den Konstruktor von Klasse {1} direkt referenziert.
ERR_EncapsulateWrongGetter=Die get-Methode {0} existiert bereits, allerdings mit einem falschen R\u00fcckgabetyp {1}.
ERR_EncapsulateWrongSetter=Die set-Methode {0} existiert bereits, allerdings mit einem falschen R\u00fcckgabetyp {1}.
ERR_EncapsulateNothingSelected=Nichts zum kapseln. Es mu\u00df mindestens eine Checkbox gew\u00e4hlt werden.

# change method signature error messages
ERR_MethodOverrides=Die Methode \u00fcberschreibt oder implementiert Methoden einer Superklasse/Schnittstelle.
ERR_MethodIsOverridden=Es gibt Methoden in Subklassen/Implementierungen  von {0}, die diese Methode \u00fcberschreiben oder implementieren.
ERR_HasVarArg=Parameter von Methoden mit variablen Argumenten k\u00f6nnen nicht ge\u00e4ndert werden.
ERR_newpar={0} mu\u00df f\u00fcr alle neuen Parameter bereitgestellt werden.
ERR_parname=Parametername
ERR_partype=Parametertyp
ERR_pardefv=Standardwert
ERR_existingMethod=Die Signatur kann nicht ge\u00e4ndert werden. Die Methode {0} mit der gleichen Signatur existiert bereits in Klasse {1}.
ERR_existingConstr=Die Signatur kann nicht ge\u00e4ndert werden. Ein Kosntruktor mit der gleichen Signatur existiert bereits in Klasse {0}.
ERR_NoValues=F\u00fcr die neuen Parameter m\u00fc\u00dfen Werte angegeben werden.
ERR_DuplicateName=Doppelter Parametername ({0}).
ERR_NameAlreadyUsed=Name "{0}" wird bereits f\u00fcr eine lokale Variable genutzt.
ERR_CannotChangeModifiers=Kann die Zugriffsrechte von Methoden in Schnittstellen nicht \u00e4ndern.
ERR_StrongAccMod=Der Zugriffsmodifizierer wurde zu {0} ge\u00e4ndert. Die Methode wird f\u00fcr einige der Referenzen nicht mehr verf\u00fcgbar sein. Die Quellen werden nach der \u00dcberarbeitung nicht kompilierbar sein.

ERR_ChangeParamsWrongType=Die Parameter dieses Objektes k\u00f6nnen nicht ge\u00e4ndert werden. Es mu\u00df eine Konstruktor oder eine Methode ausgew\u00e4hlt werden.
MSG_NothingToFind=Es wurde nichts f\u00fcr die Suche angegeben. Bitte "Verwendungen anzeigen" oder "\u00dcberschreibende Methoden suchen" oder beides w\u00e4hlen.
ERR_CannotRefactorLibraryClass=Bibliotheksklasse "{0}" kann nicht \u00fcberarbeitet werden.
ERR_MethodsInAnnotationsNotSupported=@interface - Felder d\u00fcrfen keine Parameter haben.
ERR_CannnotRefactorLibrary=Kann die Parameter von "{0}" nicht \u00e4ndern, da sie eine Methode aus der Bibliotheksklasse \u00fcberschreibt

ERR_VarargsFinalPosition="Varargs" k\u00f6nnen nur an letzter Stelle des Argumentes benutzt werden.
ERR_FindUsagesArrayType=Auf [] kann keine Suche nach Benutzungen erfolgen

