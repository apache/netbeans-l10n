# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

DSC_ElNotAvail=O elemento orixinal refactorizado non est\u00e1 dispo\u00f1\u00edbel. Foi eliminado ou cambiado de significativamente. Os usos non poden ser recollidos.
DSC_ElementNotResolved=Non se poden refactorizar os elementos sen resolver
ERR_ProjectNotOpened=Non \u00e9 pos\u00edbel refactorizar o c\u00f3digo que se define f\u00f3ra do proxecto.

# --- SAFE DELETE REFACTORING ------------------------------------------------------
ERR_SafeDel=Produciuse un erro ao borrar <b>{0}</b>
LBL_ShowUsages=Mo&strar usos...
ERR_ReferencesFound=References to selected elements were found. Remove all references to these elements in order to safely delete your class.
ERR_SafeDel_FromReference=Safe Delete cannot be invoked from Class/Method References
ERR_SafeDel_InvalidType=Safe Delete can be invoked only on a Method, Field or Class

# --- EXTRACT INTERFACE REFACTORING ------------------------------------------------
TXT_ExtractInterface_CreateIfc=Crear interface <b>{0}</b>.
TXT_ExtractInterface_Method=Create declaration of method <b>{0}</b> in the new interface.
TXT_ExtractInterface_MoveMethod=Mover m\u00e9todo <b>{0}</b> \u00e1 nova interface.
TXT_ExtractInterface_Field=Mover o campo <b>{0}</b> \u00e1 nova interface.
TXT_ExtractInterface_Class=Move inner class <b>{0}</b> to the new interface.
TXT_ExtractInterface_Implements=Move <b>{0}</b> to the extends clause of the new interface.
TXT_ExtractInterface_AddImplements=Add <b>{0}</b> to the implements/extends clause.
ERR_ElementNotAvailable=Non \u00e9 pos\u00edbel resolver o elemento.
ERR_ExtractInterface_MembersNotAvailable=Nada que extraer.
ERR_ExtractInterface_WrongModifiers=O m\u00e9todo {0} debe ser p\u00fablico e non est\u00e1tico.
ERR_ExtractInterface_UnknownMember=Non \u00e9 pos\u00edbel extraer o membro {0}.

# --- EXTRACT SUPER CLASS REFACTORING ------------------------------------------------
ERR_ExtractSC_MustBeClass=The selected type must be a class (cannot perform this operation on an interface, enum or annotation type).
# Illegal member (0 = member name)
ERR_ExtractSC_IllegalMember=Member "{0}" cannot be extracted into a super class. It does not belong to the source type.
ERR_ExtractSuperClass_MembersNotAvailable=Nada que extraer.
ERR_ExtractSuperClass_UnknownMember=Non \u00e9 pos\u00edbel extraer o membro {0}.
TXT_ExtractSC_CreateSC=Crear a clase <b>{0}</b>.
TXT_ExtractSC_Method=Create declaration of method <b>{0}</b> in the new super class.
TXT_ExtractSC_Member=Mover <b>{0}</b> \u00e1 nova super clase.
TXT_ExtractSC_AddExtends=Set <b>{0}</b> to the extend clause.

# --- PULL UP REFACTORING ------------------------------------------------------
# *** Pre-check ***
# No supertype
ERR_PullUp_NoSuperTypes=Cannot pull up any members. The selected type has no supertypes in the currently opened projects.
# No member
ERR_PullUp_NoMembers=The selected type and its supertypes have no members that could be pulled up.
# *** Fast parameters check
# No selected member
ERR_PullUp_NoMembersSelected=No members are selected to be pulled up.
# No target type selected
ERR_PullUp_NoTargetType=No supertype is selected.
# *** Parameters check
# Illegal target type
ERR_PullUp_IllegalTargetType=The target type is not a supertype of the source type, or the source code for the target type is not available.
# Illegal member (0 = member name)
ERR_PullUp_IllegalMember=Member "{0}" cannot be pulled up. It does not belong to the source type or to one of the source type supertypes that are subtypes of the target type.
# Member already exists in the target type (0 = member name)
ERR_PullUp_MemberAlreadyExists=Member "{0}" already exists in the target type.
# *** Refactoring element descriptions
# Add abstract method to the target type (0 = method name)
ERR_CannotPullupDuplicateMembers=Cannot pull up two members with the same signature.
ERR_PullupNonPublicToInterface=Member "{0}" is being moved to interface, but is not public.

TXT_PullUp_AddMethod=Engadir m\u00e9todo abstracto\: <b>{0}</b>
# Move member to the target type (0 = member name)
TXT_PullUp_Member=Move <b>{0}</b> to the target type.

# --- PUSH DOWN REFACTORING ------------------------------------------------------
TXT_PushDown_Member=Copy <b>{0}</b> to the type <b>{1}</b>.
TXT_PushDown_Remove=Eliminar o elemento <b>{0}</b>.
TXT_PushDown_Abstract=Make method <b>{0}</b> abstract.
TXT_PushDown_RelaxAccessModifier=Change modifier from <b>{0}</b> to <b>{1}</b>.
#LBL_PushDown_private=private
#LBL_PushDown_package_private=package private
#LBL_PushDown_protected=protected
ERR_PushDOwn_NoSubtype=Cannot push down any members. The selected type has no subtypes in the currently opened projects.
ERR_PushDown_NoMembers=The selected type has no members that could be pushed down.
ERR_PushDown_NoMembersSelected=No members are selected to be pushed down.
ERR_PushDown_AlreadyExists={0} xa existe en {1}.

# --- INNER TO OUTER REFACTORING ------------------------------------------------
ERR_InnerToOuter_MustBeInnerClass=The selected type must be an inner type (cannot perform this operation on a top-level type).
ERR_InnerToOuter_FieldNameClash=Field named <b>{0}</b> already exists in this class.
ERR_InnerToOuter_ClassNameClash=Inner class named <b>{0}</b> already exists in the target class.
ERR_InnerToOuter_OuterUsed=The class being moved to the outer level uses members of its outer class. You should let the refactoring create an instance variable holding reference to the original outer class.
ERR_InnerToOuter_InnerHidden=One of the super types of the target class already defines an inner class named <b>{0}</b>.
TXT_InnerToOuter_MoveToOuter=Make this class an inner class of <b>{0}</b>.
TXT_InnerToOuter_MoveToTop=Make this class a top-level class.
TXT_InnerToOuter_Rename=Rename this class to <b>{0}</b>.
TXT_InnerToOuter_AddReference=Add a new instance field named <b>{0}</b> pointing to the original outer class, update class constructors.
TXT_InnerToOuter_AddConstructor=Add constructor since the default constructor will not be available in the super class.
TXT_InnerToOuter_AddConstructorInvocation=Add explicit constructor invocation since the default constructor will not be available in the super class.
TXT_InnerToOuter_RelaxAccessRights=Change from private to package private.

# --- USE SUPERTYPE REFACTORING ------------------------------------------------------
TXT_UseSuperType=Use Supertype of <b>{0}</b> where possible
TXT_UseSuperTypeVariable=Change type of <b>{0}</b> to <b>{1}</b>
TXT_UseSuperTypeReturnType=Change return type of <b>{0}</b> to <b>{1}</b>
TXT_UseSuperTypeLocalVar=Change type of local variable(s) <b>{0}</b> to <b>{1}</b>
TXT_UseSuperTypeProblem=Type {0} is not visible within the body of {1}
ERR_UseSuperType_InvalidElement=Use Supertype can only be invoked on valid types
ERR_UseSuperTypeNoSuperType=No supertype selected.

# --- COPY CLASS ---------------------------------------------------------------
TXT_CopyClassToPackage=Crear unha nova clase {0} no paquete {1} como unha copia de {2}

# rename error messages
ERR_RenameWrongType=Non se pode renomear este tipo de obxecto. Function, variable or type has to be selected.
ERR_Overrides=Este m\u00e9todo sobreescribe ou implementa m\u00e9todos nas clases/interfaces superiores Tam\u00e9n ser\u00e1 renomeada.
ERR_Overrides_Fatal=This method overrides or implements methods in super classes/interfaces, so it cannot be changed.
ERR_Overrides_tree=Este m\u00e9todo sobrescribe ou implementa un m\u00e9todo en {0} Este m\u00e9todo tam\u00e9n est\u00e1 sobreescrito ou implementado en {1}. Se quere levar a cabo esta operaci\u00f3n, invoque este m\u00e9todo en {2}
ERR_IsOverridden=Hai m\u00e9todos nas subclases/implementadores de {0} que sobreescriben ou implementan este m\u00e9todo. Tam\u00e9n ser\u00e1 renomeada.
ERR_OverridesOrOverriden=There are virtual methods in subclasses/superclasses that override or implement this method. They will also be modified.
ERR_WillBeOverridden=Logo de cambiarlle o nome, o m\u00e9todo orixinal "{0}" en {1} ser\u00e1 sobrescribo polo m\u00e9todo "{2}" en {3}.\n.
ERR_WillBeOverridden_access=Despois de renomealo, o m\u00e9todo orixinal {0} en {1} ser\u00e1 sobrescrito polo m\u00e9todo "{2}" en {3} con privilexos de acceso peores.
ERR_WillBeOverridden_static=Logo de cambiarlle o nome, o m\u00e9todo orixinal {0} "{1}" en {2} ser\u00e1 sobrescrito polo m\u00e9todo {3} en "{4}" en {5}.\n.
ERR_WillBeOverridden_final=Logo de cambiarlle o nome o m\u00e9todo final orixinal "{0}" en {1} ser\u00e1 sobrescrito polo m\u00e9todo "{2}" en {3}.
ERR_WillOverride=Logo de renomealo, o m\u00e9todo "{0}" en {1} ser\u00e1 sobrescrito polo m\u00e9todo orixinal "{2}" en {3}.
ERR_WillOverride_access=Logo de renomealo, o m\u00e9todo {0} en {1} ser\u00e1 sobrescrito polo m\u00e9todo orixinal "{2}" en {3} con un privilexios de acceso m\u00e1is fortes.
ERR_WillOverride_static=Logo de renomealo, {0}  m\u00e9todo "{1}" en {2} ser\u00e1 sobrescrito polo m\u00e9todo orixinal {3} "{4}" en {5}.
ERR_WillOverride_final=Logo de renomealo, o m\u00e9todo "{0}" en {1} ser\u00e1 sobrescrito polo m\u00e9todo orixinal final "{2}" en {3}.
ERR_NameNotChanged=O nome non foi modificado. Non se realizar\u00e1n cambios.
ERR_InvalidIdentifier="{0}" \u00e9 un identificador incorrecto.
ERR_InvalidPackage="{0}" non \u00e9 un paquete correcto de identificaci\u00f3n.
ERR_PackageExists=O paquete "{0}" xa existe.
ERR_InnerClassClash=Non \u00e9 pos\u00edbel renomear. A clase interna {0} xa existe na clase {1}.
ERR_ClassClash=Non \u00e9 pos\u00edbel renomear. A clase {0} xa existe no cartafol {1}.
ERR_MethodClash=Non \u00e9 pos\u00edbel renomear. M\u00e9todo {0} coa mesma firma que xa existe na clase {1}.
ERR_FieldClash=Non \u00e9 pos\u00edbel renomear. O campo {0} xa existe na clase {1}.
ERR_LocVariableClash=Non \u00e9 pos\u00edbel renomear. {0} xa est\u00e1 sendo empregado.
ERR_Hides=O campo a renomear agocha un campo en {0}.
ERR_WillHide=O novo campo agochar\u00e1 un campo en {0}.
ERR_NameNotSet=O nome non foi especificado.
ERR_CannotMoveIntoSamePackage=Non \u00e9 pos\u00edbel mover a(s) clase(s) no mesmo paquete.
ERR_CannotModifyInFile=Cannot modify element in read only or library file: "{0}".
ERR_ResourceUnavailable=Non \u00e9 pos\u00edbel renomear o m\u00e9todo "{0}". Non est\u00e1 dispo\u00f1\u00edbel o ficheiro fonte "{1}".
ERR_RenameNative=Attempt to rename native method "{0}". Renaming a native method can cause UnsatisfiedLinkError on runtime.
ERR_CannotRefactorThis=Cannot refactor "{0}".

#Rename package
TXT_RenamePackage=Renomear ficheiro 

#where used error messages
ERR_WhereUsedWrongType=Non \u00e9 pos\u00edbel buscar os usos deste tipo de obxecto. A C/C++ element has to be selected.

# move class/package error messages
ERR_TargetFolderNotSet=Non se especificou un paquete destino.
ERR_SourceWithoutClass=A fonte seleccionada non conten ningunha clase.
ERR_SourceWithMoreClasses=Non \u00e9 pos\u00edbel mover unha clase dun ficheiro fonte que conten m\u00faltiplas clases de nivel superior.
ERR_AccessesPackagePrivateFeature=Class "{0}" within the same package is using feature "{1}" of class you want to move ("{2}").
ERR_AccessesPackagePrivateClass=A clase "{0}" no mesmo paquete est\u00e1 empregando {1} clase que quere mover a ("{2}")
ERR_AccessesPackagePrivateConstructor=A clase "{0}" no mesmo paquete est\u00e1 empregando {1} construtor declarado na clase que quere mover ("{2}")
ERR_AccessesPackagePrivateFeature2=Class you want to move ("{0}") is using feature "{1}" of class "{2}" within the same package.
ERR_AccessesPackagePrivateClass2=A clase que quere mover ("{0}") est\u00e1 empregando {1} clase ("{2}") no mesmo paquete.
ERR_AccessesPackagePrivateConstructor2=A clase que quere mover ("{0}") est\u00e1 empregando {1} construtor declarado na clase ("{2}") no mesmo paquete.
ERR_PackageIsReadOnly=O paquete "{0}" \u00e9 de s\u00f3lo lectura.
ERR_ClassToMoveClashes=A clase "{0}" xa existe no destino.
ERR_ClassToMoveInDefaultPackage=Despois de movela, non ser\u00e1 pos\u00edbel importar as clases no paquete predeterminado orixinal.
ERR_MovingClassToDefaultPackage=Se a clase \u00e9 movida para o paquete predeterminado, as clases en outros paquetes non poder\u00e1n importala clase movida.
ERR_FileAlreadyExists=O ficheiro {0} xa existe noutro paquete {1}.
ERR_PackageMovesToItself=O paquete pai foi seleccionado como destino. Non hai cambios para levar a cabo.
ERR_CannotMovePackageToSubpackage=Non \u00e9 pos\u00edbel mover un paquete nunha dos sus subpaquetes ou en s\u00ed mesmo.
ERR_DefaultPackageCannotBeMoved=Non \u00e9 pos\u00edbel mover o paquete por omisi\u00f3n.
ERR_CannotMoveFile=Non \u00e9 pos\u00edbel mover o ficheiro da biblioteca: "{0}".
ERR_MissingProjectDeps=There are references in project "{0}" to moved files, but source project "{0}" does not depend on target project "{1}". Projects need not compile.

# encapsulate field error messages
ERR_EncapsulateWrongType=Cannot encapsulate this type of object. A field or enclosing class have to be selected.
ERR_EncapsulateNoFields=No fields found in {0}.
ERR_EncapsulateInIntf=Cannot encapsulate an interface field.
ERR_EncapsulateMethods=Getter and setter names have to be valid method names.
ERR_EncapsulateMethodsAccess=The accessibility of created methods is private but some selected fields are referenced from other sources.
ERR_EncapsulateMethodsDefaultAccess=The refactoring might break your code since created methods have a default accessibility but some selected fields are referenced from other sources.
ERR_EncapsulateInsideAssignment=Cannot replace {0} in {1} with void setter in {2}.
ERR_EncapsulateWrongGetter=The getter {0} already exists but with different return type {1}.
ERR_EncapsulateWrongSetter=The setter {0} already exists but with wrong return type {1}.
ERR_EncapsulateNothingSelected=Nothing to encapsulate. You have to select some checkbox.
EncapsulateFieldInsertDeclartion=Insert declaration {0}
EncapsulateFieldInlineDefinition=Insert inline definition {0}
EncapsulateFieldInsertDefinition=Insert definition {0}

# change function signature error messages
ERR_MethodOverrides=O m\u00e9todo sobreescribe ou implementa m\u00e9todos nas super clases/interfaces.
ERR_MethodIsOverridden=Hai m\u00e9todos nas subclases ou implementadores de {0} que sobreescriben ou implementa o m\u00e9todo.
ERR_HasVarArg=You cannot use the Change Function Parameters refactoring on functions with variable arguments.
ERR_newpar=Vostede ten que proporcionar {0} para todos os novos par\u00e1metros.
ERR_parname=nome do par\u00e1metro
ERR_partype=tipo de par\u00e1metro
ERR_pardefv=valores predeterminados
ERR_existingMethod=Non \u00e9 pos\u00edbel modificar a sinatura. M\u00e9todo {0} coa mesma firma que xa existe na clase {1}.
ERR_existingConstr=Non \u00e9 pos\u00edbel modificar a sinatura. Xa existe un constructor coa mesma sinatura na clase {0}.
ERR_NoValues=Vostede ten que proporcionar valores relativos aos novos par\u00e1metros.
ERR_DuplicateName=Nome de par\u00e1metro duplicado ({0}).
ERR_NameAlreadyUsed=O nome  "{0}" xa se usa como nome dunha vari\u00e1bel local.
ERR_CannotChangeModifiers=Non \u00e9 pos\u00edbel cambiar os modificadores do m\u00e9todo na interface.
ERR_StrongAccMod=Vostede cambiou o modificador de acceso a {0}. O m\u00e9todo non ser\u00e1 acces\u00edbel para algunhas das referencias. O c\u00f3digo fonte non compilar\u00e1 despois da refactorizaci\u00f3n!
DSC_MethodElementWithoutDeclaration=You cannot use the Change Function Parameters refactoring on function definition without declaration.

ERR_ChangeParamsWrongType=Non \u00e9 pos\u00edbel modificar os par\u00e1metros de estos obxectos. A function and not destructor has to be selected.
MSG_NothingToFind=Vostede non seleccionou nada para atopar. Seleccione Atopar usos, Atopar m\u00e9todos que sobrescriben, ou ambos.
MSG_InvalidObjectNothingToFind=The object was invalidated. Nada que atopar.
ERR_CannotRefactorFile=Non \u00e9 pos\u00edbel refactorizar o ficheiro de s\u00f3 lectura "{0}"
ERR_MethodsInAnnotationsNotSupported=@interface members may not have parameters.
ERR_CannnotRefactorLibrary=Cannot change parameters of "{0}" which overrides method from library class.

ERR_VarargsFinalPosition=Varargs can be used only in the final argument position.

# Rename
ParseErrorFile=Erro de an\u00e1lise no ficheiro que cont\u00e9n a referencia {0} - omit\u00edndoo
ChangeComment=Cambiar o comentario
UpdateMethodDef=Renomear definici\u00f3n do m\u00e9todo
UpdateCall=Actualizar chamada ao m\u00e9todo
UpdateSymbol=Renomear s\u00edmbolo
UpdateClassDef=Renomear definici\u00f3n de clase
UpdateModule=Renomear definici\u00f3n de m\u00f3dulo
UpdateLocalvar=Renomear da vari\u00e1bel local
UpdateDynvar=Renomear vari\u00e1bel din\u00e1mica
UpdateGlobal=Renomear a referencia a vari\u00e1bel global
UpdateInstance=Renomear a referencia \u00e1 variable de instancia
UpdateClassvar=Renomear a referencia \u00e1 variable de clase.
UpdateRef=Actualizar referencia a {0}
UpdateDeclRef=Update declaration {0}
RenameParam=Renomear par\u00e1metros
UpdateFunRef=Actualizar referencia
UpdateSignature=Actualizar sinatura

