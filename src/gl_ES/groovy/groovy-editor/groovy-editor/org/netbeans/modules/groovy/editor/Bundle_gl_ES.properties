# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

OpenIDE-Module-Name=Editor de Groovy
OpenIDE-Module-Display-Category=Groovy
OpenIDE-Module-Short-Description=Compatibilidade para edici\u00f3n de ficheiros Groovy
OpenIDE-Module-Long-Description=Compatibilidade para edici\u00f3n de ficheiros Groovy

Services/MIMEResolver/GroovyMimeResolver.xml=Ficheiros de Groovy

text/x-groovy=Groovy
text/x-groovy-string-double=Cadeas entre v\u00edrgulas de Groovy
text/x-groovy-string-single=Cadeas de Groovy
text/x-groovy-comment=Comentarios de Groovy

groovy-reflow-paragraph=Reformatar par\u00e1grafo
editor-popup-groovy-reflow-paragraph=Reformatar par\u00e1grafo

NoRename=Non \u00e9 pos\u00edbel renomear o s\u00edmbolo; s\u00f3 se permiten os par\u00e1metros, vari\u00e1beis locais e din\u00e1micas
NoRenameWithErrors=Non \u00e9 pos\u00edbel renomear cando a fonte cont\u00e9n erros
UnexpectedError=Erro de sintaxe, {0} inesperado
OptionsCategory_Name=Groovy
OptionsCategory_Title=Groovy
UnsafeIdentifierName=So os caracteres a-z, A-Z, os d\u00edxitos e a barra baixa son nomes seguros en Groovy

## TEMPORARY -- this should be removed soon
# because the colors should be added dynamically from the infrastructure
GSF_ERROR=Erro
GSF_CLASS=Vari\u00e1bel de clase
GSF_REGEXP_LITERAL=Expresi\u00f3n regular
GSF_LINE_COMMENT=Li\u00f1a de comentario
GSF_CONSTANT=Constante
GSF_INT_LITERAL=N\u00famero
GSF_IDENTIFIER=Identificador
GSF_ANY_KEYWORD=Palabra chave
GSF_WHITESPACE=Espazo en branco
GSF_FLOAT_LITERAL=N\u00famero de coma flotante
GSF_ANY_OPERATOR=Operador
GSF_INSTANCE=Instancia
STRING_INVALID=Cadea incorrecta
GSF_GLOBAL=Vari\u00e1bel global
GSF_TODO=Elemento Todo
GSF_STRING_LITERAL=Cadea
GSF_DOUBLE_LITERAL=Dobre
GSF_BLOCK_COMMENT=Bloque de comentario
STRING_TEXT=Cadea
QUOTED_STRING_LITERAL=Cadea entre v\u00edrgulas
GSF_LONG_LITERAL=Longo
STRING_ESCAPE=Cadea de escape
GSF_CHAR_LITERAL=Car\u00e1cter literal
GSF_DOCUMENTATION=Documentaci\u00f3n
COMMENT_TEXT=Texto do comentario
COMMENT_TODO=Texto do comentario TODO
COMMENT_RDOC=Etiqueta de comentario RDoc
COMMENT_HTMLTAG=Etiqueta de comentario HTML
COMMENT_LINK=Ligaz\u00f3n do comentario
COMMENT_BOLD=Comentario en negra
COMMENT_ITALIC=Comentario en cursiva
GSF_TYPESYMBOL=Tipo de s\u00edmbolo
REGEXP_TEXT=Expresi\u00f3n regular
REGEXP_META=Metacaracter da expresi\u00f3n regular
REGEXP_INVALID=Expresi\u00f3n regular incorrecta

#"Semantic" highlighting:
mod-unused=Elemento non usado
mod-abstract=Elemento abstracto
mod-field=Campo
mod-local-variable=Vari\u00e1bel local
mod-parameter=Par\u00e1metro
mod-method=M\u00e9todo
mod-constructor=Construtor
mod-class=Clase
mod-interface=Interface
mod-annotation-type=Anotaci\u00f3n
mod-enum=Enumerado
mod-deprecated=Elemento obsoleto
mod-static=Membro est\u00e1tico
mod-private=Membro privado
mod-package-private=Membro privado do paquete
mod-protected=Membro protexido
mod-public=Membro p\u00fablico
mod-type-parameter-declaration=Par\u00e1metro de tipo
mod-type-parameter-use=Empregar par\u00e1metro de tipo
mod-undefined=Elemento non definido

mark-occurrences=Marcar ocorrencias

#ct_l==&gt;
#ct_jc=import Java class
#ct_do=do { |e| \u2026 }
#ct_module=module end
#ct_begin=begin rescue end
#ct_if=if \u2026 | end
#ct_ife=if \u2026 | else \u2026 | end
#ct_doc==begin/=end documentation

# TextMate snippets:
#ct_hash=Add # =&gt; Marker
#ct_colon=Hash Pair :key =&gt; "value"
#ct_Comp=include Comparable \u2026
#ct_Dir=Dir.glob("\u2026") { |file| \u2026 }
#ct_Enum=include Enumerable \u2026
#ct_File=File.foreach ("\u2026") { |line| \u2026 }
#ct_Forw-=extend Forwardable
#ct_Hash=Hash.new { |hash, key| hash[key] = \u2026 }
#ct_Md=Marshal.dump(\u2026, file)
#ct_Ml=Marshal.load(obj)
#ct_Pn-=PStore.new( \u2026 )
#ct_Yd-=YAML.dump(\u2026, file)
#ct_Yl-=YAML.load(file)
#ct_all=all? { |e| \u2026 }
#ct_am=alias_method \u2026
#ct_any=any? { |e| \u2026 }
#ct_app=application_code { \u2026 }
#ct_as=assert(\u2026)
#ct_ase=assert_equal(\u2026)
#ct_asid=assert_in_delta(\u2026)
#ct_asio=assert_instance_of(\u2026)
#ct_asko=assert_kind_of(\u2026)
#ct_asm=assert_match(\u2026)
#ct_asn=assert_nil(\u2026)
#ct_asne=assert_not_equal(\u2026)
#ct_asnm=assert_no_match(\u2026)
#ct_asnn=assert_not_nil(\u2026)
#ct_asnr=assert_nothing_raised(\u2026) { \u2026 }
#ct_asns=assert_not_same(\u2026)
#ct_asnt=assert_nothing_thrown { \u2026 }
#ct_aso=assert_operator(\u2026)
#ct_asr=assert_raise(\u2026) { \u2026 }
#ct_asrt=assert_respond_to(\u2026)
#ct_ass=assert_same(\u2026)
#ct_ast=assert_throws(\u2026) { \u2026 }
#ct_bm-=Benchmark.bmbm do \u2026 end
#ct_case=case \u2026 | end
#ct_cl=classify { |e| \u2026 }
#ct_cla=ClassName = Struct \u2026 do \u2026 end
#ct_clafn=class_from_name()
#ct_col=collect { |e| \u2026 }
#ct_dop=do \u2026 end
#ct_deec=deep_copy(\u2026)
#ct_def=def \u2026 | end
#ct_defd=def_delegator \u2026
#ct_defds=def_delegators \u2026
#ct_defmm=def method_missing \u2026 end
#ct_defs=def self \u2026 end
#ct_deft=def test_ \u2026 end
#ct_deli=delete_if { |e| \u2026 }
#ct_det=detect { |e| \u2026 }
#ct_ea=each { |e| \u2026 }
#ct_eab=each_byte { |byte| \u2026 }
#ct_eac-=each_char { |chr| \u2026 }
#ct_eai=each_index { |i| \u2026 }
#ct_eak=each_key { |key| \u2026 }
#ct_eal=each_line { |line| \u2026 }
#ct_eap=each_pair { |name, val| \u2026 }
#ct_eas-=each_slice(\u2026) { |group| \u2026 }
#ct_eav=each_value { |val| \u2026 }
#ct_eawi=each_with_index { |e, i| \u2026 }
#ct_elsif=elsif \u2026
#ct_end=__END__
#ct_fin=find { |e| \u2026 }
#ct_fina=find_all { |e| \u2026 }
#ct_fl=flunk(\u2026)
#ct_flao=flatten_once()
#ct_gre=grep(/pattern/) { |match| \u2026 }
#ct_loo=loop { \u2026 }
#ct_map=map { |e| \u2026 }
#ct_mapwi-=map_with_index { |e, i| \u2026 }
#ct_max=max { |a, b| \u2026 }
#ct_min=min { |a, b| \u2026 }
#ct_mod=module \u2026 ClassMethods \u2026 end
#ct_par=partition { |e| \u2026 }
#ct_patfh=path_from_here( \u2026 )
#ct_r=attr_reader \u2026
#ct_ran=randomize()
#ct_rej=reject { |e| \u2026 }
#ct_rep=results.report(\u2026) { \u2026 }
#ct_req=require "\u2026"
#ct_reve=reverse_each { |e| \u2026 }
#ct_rw=attr_accessor \u2026
#ct_sca=scan(/\u2026/) { |match| \u2026 }
#ct_sel=select { |e| \u2026 }
#ct_sin=singleton_class()
#ct_sor=sort { |a, b| \u2026 }
#ct_sorb=sort_by { |e| \u2026 }
#ct_tc=class \u2026 &lt; Test::Unit::TestCase \u2026 end
#ct_ts=require "tc_\u2026" \u2026
#ct_uni=unix_filter { \u2026 }
#ct_unless=unless \u2026 | end
#ct_until=until \u2026 end
#ct_usai=usage_if()
#ct_usau=usage_unless()
#ct_w=attr_writer \u2026
#ct_when=when \u2026 | 
#ct_while=while \u2026 end
#ct_y=:yields:
#ct_zip=zip(enums) { |row| \u2026 }

# TextMate snippets
#ct_art=assert_redirected_to
#ct_asre=assert_response
#ct_bt=belongs_to
#ct_flash=flash[\u2026 | ]
#ct_habtm=has_and_belongs_to_many
#ct_hm=has_many
#ct_ho=has_one
#ct_log=logger.debug
#ct_mccc=Create Several Columns
#ct_mcol=Add Column
#ct_mp=map(&amp;:sym_proc)
#ct_mtab=Create Table
#ct_ra=render (action)
#ct_ral=render (action, layout)
#ct_rcea=render_component (action)
#ct_rcec=render_component (controller)
#ct_rceca=render_component (controller, action)
#ct_rdb=RAILS_DEFAULT_LOGGER.debug
#ct_rea=redirect_to (action)
#ct_reai=redirect_to (action, id)
#ct_rec=redirect_to (controller)
#ct_reca=redirect_to (controller, action)
#ct_recai=redirect_to (controller, action, id)
#ct_rf=render (file)
#ct_rfu=render (file, use_full_path)
#ct_ri=render (inline)
#ct_ril=render (inline, locals)
#ct_rit=render (inline, type)
#ct_rl=render (layout)
#ct_rn=render (nothing)
#ct_rns=render (nothing, status)
#ct_rp=render (partial)
#ct_rpc=render (partial, collection)
#ct_rpl=render (partial, locals)
#ct_rpo=render (partial, object)
#ct_rps=render (partial, status)
#ct_rt=render (text)
#ct_rtl=render (text, layout)
#ct_rtlt=render (text, layout =&gt; true)
#ct_rts=render (text, status)
#ct_va=validates_associated
#ct_vaif=validates_associated if
#ct_vc=validates_confirmation_of
#ct_vcif=validates_confirmation_of if
#ct_ve=validates_exclusion_of
#ct_veif=validates_exclusion_of if
#ct_verify=verify \u2026 render
#ct_vl=validates_length_of
#ct_vp=validates_presence_of
#ct_vpif=validates_presence_of if
#ct_vu=validates_uniqueness_of
#ct_vuif=validates_uniqueness_of if
#ct_ft=form_tag
#ct_lia=link_to (action)
#ct_liai=link_to (action, id)
#ct_lic=link_to (controller)
#ct_lica=link_to (controller, action)
#ct_licai=link_to (controller, action, id)

DynamicMethod=Este m\u00e9todo \u00e9 xerado dinamicamente por Rails, e buscar\u00e1 coincidencias no seu  modelo para a columna dada. Tam\u00e9n pode buscar por combinaci\u00f3ns de columnas que concatenan outras con <code>_and_</code>.
NoCommentFound=Non se encontraron comentarios
#Documented=(documented)
#NoDoced=(:nodoc:)
#In=in
FileDeleted=Non \u00e9 pos\u00edbel encontrar o ficheiro. Quiz\u00e1is fora eliminado dende fora do IDE?\nVostede pode forzar unha actualizaci\u00f3n do \u00edndice eliminando o cartafol\n var/cache/gsf-index no seu cartafol de usuario.

OnlyRenameLocalVars=S\u00f3 renomeamos as vari\u00e1beis neste momento

