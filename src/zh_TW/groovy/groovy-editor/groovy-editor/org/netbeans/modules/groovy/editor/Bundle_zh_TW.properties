# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

OpenIDE-Module-Name=Groovy \u7de8\u8f2f\u5668
OpenIDE-Module-Display-Category=Groovy
OpenIDE-Module-Short-Description=\u652f\u63f4\u7de8\u8f2f Groovy \u6a94\u6848
OpenIDE-Module-Long-Description=\u652f\u63f4\u7de8\u8f2f Groovy \u6a94\u6848

Services/MIMEResolver/GroovyMimeResolver.xml=Groovy \u6a94\u6848

text/x-groovy=Groovy
text/x-groovy-string-double=Groovy \u5f15\u865f\u5167\u7684\u5b57\u4e32
text/x-groovy-string-single=Groovy \u5b57\u4e32
text/x-groovy-comment=Groovy \u8a3b\u89e3

groovy-reflow-paragraph=\u91cd\u65b0\u8a2d\u5b9a\u6bb5\u843d\u6392\u7248
editor-popup-groovy-reflow-paragraph=\u91cd\u65b0\u8a2d\u5b9a\u6bb5\u843d\u6392\u7248

NoRename=\u7121\u6cd5\u91cd\u65b0\u547d\u540d\u6b64\u7b26\u865f\uff1b\u53ea\u5141\u8a31\u53c3\u6578\u3001\u5340\u57df\u8b8a\u6578\u548c\u52d5\u614b\u8b8a\u6578
NoRenameWithErrors=\u539f\u59cb\u78bc\u542b\u6709\u932f\u8aa4\u6642\u7121\u6cd5\u91cd\u65b0\u547d\u540d
UnexpectedError=\u8a9e\u6cd5\u932f\u8aa4\uff0c\u672a\u9810\u671f\u7684 {0}
OptionsCategory_Name=Groovy
OptionsCategory_Title=Groovy
UnsafeIdentifierName=\u5728 Groovy \u540d\u7a31\u4e2d\u53ea\u5141\u8a31\u4f7f\u7528 a-z\u3001A-Z\u3001\u6578\u5b57\u548c\u5e95\u7dda

## TEMPORARY -- this should be removed soon
# because the colors should be added dynamically from the infrastructure
GSF_ERROR=\u932f\u8aa4
GSF_CLASS=\u985e\u5225\u8b8a\u6578
GSF_REGEXP_LITERAL=\u6b63\u898f\u8868\u9054\u5f0f
GSF_LINE_COMMENT=\u884c\u8a3b\u89e3
GSF_CONSTANT=\u5e38\u6578
GSF_INT_LITERAL=\u6578\u503c
GSF_IDENTIFIER=\u8b58\u5225\u5b57
GSF_ANY_KEYWORD=\u95dc\u9375\u5b57
GSF_WHITESPACE=\u7a7a\u767d
GSF_FLOAT_LITERAL=\u6d6e\u9ede\u6578\u5b57
GSF_ANY_OPERATOR=\u904b\u7b97\u7b26
GSF_INSTANCE=\u5be6\u9ad4
STRING_INVALID=\u7121\u6548\u5b57\u4e32
GSF_GLOBAL=\u5168\u5c40\u8b8a\u6578
GSF_TODO=\u5f85\u8fa6\u9805\u76ee
GSF_STRING_LITERAL=\u5b57\u4e32
GSF_DOUBLE_LITERAL=\u96d9\u500d\u7cbe\u78ba\u6d6e\u9ede\u6578 
GSF_BLOCK_COMMENT=\u5340\u584a\u8a3b\u89e3
STRING_TEXT=\u5b57\u4e32\u578b
QUOTED_STRING_LITERAL=\u5f15\u865f\u5167\u7684\u5b57\u4e32
GSF_LONG_LITERAL=\u9577\u578b
STRING_ESCAPE=\u5b57\u4e32\u9000\u51fa
GSF_CHAR_LITERAL=\u5b57\u5143\u578b
GSF_DOCUMENTATION=\u6587\u4ef6
COMMENT_TEXT=\u8a3b\u89e3\u6587\u5b57
COMMENT_TODO=\u8a3b\u89e3 TODO \u6587\u5b57
COMMENT_RDOC=RDoc \u8a3b\u89e3\u6a19\u7c64
COMMENT_HTMLTAG=\u8a3b\u89e3 HTML \u6a19\u7c64
COMMENT_LINK=\u8a3b\u89e3\u9023\u7d50
COMMENT_BOLD=\u7c97\u9ad4\u8a3b\u89e3
COMMENT_ITALIC=\u659c\u9ad4\u8a3b\u89e3
GSF_TYPESYMBOL=\u985e\u578b\u7b26\u865f
REGEXP_TEXT=\u6b63\u898f\u8868\u9054\u5f0f
REGEXP_META=\u5e38\u898f\u8868\u793a\u5f0f\u4e2d\u4ecb\u5b57\u5143
REGEXP_INVALID=\u7121\u6548\u7684\u5e38\u898f\u8868\u793a\u5f0f

#"Semantic" highlighting:
mod-unused=\u672a\u4f7f\u7528\u7684\u5143\u7d20
mod-abstract=\u62bd\u8c61\u5143\u7d20
mod-field=\u6b04\u4f4d
mod-local-variable=\u5340\u57df\u8b8a\u6578
mod-parameter=\u53c3\u6578
mod-method=\u65b9\u6cd5
mod-constructor=\u5efa\u69cb\u5b50
mod-class=\u985e\u5225
mod-interface=\u4ecb\u9762
mod-annotation-type=\u6a19\u8a3b
mod-enum=\u5217\u8209
mod-deprecated=\u505c\u7528\u7684\u5143\u7d20
mod-static=\u975c\u614b\u6210\u54e1
mod-private=\u79c1\u7528\u6210\u54e1
mod-package-private=\u5957\u4ef6\u79c1\u7528\u6210\u54e1
mod-protected=\u53d7\u4fdd\u8b77\u7684\u6210\u54e1
mod-public=\u516c\u958b\u6210\u54e1
mod-type-parameter-declaration=\u985e\u578b\u53c3\u6578
mod-type-parameter-use=\u985e\u578b\u53c3\u6578\u7528\u6cd5
mod-undefined=\u672a\u5b9a\u7fa9\u7684\u5143\u7d20

mark-occurrences=\u6a19\u8a3b\u4e8b\u4ef6

#ct_l==&gt;
#ct_jc=import Java class
#ct_do=do { |e| \u2026 }
#ct_module=module end
#ct_begin=begin rescue end
#ct_if=if \u2026 | end
#ct_ife=if \u2026 | else \u2026 | end
#ct_doc==begin/=end documentation

# TextMate snippets:
#ct_hash=Add # =&gt; Marker
#ct_colon=Hash Pair :key =&gt; "value"
#ct_Comp=include Comparable \u2026
#ct_Dir=Dir.glob("\u2026") { |file| \u2026 }
#ct_Enum=include Enumerable \u2026
#ct_File=File.foreach ("\u2026") { |line| \u2026 }
#ct_Forw-=extend Forwardable
#ct_Hash=Hash.new { |hash, key| hash[key] = \u2026 }
#ct_Md=Marshal.dump(\u2026, file)
#ct_Ml=Marshal.load(obj)
#ct_Pn-=PStore.new( \u2026 )
#ct_Yd-=YAML.dump(\u2026, file)
#ct_Yl-=YAML.load(file)
#ct_all=all? { |e| \u2026 }
#ct_am=alias_method \u2026
#ct_any=any? { |e| \u2026 }
#ct_app=application_code { \u2026 }
#ct_as=assert(\u2026)
#ct_ase=assert_equal(\u2026)
#ct_asid=assert_in_delta(\u2026)
#ct_asio=assert_instance_of(\u2026)
#ct_asko=assert_kind_of(\u2026)
#ct_asm=assert_match(\u2026)
#ct_asn=assert_nil(\u2026)
#ct_asne=assert_not_equal(\u2026)
#ct_asnm=assert_no_match(\u2026)
#ct_asnn=assert_not_nil(\u2026)
#ct_asnr=assert_nothing_raised(\u2026) { \u2026 }
#ct_asns=assert_not_same(\u2026)
#ct_asnt=assert_nothing_thrown { \u2026 }
#ct_aso=assert_operator(\u2026)
#ct_asr=assert_raise(\u2026) { \u2026 }
#ct_asrt=assert_respond_to(\u2026)
#ct_ass=assert_same(\u2026)
#ct_ast=assert_throws(\u2026) { \u2026 }
#ct_bm-=Benchmark.bmbm do \u2026 end
#ct_case=case \u2026 | end
#ct_cl=classify { |e| \u2026 }
#ct_cla=ClassName = Struct \u2026 do \u2026 end
#ct_clafn=class_from_name()
#ct_col=collect { |e| \u2026 }
#ct_dop=do \u2026 end
#ct_deec=deep_copy(\u2026)
#ct_def=def \u2026 | end
#ct_defd=def_delegator \u2026
#ct_defds=def_delegators \u2026
#ct_defmm=def method_missing \u2026 end
#ct_defs=def self \u2026 end
#ct_deft=def test_ \u2026 end
#ct_deli=delete_if { |e| \u2026 }
#ct_det=detect { |e| \u2026 }
#ct_ea=each { |e| \u2026 }
#ct_eab=each_byte { |byte| \u2026 }
#ct_eac-=each_char { |chr| \u2026 }
#ct_eai=each_index { |i| \u2026 }
#ct_eak=each_key { |key| \u2026 }
#ct_eal=each_line { |line| \u2026 }
#ct_eap=each_pair { |name, val| \u2026 }
#ct_eas-=each_slice(\u2026) { |group| \u2026 }
#ct_eav=each_value { |val| \u2026 }
#ct_eawi=each_with_index { |e, i| \u2026 }
#ct_elsif=elsif \u2026
#ct_end=__END__
#ct_fin=find { |e| \u2026 }
#ct_fina=find_all { |e| \u2026 }
#ct_fl=flunk(\u2026)
#ct_flao=flatten_once()
#ct_gre=grep(/pattern/) { |match| \u2026 }
#ct_loo=loop { \u2026 }
#ct_map=map { |e| \u2026 }
#ct_mapwi-=map_with_index { |e, i| \u2026 }
#ct_max=max { |a, b| \u2026 }
#ct_min=min { |a, b| \u2026 }
#ct_mod=module \u2026 ClassMethods \u2026 end
#ct_par=partition { |e| \u2026 }
#ct_patfh=path_from_here( \u2026 )
#ct_r=attr_reader \u2026
#ct_ran=randomize()
#ct_rej=reject { |e| \u2026 }
#ct_rep=results.report(\u2026) { \u2026 }
#ct_req=require "\u2026"
#ct_reve=reverse_each { |e| \u2026 }
#ct_rw=attr_accessor \u2026
#ct_sca=scan(/\u2026/) { |match| \u2026 }
#ct_sel=select { |e| \u2026 }
#ct_sin=singleton_class()
#ct_sor=sort { |a, b| \u2026 }
#ct_sorb=sort_by { |e| \u2026 }
#ct_tc=class \u2026 &lt; Test::Unit::TestCase \u2026 end
#ct_ts=require "tc_\u2026" \u2026
#ct_uni=unix_filter { \u2026 }
#ct_unless=unless \u2026 | end
#ct_until=until \u2026 end
#ct_usai=usage_if()
#ct_usau=usage_unless()
#ct_w=attr_writer \u2026
#ct_when=when \u2026 | 
#ct_while=while \u2026 end
#ct_y=:yields:
#ct_zip=zip(enums) { |row| \u2026 }

# TextMate snippets
#ct_art=assert_redirected_to
#ct_asre=assert_response
#ct_bt=belongs_to
#ct_flash=flash[\u2026 | ]
#ct_habtm=has_and_belongs_to_many
#ct_hm=has_many
#ct_ho=has_one
#ct_log=logger.debug
#ct_mccc=Create Several Columns
#ct_mcol=\u52a0\u5165\u6b04
#ct_mp=map(&amp;:sym_proc)
#ct_mtab=\u5efa\u7acb\u8868\u683c
#ct_ra=render (action)
#ct_ral=render (action, layout)
#ct_rcea=render_component (action)
#ct_rcec=render_component (controller)
#ct_rceca=render_component (controller, action)
#ct_rdb=RAILS_DEFAULT_LOGGER.debug
#ct_rea=redirect_to (action)
#ct_reai=redirect_to (action, id)
#ct_rec=redirect_to (controller)
#ct_reca=redirect_to (controller, action)
#ct_recai=redirect_to (controller, action, id)
#ct_rf=render (file)
#ct_rfu=render (file, use_full_path)
#ct_ri=render (inline)
#ct_ril=render (inline, locals)
#ct_rit=render (inline, type)
#ct_rl=render (layout)
#ct_rn=render (nothing)
#ct_rns=render (nothing, status)
#ct_rp=render (partial)
#ct_rpc=render (partial, collection)
#ct_rpl=render (partial, locals)
#ct_rpo=render (partial, object)
#ct_rps=render (partial, status)
#ct_rt=render (text)
#ct_rtl=render (text, layout)
#ct_rtlt=render (text, layout =&gt; true)
#ct_rts=render (text, status)
#ct_va=validates_associated
#ct_vaif=validates_associated if
#ct_vc=validates_confirmation_of
#ct_vcif=validates_confirmation_of if
#ct_ve=validates_exclusion_of
#ct_veif=validates_exclusion_of if
#ct_verify=verify \u2026 render
#ct_vl=validates_length_of
#ct_vp=validates_presence_of
#ct_vpif=validates_presence_of if
#ct_vu=validates_uniqueness_of
#ct_vuif=validates_uniqueness_of if
#ct_ft=form_tag
#ct_lia=link_to (action)
#ct_liai=link_to (action, id)
#ct_lic=link_to (controller)
#ct_lica=link_to (controller, action)
#ct_licai=link_to (controller, action, id)

DynamicMethod=\u9019\u500b\u65b9\u6cd5\u7531 Rails \u52d5\u614b\u7522\u751f\uff0c\u4e26\u4e14\u6703\u5728\u60a8\u7684\u6a21\u578b\u4e2d\u641c\u5c0b\u6307\u5b9a\u6b04\u4f4d\u7684\u7b26\u5408\u9805\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>_and_</code> \u4f86\u9023\u7d50\u6b04\u4f4d\uff0c\u4f9d\u6b04\u4f4d\u7d44\u5408\u9032\u884c\u641c\u5c0b\u3002
NoCommentFound=\u627e\u4e0d\u5230\u8a3b\u89e3
#Documented=(documented)
#NoDoced=(:nodoc:)
#In=in
FileDeleted=\u627e\u4e0d\u5230\u6a94\u6848\u3002 \u53ef\u80fd\u5df2\u5728 IDE \u4ee5\u5916\u522a\u9664\uff1f\n\u60a8\u53ef\u4ee5\u79fb\u9664\u4f7f\u7528\u8005\u76ee\u9304\u4e2d\u7684 var/cache/gsf-index\n\u76ee\u9304\uff0c\u4ee5\u5f37\u5236\u66f4\u65b0\u7d22\u5f15\u3002

OnlyRenameLocalVars=\u76ee\u524d\u53ea\u91cd\u65b0\u547d\u540d\u300c\u8b8a\u6578\u300d
