# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

ProfilerCalibrator_CannotSaveCalibrationDataMsg=\u5df2\u6210\u529f\u5b8c\u6210\u6821\u6e96\uff0c\u4f46\u7121\u6cd5\u5132\u5b58\u6821\u6e96\u8cc7\u6599\uff1a\n{0}
ProfilerCalibrator_CalibrationSuccessMsg=\u6210\u529f\u5b8c\u6210\u6821\u6e96
ProfilerCalibrator_CalibrationResultsPrefix=\u53d6\u5f97\u7684\u7d50\u679c\u5982\u4e0b\u6240\u793a\uff0c\u50c5\u4f9b\u53c3\u8003\uff1a
ProfilerCalibrator_CalibrationResultsMsg=\u4e00\u500b methodEntry()/methodExit() \u547c\u53eb\u5c0d\u7d44\u7684\u5927\u7d04\u6642\u9593\uff1a\n\u50c5\u53d6\u5f97\u7d55\u5c0d\u6642\u9593\u6233\u8a18\u7684\u6642\u9593\uff1a{0} \u6beb\u79d2\n\u50c5\u53d6\u5f97\u57f7\u884c\u7dd2 CPU \u6642\u9593\u6233\u8a18\u7684\u6642\u9593\uff1a{1} \u6beb\u79d2\n\u540c\u6642\u53d6\u5f97\u5169\u7a2e\u6642\u9593\u6233\u8a18\u7684\u6642\u9593\uff1a{2} \u6beb\u79d2\n\n\u7bc4\u4f8b\u5206\u6790\u6a21\u5f0f\u4e2d\u4e00\u500b methodEntry()/methodExit() \u547c\u53eb\u5c0d\u7d44\n\u7684\u5927\u7d04\u6642\u9593\uff1a{3} \u6beb\u79d2\n
ProfilerCalibrator_StartingCalibrationMsg=\u6b63\u5728\u555f\u52d5\u6821\u6e96...
ProfilerCalibrator_TimerCountsMsg=*** timerCountsInSecond = {0}
ProfilerCalibrator_TimerValueMsg=*** \u8a08\u6642\u5668\u50b3\u56de\u7684\u7bc4\u4f8b\u503c = {0}
ProfilerCalibrator_InjectionCalibrationMsg=----------- \u63d2\u5165\u6548\u80fd\u5206\u6790\u5de5\u5177\u7a0b\u5f0f\u78bc\u6821\u6e96 -----------
ProfilerCalibrator_TimeGetCurrentTimeInCountsMsg=\u6bcf\u500b getCurrentTimeInCounts() \u547c\u53eb\u6240\u82b1\u8cbb\u7684\u6642\u9593
ProfilerCalibrator_TimeGetThreadCPUTimeInNanosMsg=\u6bcf\u500b getThreadCPUTimeInNanos() \u547c\u53eb\u6240\u82b1\u8cbb\u7684\u6642\u9593
ProfilerCalibrator_TimeCountsMcsMsg={0} \u8a08\u6578\uff0c{1} \u5fae\u79d2
ProfilerCalibrator_TimeSuccessPairsMsg=\u6bcf\u500b methodEntry()/methodExit() \u6210\u529f\u547c\u53eb\u5c0d\u7d44\u6240\u82b1\u8cbb\u7684\u6642\u9593 ({0}, {1})
ProfilerCalibrator_MinimumTimeMsg=\u6700\u5c0f\u6642\u9593\uff1a{0} \u8a08\u6578\uff0c\u6216 {1} \u5fae\u79d2\u3002
ProfilerCalibrator_InnerOuterTimeMsg=methodEntry()/methodExit() \u6210\u529f\u547c\u53eb\u5c0d\u7d44\u6240\u82b1\u8cbb\u7684\u5167\u90e8/\u5916\u90e8\u6642\u9593
ProfilerCalibrator_InnerTimeMcsMsg=\u5167\u90e8\u6642\u9593\uff1a{0} \u5fae\u79d2\u3002
ProfilerCalibrator_OuterTimeMcsMsg=\u5916\u90e8\u6642\u9593\uff1a{0} \u5fae\u79d2\u3002
ProfilerCalibrator_SampledTimeMsg=\u6bcf\u500b\u53d6\u6a23\u5206\u6790 methodEntry()/methodExit() \u547c\u53eb\u5c0d\u7d44\u6240\u82b1\u8cbb\u7684\u6642\u9593
ProfilerCalibrator_RegionTimeMsg=\u6bcf\u500b codeRegionEntry()/codeRegionExit() \u547c\u53eb\u5c0d\u7d44\u6240\u82b1\u8cbb\u7684\u6642\u9593

ProfilerInterface_InternalErrorMsg=\u5167\u90e8\u932f\u8aa4\uff1a\n\u9810\u671f\u7684\u662f InstrumentMethodGroupResponse\uff0c\u56de\u61c9\u7684\u662f\u985e\u5225 {0}\uff0c\n\u503c = {1}\n\u5c07\u6703\u79fb\u9664\u6240\u6709\u5206\u6790
ProfilerInterface_UnexpectedExceptionMsg=\u5617\u8a66\u6e2c\u8a66\u985e\u5225\u6642\u767c\u751f\u975e\u9810\u671f\u7684\u7570\u5e38\u3002\n\u539f\u59cb\u7570\u5e38\uff1a\n{0}\n\u5806\u758a\u8ffd\u8e64\uff1a\n\n{1}
ProfilerInterface_InstrumentationSuccessfulMsg=\u5df2\u6210\u529f\u57f7\u884c\u5ef6\u9072\u7684\u5206\u6790

ProfilerServer_EnterToShutdownMsg=\u6309\u4e0b ENTER \u9375\u95dc\u9589\u76ee\u6a19 JVM...
ProfilerServer_MainClassNotPublicMsg=\u4e3b\u985e\u5225 {0} \u4e0d\u662f\u516c\u7528\u7684\u3002\n\u6548\u80fd\u5206\u6790\u5de5\u5177\u7121\u6cd5\u555f\u52d5\u5b83\u3002
ProfilerServer_IncorrectMainModifiersMsg=\u65b9\u6cd5 {0}.main(String args[]) \u542b\u6709\u4e0d\u6b63\u78ba\u7684\u4fee\u98fe\u5143
ProfilerServer_UnexpectedExceptionMsg=\u76ee\u6a19\u61c9\u7528\u7a0b\u5f0f\u4e1f\u51fa\u975e\u9810\u671f\u7684\u7570\u5e38\uff1a{0}
ProfilerServer_ElapsedTimeMsg=\u4e3b\u61c9\u7528\u7a0b\u5f0f\u57f7\u884c\u7dd2\u82b1\u8cbb\u6642\u9593\uff1a{0} \u6beb\u79d2\u3002
ProfilerServer_RemoteConnectionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\uff1a\u5df2\u5efa\u7acb\u8207\u5de5\u5177\u7684\u9060\u7aef\u9023\u7dda
ProfilerServer_LocalConnectionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\uff1a\u5df2\u5efa\u7acb\u8207\u5de5\u5177\u7684\u672c\u6a5f\u9023\u7dda
ProfilerServer_WaitingOnPortMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\uff1a\u6b63\u5728\u9023\u63a5\u57e0 {0} \u7b49\u5f85\u9023\u7dda (\u901a\u8a0a\u5354\u5b9a\u7248\u672c\uff1a{1})
ProfilerServer_WaitingOnPortTimeoutMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\uff1a\u6b63\u5728\u9023\u63a5\u57e0 {0} \u7b49\u5f85\u9023\u7dda\uff0c\u903e\u6642 {1} \u79d2 (\u901a\u8a0a\u5354\u5b9a\u7248\u672c\uff1a{2})
ProfilerServer_ConnectionExceptionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u5617\u8a66\u8207\u7528\u6236\u7aef\u5efa\u7acb\u9023\u7dda\u6642\u767c\u751f\u7570\u5e38\uff1a\n{0}
ProfilerServer_ConnectionTimeoutMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u5617\u8a66\u8207\u7528\u6236\u7aef\u5efa\u7acb\u9023\u7dda\u6642\u767c\u751f\u903e\u6642
ProfilerServer_AgentErrorMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a{0}
ProfilerServer_ConnectionInterruptedMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u8207\u7528\u6236\u7aef\u7684\u9023\u7dda\u4e2d\u65b7
ProfilerServer_CommandExceptionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u8655\u7406\u7528\u6236\u7aef\u6307\u4ee4\u6642\u767c\u751f\u7570\u5e38\uff1a\n{0}
ProfilerServer_ResponseExceptionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u5617\u8a66\u50b3\u9001\u56de\u61c9\u6216\u6307\u4ee4\u7d66\u7528\u6236\u7aef\u6642\u767c\u751f\u7570\u5e38\uff1a\n{0}
ProfilerServer_ConnectionClosedMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\uff1a\u8207\u4ee3\u7406\u7a0b\u5f0f\u7684\u9023\u7dda\u95dc\u9589
ProfilerServer_IncorrectAgentIdMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u8b66\u544a\uff1a\u6307\u5b9a\u4e86\u4e0d\u6b63\u78ba\u7684 agentId\uff1a{0}
ProfilerServer_ThreadExceptionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1aexecuteInSeparateThread() \u767c\u751f\u7570\u5e38
ProfilerServer_ThreadWaitExceptionMsg=\u6548\u80fd\u5206\u6790\u5de5\u5177\u4ee3\u7406\u7a0b\u5f0f\u932f\u8aa4\uff1a\u7b49\u5f85 SeparateCmdExecutionThread \u6642\u767c\u751f\u7570\u5e38
