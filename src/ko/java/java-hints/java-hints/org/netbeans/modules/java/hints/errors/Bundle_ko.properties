# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2010 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.


#
# This file contains localized strings used in this package.  The typical
# NetBeans pattern is to use one bundle per-package, called Bundle.properties;
# the openide class NbBundle supports this usage.
#
# Typically, fetch a resource as follows:
# NbBundle.getMessage (MyClass.class, "SOME_Key");
#
# Don't bother caching strings or worse, static references to resource bundles -
# this may seem like its faster, but it wastes memory and slows things down
# in the long run.
#


Add_semicolon=Add semicolon

Add_cast_to_X={0}\uc744(\ub97c) {1}(\uc73c)\ub85c \uce90\uc2a4\ud2b8

Add_throws_clause_for_X={0}\uc5d0 \ub300\ud574 throws \uc808 \ucd94\uac00

Add_import_for_X={0}\uc5d0 \ub300\ud574 \uac00\uc838\uc624\uae30 \ucd94\uac00

Change_to_import_X=Change to import {1}{0}
Implement_all_abstract_methods=\ubaa8\ub4e0 \ucd94\uc0c1 \uba54\uc18c\ub4dc \uad6c\ud604

MSG_CreateField=Create field {0} on {1}
MSG_CreateMethod=Create method {0} on {1}
MSG_CreateLocalVariable=\ub85c\uceec \ubcc0\uc218 {0} \uc0dd\uc131
MSG_CreateParameter=\ub9e4\uac1c \ubcc0\uc218 {0} \uc0dd\uc131


MSG_CreateGetter=getter \uc0dd\uc131
MSG_CreateSetter=setter \uc0dd\uc131
MSG_CreateGetterAndSetter=getter \uc640 setter \ub9cc\ub4e4\uae30

MSG_Implement=\ub204\ub77d \uba54\uc18c\ub4dc \uad6c\ud604

MSG_RenameConstant={0}\ub85c \uc774\ub984 \ubc14\uafb8\uae30

MSG_DeclareIn=Declare in {0}

MSG_GoToOverriding=Go to overriding method ...
MSG_GettingOverriding=Getting overriding methods
MSG_OverridingFound={0} overriding method(s) found
MSG_OverridingNotFound=No overriding methods found


MSG_ImplementAbstractMethod=Implement method in ...
MSG_GettingClassesWhereImplement=Getting subclasses
MSG_NoClassesWhereImplementFound=All known subclasses already implement this method
MSG_ClassesWhereImplementFound={0} subclass(es) found

MSG_Cancel=\ucde8\uc18c(C)

MSG_ChangeVariablesType=<html>Change type of {0} to {1}
MSG_ChangeVariablesTypeDisplayName=Change Type Fix
MSG_ChangeVariablesTypeDescription=This hint changes the type of a variable to the type of initializer expression.

#{0}: new class simple name
#{1}: target package name 
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
FIX_CreateClassInPackage=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" in package {1}
FIX_CreateClassAndCtorInPackage=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" with constructor "{0}({3})" in package {1}

#{0}: new class simple name
#{1}: target class name
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
FIX_CreateInnerClass=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" in {1}

LBL_Remove_Useless_Cast_Fix=\ubd88\ud544\uc694\ud55c Cast Fix \uc81c\uac70
DSC_Remove_Useless_Cast_Fix=\ubd88\ud544\uc694\ud55c Cast Fix \uc81c\uac70
LBL_FIX_Remove_redundant_cast=\uc911\ubcf5\ub41c cast \uc81c\uac70

LBL_Suppress_Waning=Suppress Warnings Fix
DSC_Suppress_Waning=Suppress Warnings Fix

LBL_Add_Cast=Add Cast Fix
DSC_Add_Cast=Add Cast Fix
#{0}: treeName
#{1}: type
LBL_FIX_Add_Cast={0}\uc744(\ub97c) {1}(\uc73c)\ub85c \uce90\uc2a4\ud2b8

LBL_Impl_Abstract_Methods=Implement All Abstract Methods Fix
DSC_Impl_Abstract_Methods=Add Cast Fix
#{0}: treeName
#{1}: type
LBL_FIX_Impl_Abstract_Methods=\ubaa8\ub4e0 \ucd94\uc0c1 \uba54\uc18c\ub4dc \uad6c\ud604
#{0}: name of the class
LBL_FIX_Make_Class_Abstract=Make class {0} abstract


LBL_Create_Field=Create Field Fix
DSC_Create_Field=Create Field Fix
#{0}: field name
#{1}: class name
LBL_FIX_Create_Field=Create Field {0} in {1}
LBL_FIX_Create_Enum_Constant=Create Enum Constant {0} in {1}
LBL_FIX_Create_Constructor=Create Constructor {0} in {1}
LBL_FIX_Create_Method=Create Method {0} in {1}
LBL_FIX_Create_Annotation_Element=Create Annotation Element {0} in {1}
#{0}: parameter name
LBL_FIX_Create_Parameter=Create Parameter {0}
#{0}: variable name
LBL_FIX_Create_Local_Variable=Create Local Variable {0}

#NotInitializedVariable
LBL_NotInitializedVariable=Use of uninitialized variable
LBL_NotInitializedVariable_fix=\ubcc0\uc218 {0} \ucd08\uae30\ud654

LBL_SurroundStatementWithTryCatch=\ubb38\uc7a5\uc744 try-catch \ub85c \uac10\uc2f8\uae30
LBL_SurroundBlockWithTryCatch=\ube14\ub85d\uc744 try-catch \ub85c \uac10\uc2f8\uae30
DN_MakeVariableFinal=\ud30c\uc774\ub110 \ubcc0\uc218 \ub9cc\ub4e4\uae30
DESC_MakeVariableFinal=\ud30c\uc774\ub110 \ubcc0\uc218 \ub9cc\ub4e4\uae30
FIX_MakeVariableFinal=\ud30c\uc774\ub110 {0} \ub9cc\ub4e4\uae30
FIX_AddThrowsClause={0}\uc5d0 \ub300\ud574 throws \uc808 \ucd94\uac00
DN_AddThrowsClauseAndSurround=Throws \uc808 \ucd94\uac00 \ubc0f try-catch \ub85c \uac10\uc2f8\uae30
DESC_AddThrowsClauseAndSurround=Throws \uc808 \ucd94\uac00 \ubc0f try-catch \ub85c \uac10\uc2f8\uae30
LocalVariableFixCustomizer.inPlace.text=\uc5ec\uae30\uc5d0 \ub85c\uceec \ubcc0\uc218 \ub9cc\ub4e4\uae30(&C)
SurroundWithTryCatchLog.jLabel1.text=Logging statement to use (in order):
SurroundWithTryCatchLog.exceptions.text=org.openide.util.Exceptions.printStackTrace \uc0ac\uc6a9(&o)
SurroundWithTryCatchLog.logger.text=java.util.logging.Logger \uc0ac\uc6a9(&j)
SurroundWithTryCatchLog.printStackTrace.text=Exception.printStackTrace \uc0ac\uc6a9(&E)
DESC_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=try-catch \ub85c \uac10\uc2f8\uae30 \uc624\ub958 \uc218\uc815\uc744 \uc704\ud55c \uc124\uc815
DN_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=try-catch\ub85c \ub458\ub7ec\uc2f8\uae30
DESC_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=\ub85c\uceec \ubcc0\uc218 \ub9cc\ub4e4\uae30 \uc624\ub958 \uc218\uc815\uc744 \uc704\ud55c \uc124\uc815
DN_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=\ub85c\uceec \ubcc0\uc218 \ub9cc\ub4e4\uae30
DESC_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=\ud544\ub4dc \ub9cc\ub4e4\uae30 \uc218\uc815\uc744 \uc704\ud55c \uc124\uc815
DN_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=\ud544\ub4dc \ub9cc\ub4e4\uae30

ERR_CannotApplyGuarded=Cannot apply fix in a guarded block

ERR_CannotApplyGuarded=Cannot apply fix in a guarded block
ACSN_Final_Checkbox=FinalCheckbox
FinalFieldsFromCtorCustomiser.finalCehckBox.AccessibleContext.accessibleDescription=Create Field Fix creates final fields checkbox
FinalFieldsFromCtorCustomiser.finalCheckBox.text=<html>Create <code>final</code> fields from inside constructor body</html>

DN_ConvertToDiamond=Convert to Diamond
FIX_ConvertToDiamond=Use diamond inference

ERR_ReadOnlyTargetFile=Target file ({0}) is read-only, cannot perform requested change.
DN_VarArgsCast=Resolve inexact varargs type warning
FIX_VarArgsCast={0}\uc744(\ub97c) {1}(\uc73c)\ub85c \uce90\uc2a4\ud2b8
SurroundWithTryCatchLog.rethrowRuntime.text=Use throw new RuntimeException(...)
SurroundWithTryCatchLog.rethrow.text=Use throw ...

