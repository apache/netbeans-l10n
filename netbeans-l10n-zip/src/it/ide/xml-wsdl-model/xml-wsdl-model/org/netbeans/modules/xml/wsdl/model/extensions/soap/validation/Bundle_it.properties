# Package specific ResourceBundle properties file

SOAPBindingValidator.Transport_URI_required=Una URI di trasporto \u00e8 richiesta nell'elemento <soap:binding>
SOAPBindingValidator.Unsupported_transport=L'elemento <soap:binding> supporta soltanto una URI di trasporto di http://schemas.xmlsoap.org/soap/http.  Nessun altro trasporto \u00e8 attualmente supportato.
SOAPBindingValidator.Unsupported_style_attribute=L'elemento <soap:binding> supporta un attributo "style" con un valore che pu\u00f2 essere sia "rpc" che "document".
SOAPBindingValidator.Only_one_binding_allowed=Solo un elemento <soap:binding> \u00e8 concesso per il collegamento.
SOAPOperationValidator.Unsupported_style_attribute=L'elemento <soap:operation> supporta un attributo "style" con un valore che pu\u00f2 essere sia "rpc" che "document".
SOAPBodyValidator.R2717_Literal_Binding=WS-I R2717: An rpc-literal binding MUST have the namespace attribute specified, the value of which MUST be an absolute URI, on contained soapbind:body elements.

SOAPBodyValidator.Unsupported_use_attribute=L'elemento <soap:body> supporta una attributo "use" con un valore che pu\u00f2 essere sia "literal" che "encoded".
SOAPBodyValidator.No_abstract_message=L'elemento <soap:body> \u00e8 definito per un messaggio che non esiste.
SOAPBodyValidator.Only_one_body_allowed=Solo un elemento <soap:body> \u00e8 concesso per messaggio di collegamento.
SOAPBodyValidator.Atleast_one_body_Required=Almeno un elemento <soap:body> \u00e8 richiesto per messaggi di input/ouput in una operazione soap.
SOAPBodyValidator.Part_already_in_use_by_elem=La parte ''{0}'' del messaggio {1} \u00e8 gi\u00e0 in uso dall''elemento {2}.

SOAPFaultValidator.Unsupported_use_attribute=L'elemento <soap:fault> supporta un attributo "use" con un valore che pu\u00f2 essere sia "literal" che "encoded".
SOAPFaultValidator.Missing_name=L'elemento <soap:fault> richiede il nome dell'attributo
SOAPFaultValidator.No_soap_fault_defined=Manca l'elemento <soap:fault> per l'errore di collegamento.
SOAPFaultValidator.Only_one_fault_allowed=Solo un elemento <soap:fault> \u00e8 ammesso per l'errore di collegamento.
SOAPFaultValidator.Fault_name_not_match=Il valore dell'attributo "name" dell'elemento <soap:fault> DEVE coincidere con il valore dell'attributo "name" dell'elemento genitore <wsdl:fault>. 

SOAPHeaderValidator.Missing_message=L'elemento <soap:header> richiede l'attributo "message"
SOAPHeaderValidator.Missing_part=The <soap:header> element requires the part attribute
SOAPHeaderValidator.Missing_use=L'elemento <soap:header> richiede l'attributo "use"
SOAPHeaderValidator.Unsupported_header_use_attribute=L'elemento <soap:header> supporta una attributo "use" con un valore che pu\u00f2 essere sia "literal" che "encoded".
SOAPHeaderValidator.Part_already_in_use_by_elem=La parte ''{0}'' del messaggio {1} \u00e8 gi\u00e0 in uso dall''elemento {2}.

SOAPHeaderFaultValidator.Missing_header_fault_message=L'elemento <soap:headerfault> richiede l'attributo "message"
SOAPHeaderFaultValidator.Missing_header_fault_part=The <soap:headerfault> element requires the part attribute
SOAPHeaderFaultValidator.Missing_header_fault_use=The <soap:headerfault> element requires the use attribute
SOAPHeaderFaultValidator.Unsupported_header_fault_use_attribute=The <soap:headerfault> element supports a use attribute with a value of either "literal" or "encoded".

SOAPAddressValidator.Missing_location=L'elemento <soap:address> richiede l'attributo "location"
SOAPAddressValidator.Unsupported_location_attribute=L'elemento <soap:address> deve avere un attributo "location" che sia una URL valida.
SOAPAddressValidator.Missing_SoapAddress=Una porta che specifica un collegamento soap deve specificare un indirizzo soap.
SOAPAddressValidator.Only_one_SoapAddress_allowed=Solo un elemento <soap:address> \u00e8 concesso per porta.
SOAPAddressValidator.Unsupported_Token_Format=L'elemento <soap:address> pu\u00f2 contenere token nel formato seguente: 1)${URL} 2)http(s)://${host}:${Http(s)DefaultPort}/${context}. O l'intera URL \u00e8 definita come un token oppure oppure i token possono esssere opzionalmente definiti per host, porta (solo ${HttpDefaultPort} o ${HttpsDefaultPort} sono ammessi), e contesto del servizio.

