# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

OpenIDE-Module-Display-Category=Analisi delle prestazioni
OpenIDE-Module-Name=Analizzatore delle prestazioni di Java (JFluid)
ProfilerClient_CannotOpenServerTempFileMsg=Cannot open temporary communication file created at the server side.\nName\: {0}
ProfilerClient_PerformingInstrumentationString=Sto eseguendo l'analisi, attendere prego...
ProfilerClient_InvalidCodeRegionMsg=Invalid location was specified for code region instrumentation.\nL'analisi non pu\u00f2 essere eseguita.
ProfilerClient_ClassNotFoundMsg=Could not find class {0} on the class path.\nL'analisi non pu\u00f2 essere eseguita.
ProfilerClient_OutOfMemoryMsg=Troppi dati raccolti - il profiler ha esaurito la memoria.\nCollected profiling data has been deleted and profiling resumed.\nTo avoid this error in future, increase the -Xmx value\n in the etc/netbeans.conf file in NetBeans installation\nor lower the amount of details in profiling settings.
ProfilerClient_IncorrectAgentVersionMsg=Warning\: The profiler agent you are connecting to is a different version than this profiler.\nPotresti andare incontro ad errori o comportamenti inattesi.
ProfilerClient_ErrorGettingCalibrationDataMsg=Error when retrieving saved calibration data for target JVM\:\n{0}
ProfilerClient_MustCalibrateFirstMsg=Since you did not run the Profiler on this machine or target JVM before,\ndeleted the saved calibration data, or this data is corrupt, profiling will STOP now.\n\nYou have to run the calibration command for your target JVM\nbefore running the Profiler with it again.\nThe obtained calibration data will be saved and re-used\non subsequent runs, so you will not see this message anymore.\n\nTo perform calibration, please invoke the\n\"Profile | Advanced Commands | Run Profiler Calibration\" command.\n\n
# HTML-formatted
ProfilerClient_MustCalibrateFirstShortMsg=<html><b>Dati di calibrazione mancanti.</b><br><br>Il profiling non pu\u00f2 essere avviato su questo JDK. Please perform<br>profiler calibration first and start profiling again.</html>
ProfilerClient_InstrumentationLimitReachedMsg=The limit of 64K instrumented methods has been reached\nThe profiler cannot instrument any more methods,\nso some of your code will run not instrumented and not profiled.\n\nTo avoid this problem, consider switching to the\n\"Part of the Application\" profiling mode.
ProfilerClient_CorruptedTargetCalibrationDataMsg=Problem with saved calibration data on target machine\:\n{0}
ProfilerClient_ConnectVmMsg=Sto connettendomi alla VM di destinazione...
ProfilerClient_TargetJvmErrorMsg=Target JVM terminated unexpectedly or does not respond.\nWhen tried to send a message to it, got an IOException\:\n{0}
ProfilerClient_UnsupportedJvmMsg=Since the application you are trying to profile runs on {0} VM not supported by the Profiler, profiling will STOP now.\n\nPlease use 1.5.0 VM (Update 4 and higher) or 1.6.0 VM starting from build 26.

TargetAppRunner_ClasspathSettingsIgnoredMsg=The value of '-classpath' specified through 'Profile/Edit Settings' menu will be ignored.\nDovresti specificare il classpath attraverso il menu 'File | Imposta classpath'.
TargetAppRunner_ErrorStartingJvmMsg=When starting target JVM, with command: {0}, caught an exception\: {1}
TargetAppRunner_CalibrationSummaryShortMsg=The calibration was successful.\nClick Show Details to see calibration results.\n\nWarning\: If your computer uses dynamic CPU frequency switching,\nplease disable it and rerun calibration as changing the CPU frequency\nduring profiling would produce inaccurate results.
TargetAppRunner_CalibrationSummaryDetailsMsg=Some of the obtained calibration data is as follows\:\n\n
TargetAppRunner_FailedEstablishConnMsg=La connessione via socket con la JVM di destinazione \u00e8 fallita.
TargetAppRunner_UnexpectedProblemStartingAppMsg=Unexpected problem when trying to start target application\:\n
TargetAppRunner_JvmTerminatedNotRespondString=La VM di destinazione \u00e8 terminata oppure non risponde
TargetAppRunner_InternalProblemString=Problema interno
TargetAppRunner_FailedStartAppCauseMsg=\u00c8 fallita l'esecuzione dell'applicazione di destinazione. Cause\:\n{0}
TargetAppRunner_CalibrationResultsMsg=Approximate time in one methodEntry()/methodExit() call pair\:\nWhen getting absolute timestamp only\: {0} microseconds\nWhen getting thread CPU timestamp only\: {1} microseconds\nWhen getting both timestamps\: {2} microseconds\n\nApproximate time in one methodEntry()/methodExit() call pair\nin sampled instrumentation mode\: {3} microseconds\n
TargetAppRunner_CalibrationErrorMsg=Errore nel trasferimento dati durante il settaggio dell'analisi
TargetAppRunner_InternalStatisticsOnlyMsg=This is internal statistics that should be used ONLY to estimate the efficiency\nof CPU profiling implementation. It is NOT for end-user results measurements.\n\n
TargetAppRunner_InstrMethodsCountMsg=Totali di {0} metodi strumentali/scambiati a caldo
TargetAppRunner_ClassLoadFirstInvCountMsg=Emessi {0} eventi class load, {1} eventi invocazione del primo metodo
TargetAppRunner_NonEmptyImgCountMsg=Emessi {0} risultati InstrumentMethodGroup non vuoti
TargetAppRunner_EmptyImgCountMsg=Emessi {0} risultati InstrumentMethodGroup vuoti
TargetAppRunner_SingleImgCountMsg=Emessi {0} risultati InstrumentMethodGroup singoli
TargetAppRunner_AvgMethodTimeMsg=Average time per method group hotswapping/instrumentation operation\: {0} ms.
TargetAppRunner_MinMethodTimeMsg=Minimum time per method group hotswapping/instrumentation operation\: {0} ms.
TargetAppRunner_MaxMethodTimeMsg=Maximum time per method group hotswapping/instrumentation operation\: {0} ms.
TargetAppRunner_TotalRunTimeMsg=Total run time\: {0} ms.
TargetAppRunner_InjInstrTimeMsg=Time spent in injected instrumentation code for displayed thread\: {0} ms ({1} %)
TargetAppRunner_TotalInstrHotSwapTimeMsg=Total time spent in instrumentation/hotswapping in server\: {0} ms ({1} %)
TargetAppRunner_ByteCodeCommTimeMsg=Time spent in bytecode analysis/rewriting and wire communication in client\: {0} ms ({1} %)
TargetAppRunner_ClientByteCodeTimeMsg=Time spent in bytecode analysis/rewriting in client\: {0} ms
TargetAppRunner_ClientDiskProcessTimeMsg=Time spent in disk I/O and results processing in client\: {0} ms ({1} %)
TargetAppRunner_ClientResultsProcessTimeMsg=Time spent in results processing in client\: {0} ms.
TargetAppRunner_PerformingCalibrationMsg=Sto eseguendo il settaggio, attendere prego...

