#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2010 Sun Microsystems, Inc.
#
DN_org.netbeans.modules.java.hints.perf.ManualArrayCopy=C\u00f2pia manual de la seq\u00fc\u00e8ncia d'elements
DESC_org.netbeans.modules.java.hints.perf.ManualArrayCopy=Mitjan\u00e7ant un bucle troba ocurr\u00e8ncies d'una c\u00f2pia manual de seq\u00fc\u00e8ncia d'elements
ERR_manual-array-copy-coll=Copia manual de la Seq\u00fc\u00e8ncia d'elements a la Col\u00b7lecci\u00f3
FIX_manual-array-copy-coll=Substituir amb Collection.add(Arrays.asList(...))
ERR_manual-array-copy=C\u00f2pia manual de la seq\u00fc\u00e8ncia d'elements
FIX_manual-array-copy=Substituir amb System.arraycopy

DN_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Usos de .size() == 0
DESC_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Utilitzar .isEmpty() o !.isEmpty() en lloc de .size() == 0 o .size() != 0 quan sigui possible.
ERR_SizeEqualsZero=Els usos de .size() == 0 es poden substituir amb .isEmpty()
ERR_SizeEqualsZeroNeg=Els usos de .size() != 0 es poden substituir amb !.isEmpty()
FIX_UseIsEmpty=Utilitzar .isEmpty() en lloc de .size() == 0
FIX_UseIsEmptyNeg=Utilitzar .isEmpty() en lloc de .size() != 0
CONF_LBL_SizeEqualsZero=Tamb\u00e9 comprovar per .size() != 0
CONF_TP_SizeEqualsZero=Aquesta indicaci\u00f3 tamb\u00e9 ha d'informar d'ocurr\u00e8ncies de ".size() != 0"?

DN_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=Constructor d'String
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=La utilitzaci\u00f3 del constructor java.lang.String generalment \u00e9s un\u00fatil.
ERR_StringConstructor=Invocaci\u00f3 del constructor d'String
FIX_StringConstructor=Treure invocaci\u00f3 del constructor String
CONF_LBL_SizeEqualsZero=Ignorar els constructors d'String que continguin invocacions d'String.substring
CONF_TP_SizeEqualsZero=Ignorar els constructors d'String que continguin invocacions de java.lang.String.substring

DN_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=String.equals("")
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=L'\u00fas d'String.equals("") pot substituir-se amb String.length() == 0 (en JDK5 i anteriors) o String.isEmpty() (en JDK6 i posteriors)
ERR_StringEqualsEmpty=String equals empty string
FIX_StringEqualsEmpty=Canviar a String.length() == 0
FIX_StringEqualsEmptyNeg=Canviar a String.length() != 0
FIX_StringEqualsEmpty16=Canviar a String.isEmpty()

DN_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Usos in\u00fatils d'StringBuffer
DESC_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Utilitzar StringBuilder en lloc d'StringBuffer quan sigui possible.
ERR_StringBuffer2Builder=StringBuffer pot substituir-se amb StringBuilder
FIX_StringBuffer2Builder=Substituir amb StringBuilder

DN_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=Length one String in String.indexOf
DESC_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=Length one String literal in String.indexOf can be replaced with a character literal
#the string:
ERR_LengthOneStringIndexOf=Length one string {0} in String.indexOf
FIX_LengthOneStringIndexOf=Replace with a character literal

DN_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=.getClass() es pot substituir amb .class
DESC_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=Finds instantions of a class directly followed by invocation of .getClass() on the newly constructed object
ERR_GetClassInsteadOfDotClass=La invocaci\u00f3 de .getClass() es pot substituir amb .class
FIX_GetClassInsteadOfDotClass=Substituir la invocaci\u00f3 de .getClass() amb .class

DN_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=String.intern() cridat en una constant
DESC_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=Invocations of String.intern() on compile-time constants are superfluous.
ERR_ConstantIntern=Invoking String.intern() of a compile-time constant is superfluos
FIX_ConstantIntern=Treure invocaci\u00f3 de String.intern()

DN_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=Creant nou boole\u00e0
DESC_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=La creaci\u00f3 d'un nou boole\u00e0 \u00e9s ineficient i no s'acostuma a utilitzar
ERR_NoBooleanConstructor=La creaci\u00f3 d'un nou boole\u00e0 \u00e9s ineficient
FIX_NoBooleanConstructorBoolean=Treure invocaci\u00f3 del constructor Boolean
FIX_NoBooleanConstructorString=Treure invocaci\u00f3 del constructor Boolean

DN_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Col\u00b7leccions sense una capacitat inicial
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Looks for instatiations of collections with missing initial capacity. \u00danicament es comproven les col\u00b7leccions resguardades amb una seq\u00fc\u00e8ncia d'elements.
ERR_InitialCapacity_collections=Instantianting collection without specified initial capacity

DN_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=StringBuilder without initial capacity
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=Looks for instantiations of StringBuilder or StringBuffer with missing initial capacity.
ERR_InitialCapacity_stringBuilder=Instantianting StringBuilder or StringBuffer without specified capacity

DN_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Set pot substituir-se amb EnumSet
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Troba les instanciacions de Set que poden substituir-se amb EnumSet
DN_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Map pot substituir-se amb EnumMap
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Finds instantiations of Maps that can be replaced with EnumMap
ERR_Tiny_enumSet=Set pot substituir-se amb java.util.EnumSet
ERR_Tiny_enumMap=Map pot substituir-se amb java.util.EnumMap
FIX_Tiny_enumMap=Substituir Map amb java.util.EnumMap

