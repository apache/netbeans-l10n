# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2010 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

#
# This bundle defines the localized name of the module, as will be shown
# in the options dialog and the setup wizard, and the category folder it will
# be found in, in the options dialog under System | Modules
#


# Braces
LBL_Braces_For=Els bucles For han d'utilitzar claus
LBL_Braces_While=Els bucles While han d'utilitzar claus
LBL_Braces_DoWhile=Els bucles Do-While han d'utilitzar claus
LBL_Braces_If=Les sent\u00e8ncies If-Else han d'utilitzar claus

DSC_Braces_For=Adverteix si un bucle <CODE>for</CODE> no t\u00e9<BR>envoltat el seu bloc amb les seves corresponents claus.<BR>
DSC_Braces_While=Els bucles While han d'utilitzar claus
DSC_Braces_DoWhile=Els bucles Do-While han d'utilitzar claus
DSC_Braces_If=Les sent\u00e8ncies If-Else han d'utilitzar claus

LBL_Braces_Fix=Afegir claus

# Assignment to itself
LBL_ATI=Assignaci\u00f3 a ell mateix
DSC_ATI=Assignaci\u00f3 a ell mateix

LBL_ATI_Remove_FIX=Treure l'assignaci\u00f3
LBL_ATI_Qualify_FIX=Qualificar amb aquest
LBL_ATI_NewParameter_FIX=Introduir variable
LBL_ATI_NewField_FIX=Introduir camp

# Imports
LBL_Imports_DELEGATE=Delegar - sense GUI
LBL_Imports_UNUSED=Import que no s'utilitza
LBL_Imports_DUPLICATE=Diverses importacions
LBL_Imports_SAME_PACKAGE=Importar del mateix paquet
LBL_Imports_DEFAULT_PACKAGE=Importar del paquet java.lang
LBL_Imports_EXCLUDED=Importar d'exclosos
LBL_Imports_STAR=Importaci\u00f3 estel\u00b7lar

DSC_Imports_DELAGATE=Delegar - sense GUI
DSC_Imports_UNUSED=Import que no s'utilitza
DSC_Imports_DUPLICATE=Diverses importacions
DSC_Imports_SAME_PACKAGE=Importar del mateix paquet
DSC_Imports_DEFAULT_PACKAGE=Importar del paquet java.lang
DSC_Imports_EXCLUDED=Importar del paquet o classe que estigui etiquetada com "Excluded" (exclo\u015b) al completador del codi
DSC_Imports_STAR=Importaci\u00f3 estel\u00b7lar

LBL_Imports_Fix_One_SAME_PACKAGE=Treure importaci\u00f3 del mateix paquet
LBL_Imports_Fix_All_SAME_PACKAGE=Treure totes les importacions del mateix paquet

LBL_Imports_Fix_One_DEFAULT_PACKAGE=Treure les importacions del paquet java.lang
LBL_Imports_Fix_All_DEFAULT_PACKAGE=Treure totes les importacions del paquet java.lang

# equals and hashcode
MSG_MissingHashCode=Generar hashCode() o equal que falten
HINT_MissingHashCode=Comprova si una classe que sobrecarrega el m\u00e8tode equals tamb\u00e9 sobrecarrega hashCode.
MSG_GenHashCode=Generar hashCode() que falta
MSG_GenEquals=Generar equals(Objecte) que falta

# export non accessible element
MSG_ExportNonAccessibleElement=Exportaci\u00f3 de tipus no-p\u00fablics a trav\u00e9s d'una API p\u00fablica
MSG_ExportNonAccessibleElementMakeNonVisible=Fer el paquet privat
HINT_ExportNonAccessibleElement=Comprova que en tots el m\u00e8todes p\u00fablics tant els tipus de retorn com els tipus dels par\u00e0metres, aix\u00ed com tamb\u00e9 els camps p\u00fablics estiguin a disposici\u00f3 p\u00fablica d'altres paquets. Tenir-ho privat o tipus privats de paquets en un paquet API \u00e9s in\u00fatil.


# Annotation as super interface
# {0} name of the annotation
LBL_AnnotationAsSuperInterface=No utilitzar l'anotaci\u00f3 com a super interf\u00edcie
HNT_AnnotationAsSuperInterface=Don't use Annotation {0} as super interface
DSC_AnnotationAsSuperInterface=Tot i que el compilador permet aquestes construccions, les anotacions no s'han d'utilitzar com a super interf\u00edcies.

# Utility class
MSG_UtilityClass=Utilitat de la classe sense constructores
HINT_UtilityClass=Troba les classes que contenen \u00fanicament elements est\u00e0tics i que encara es poden instanciar.
MSG_PrivateConstructor=Crear constructor privat
MSG_MakePrivate=Fer el constructor privat
MSG_PublicConstructor=Utilitat de la classe amb constructores visibles
HINT_PublicConstructor=Troba les classes que contenen \u00fanicament elements est\u00e0tics amb constructors p\u00fablics o protegits.

#Standard Javac warnings
LBL_Javac_DEPRECATED=Obsolet
LBL_Javac_UNCHECKED=Sense comprovar
LBL_Javac_FALLTHROUGH=Deterioraci\u00f3
LBL_Javac_SERIALIZATION=Serialitzaci\u00f3
LBL_Javac_UNNECESSARY_CAST=Modelitzaci\u00f3 innecess\u00e0ria
LBL_Javac_EMPTY_STATEMENT_AFTER_IF=Sent\u00e8ncia buida despr\u00e9s de If
LBL_Javac_OVERRIDES=Sobrecarrega
LBL_Javac_DIVISION_BY_ZERO=Divisi\u00f3 per zero
LBL_Javac_RAWTYPES=Tipus planers
LBL_Javac_CAN_USE_DIAMOND=Can Use Diamond

DSC_Javac_DEPRECATED=Advertir quan s'utilitza una API obsoleta.
DSC_Javac_UNCHECKED=Advertir quan les conversions no comprovades poden provocar ClassCastExceptions en temps d'execuci\u00f3.
DSC_Javac_FALLTHROUGH=Advertir quan un cas pot fallar passant al seg\u00fcent cas.
DSC_Javac_SERIALIZATION=Advertir quan una classe que implementa java.io.Serializable no declara serialVersionUID.
DSC_Javac_FINALLY=Advertir quan un bloc final interromp el flux d'un bloc try/catch.
DSC_Javac_UNNECESSARY_CAST=Advertir quan un objecte \u00e9s converteix de forma innecess\u00e0ria al mateix super-tipus.
DSC_Javac_EMPTY_STATEMENT_AFTER_IF=Sent\u00e8ncia buida despr\u00e9s de 'if'
DSC_Javac_OVERRIDES=Advertir quan la sobreescriptura d'un m\u00e8tode no est\u00e0 anotat amb @Overrides
DSC_Javac_DIVISION_BY_ZERO=Divisi\u00f3 per zero
DSC_Javac_RAWTYPES=Tipus planers
DSC_Javac_CAN_USE_DIAMOND=Warns about places where the diamond operator in JDK 7 can be used instead of explicit type parameters

# double check
MSG_DoubleCheck=Bloquejar la doble-comprovaci\u00f3
HINT_DoubleCheck=Searches for examples of double checked locking - e.g.when a variable is tested before as well as inside a synchronized block.
ERR_DoubleCheck=Bloquejar la doble-comprovaci\u00f3
FIX_DoubleCheck=Treure la sent\u00e8ncia condicional externa

LBL_IllegalInstanceOf=\u00das no perm\u00e8s de l'operador instanceOf (inst\u00e0ncia de)
DSC_IllegalInstanceOf=Show illegal use of instanceof on javax.lang.model.elements, javax.lang.model.type and com.sun.source.tree
MSG_IllegalInstanceOf=\u00das no perm\u00e8s de instanceOf (inst\u00e0ncia de)

#Wrong string comparison
LBL_WrongStringComparison=Comparar cadenes de text utilitzant == o b\u00e9 !=
DSC_WrongStringComparison=Comprova per usos de l'operador == o b\u00e9 != per les comparacions de cadenes de text.<BR>String comparisons should generally be done using the equals() method.

FIX_WrongStringComparison_NullCheck=Utilitzar equals() amb comprovaci\u00f3 de nuls
FIX_WrongStringComparison_TernaryNullCheck=Utilitzar equals() amb comprovaci\u00f3 de nuls (tern\u00e0ria)
FIX_WrongStringComparison_NoNullCheck=Use equals()
FIX_WrongStringComparison_ReverseOperands=Use equals() and reverse operands

WrongStringComparisonCustomizer.ternaryNullCheck.text=Comprovar per nuls amb l'operador condicional ternari
WrongStringComparisonCustomizer.stringLiteralFirst.text=Put String literals first when possible
ACSD_Ternary_Null_Check=Controls whether the fix uses a ternary conditional null check.
ACSD_String_Literals_First=Generates less code by avoiding a null check if one of the operands is a String literal.

#Empty statements
LBL_Empty_FOR_LOOP=Sent\u00e8ncia buida despr\u00e9s de 'for'
LBL_Empty_ENHANCED_FOR_LOOP=Sent\u00e8ncia buida despr\u00e9s de 'for'
LBL_Empty_WHILE_LOOP=Sent\u00e8ncia buida despr\u00e9s de 'while'
LBL_Empty_DO_WHILE_LOOP=Sent\u00e8ncia buida despr\u00e9s de 'do'
LBL_Empty_IF=Sent\u00e8ncia buida despr\u00e9s de 'if/else'
LBL_Empty_BLOCK=Sent\u00e8ncia buida

DSC_Empty_FOR_LOOP=Comprovaci\u00f3 de sent\u00e8ncies 'for' de la forma<BR><CODE>for(...);</CODE>.
DSC_Empty_WHILE_LOOP=Comprovaci\u00f3 de sent\u00e8ncies 'while' de la forma<BR><CODE>while(...);</CODE>.
DSC_Empty_DO_WHILE_LOOP=Comprovaci\u00f3 de sent\u00e8ncies 'do/while' de la forma<BR><CODE>do;<BR>while</CODE>.
DSC_Empty_IF=Comprovaci\u00f3 de sent\u00e8ncies 'if/else' de la forma<BR><CODE>if(...);<BR>else;</CODE>.
DSC_Empty_BLOCK=Checks for empty statements in blocks usually representedas superfluous semicolon.

MSG_HiddenField=El camp oculta un altre camp
HINT_HiddenField=Declaration of a field in a class can hide declaration of another field in superclasses. Encara que sigui possible, aquest no \u00e9s un bon estil de programaci\u00f3.
MSG_FixHiddenFiledText=Canviar el nom del camp
MSG_FixHiddenByVariableFiledText=Canviar el nom de la variable local
MSG_HiddenFieldByVar=La variable local oculta un camp
HINT_HiddenFieldByVar=La declaraci\u00f3 d'una variable en un m\u00e8tode pot ocultar la declaraci\u00f3 d'un camp declarat en la classe circumdant. Encara que sigui possible, aquest no \u00e9s un bon estil de programaci\u00f3.

LBL_EmptyCancel=Empty cancel() for cancelable tasks
DSC_EmptyCancel=Warn about empty cancel() methods for cancelable tasks
MSG_EmptyCancel=cancel() buit

#{0}:
#     0 - field
#     1 - method
#     2 - other (unknown)
#{1}: element simple name
MSG_StaticAccess=Accedint a {0,choice,0#camp|1#m\u00e8tode|1<element} est\u00e0tic {1}
MSG_StaticAccessName=Accedint a est\u00e0tic per mitj\u00e0 d'una refer\u00e8ncia
HINT_StaticAccess=Java language allows access to static fields thru instance variables, however this is often misleading and harder to read.
MSG_StaticAccessText=Substituir amb la refer\u00e8ncia a la classe

#ConvertAnonymousToInner:
HINT_ConvertAnonymousToInner=Conversi\u00f3 d'An\u00f2nim a Membre
DN_ConvertAnonymousToInner=Conversi\u00f3 d'An\u00f2nim a Membre
DESC_ConvertAnonymousToInner=Conversi\u00f3 d'An\u00f2nim a Membre
FIX_ConvertAnonymousToInner=Conversi\u00f3 d'An\u00f2nim a Membre

ERR_CaretNotInAnonymousInnerclass=Cursor no en la classe an\u00f2nima.
ERR_SelectionNotSupported=Selecci\u00f3 no suportada.

CTL_ConvertAnonymousToInner=Convertir &An\u00f2nim a Membre...

HINT_AddOverrideAnnotation=Afegir anotaci\u00f3 @Override
DN_AddOverrideAnnotation=Afegir anotaci\u00f3 @Override
DESC_AddOverrideAnnotation=Afegir anotaci\u00f3 @Override
FIX_AddOverrideAnnotation=Afegir anotaci\u00f3 @Override

HINT_AssignResultToVariable=Assignar a una nova variable el valor retornat
DN_AssignResultToVariable=Assignar a una nova variable el valor retornat
DESC_AssignResultToVariable=Assignar a una nova variable el valor retornat
FIX_AssignResultToVariable=Assignar a una nova variable el valor retornat

HINT_WrongPackage=Paquet incorrecte
DN_WrongPackage=Paquet dolent
DESC_WrongPackage=Paquet dolent
#{0}:
#    0: Remove package
#    1: Change package
#{1}: target package name
FIX_WrongPackageFix={0,choice,0#Treure la declaraci\u00f3 del paquet|1#Canviar la declaraci\u00f3 de {1}}
FIX_WrongPackageMove=Moure la classe a la carpeta corresponent
ERR_CannotMoveAlreadyExists=No es pot moure el font, la carpeta dest\u00ed ja existeix i no \u00e9s un directori.
ERR_CannotMove=No es pot moure el font.

HINT_SuspiciousNamesCombination=Combinaci\u00f3 de noms sospitosa
DN_SuspiciousNamesCombination=Combinaci\u00f3 de noms sospitosa
DESC_SuspiciousNamesCombination=Combinaci\u00f3 de noms sospitosa

ERR_EQUALS_NOT_CHECKING_TYPE=el m\u00e8tode equals() no comprova el tipus dels seu par\u00e0metre

DN_FieldUnusedParam=Assignar el par\u00e0metre del constructor a un camp
DSC_FieldUnusedParam=Assignar el par\u00e0metre del constructor a un camp
FIX_AssignToExisting=Assignar a un camp existent
FIX_CreateField=Crear camp
ERR_UnusedParameter=Par\u00e0metre que no s'utilitza


DSC_EqualsMethod=La implementaci\u00f3 del m\u00e8todes .equals no comproven el tipus del par\u00e0metre d'entrada
DN_EqualsMethod=El m\u00e8tode .equals no comprova el tipus
FIX_CreateDeclaration=Crear declaraci\u00f3
DN_DeclarationForInstanceof=Declaraci\u00f3 per a instanceof
ERR_DeclarationForInstanceof=Declaraci\u00f3 per a instanceof

DSC_SynchronizationOnNonFinalField=Sincronitzaci\u00f3 al camp no final
ERR_SynchronizationOnNonFinalField=Sincronitzaci\u00f3 al camp no final
DN_SynchronizationOnNonFinalField=Sincronitzaci\u00f3 al camp no final

HINT_SerialVersionUID=Afegir serialVersionUID predeterminat
HINT_SerialVersionUID_Generated=Afegir serialVersionUID generat

FieldForUnusedParamCustomizer.finalFields.text=<html>Els camps s\u00f3n <code>final</code></html>
ACSD_Final_Fields=Fer que els camps creats amb aquesta indicaci\u00f3 siguin finals.

DSC_StaticImport=Convertir el m\u00e8tode a importaci\u00f3 est\u00e0tica. Feedback to http://www.netbeans.org/issues/show_bug.cgi?id=89258
DN_StaticImport=Importacions est\u00e0tiques
ERR_StaticImport=Convert method to static import
HINT_StaticImport=Convert {0} to static import
HINT_StaticImport2=Add static import for {0}

DN_StringBuilderAppend=String concatenation in StringBuilder.append
DESC_StringBuilderAppend=Looks for string concatenation in the parameter of an invocation of the append method of StringBuilder or StringBuffer.
ERR_StringBuilderAppend=String concatenation in {0}.append
FIX_StringBuilderAppend=Use chain of .append methods instead of string concatenation

#ThisIsAnonymous hint
DN_org.netbeans.modules.java.hints.ThisInAnonymous=Synchronizing on this in anonymous class
DESC_org.netbeans.modules.java.hints.ThisInAnonymous=<html>Synchronizing on <tt>this</tt> in anonymous or local class is probably a result of refactoring and possibly a mistake
ERR_ThisInAnonymous=Synchronizing on this in anonymous class
ERR_ThisInAnonymousLocal=Synchronizing on this in local class
FIX_ThisInAnonymous=Synchronize on enclosing class

#LoggerNotStaticFinal hint
DN_org.netbeans.modules.java.hints.LoggerNotStaticFinal=Logger declaration is not static final
DESC_org.netbeans.modules.java.hints.LoggerNotStaticFinal=Each class should have one unique logger. Si es declara com un camp aquest hauria de ser static i final.
MSG_LoggerNotStaticFinal_checkLoggerDeclaration=La declaraci\u00f3 del camp {0} de l'enregistrador logger hauria de ser static i final
MSG_LoggerNotStaticFinal_checkLoggerDeclaration_fix=Fer que el camp {0} sigui static i final

#MultipleLoggers hint
DN_org.netbeans.modules.java.hints.MultipleLoggers=Multiple loggers
DESC_org.netbeans.modules.java.hints.MultipleLoggers=There are several loggers declared for a single class.
MSG_MultipleLoggers_checkMultipleLoggers=Multiple loggers {0} declared for {1} class

#NoLoggers hint
DN_org.netbeans.modules.java.hints.NoLoggers=No loggers
DESC_org.netbeans.modules.java.hints.NoLoggers=There is no logger declared for a class.
MSG_NoLoggers_checkNoLoggers=No logger declared for {0} class
MSG_NoLoggers_checkNoLoggers_Fix=Create logger field in {0} class

#ShiftOutOfRange hint
DN_org.netbeans.modules.java.hints.ShiftOutOfRange=Operaci\u00f3 de despla\u00e7ament fora del rang raonable
DESC_org.netbeans.modules.java.hints.ShiftOutOfRange=This inspection reports any instances of shift operations where the value shifted by is constant and outside of the reasonable range. Integer shift operations outside of the range 0..31 and long shift operations outside of therange 0..63 are reported. Shifting by negative or overly large values is almost certainly a coding error.
MSG_ShiftOutOfRange_int=Operaci\u00f3 de despla\u00e7ament fora del rang raonable 0..31
MSG_ShiftOutOfRange_long=Operaci\u00f3 de despla\u00e7ament fora del rang raonable 0..63

#ClassStructure hints
DN_org.netbeans.modules.java.hints.ClassStructure.finalClass=Final class
DESC_org.netbeans.modules.java.hints.ClassStructure.finalClass=Reports any instances of classes being declared final. Some coding standards discourage final classes.
MSG_FinalClass=Class {0} is declared final
FIX_RemoveFinalFromClass=Remove final modifier from the {0} class declaration
DN_org.netbeans.modules.java.hints.ClassStructure.finalMethod=Final method
DESC_org.netbeans.modules.java.hints.ClassStructure.finalMethod=Reports any instances of methods being declared final. Some coding standards discourage final classes.
MSG_FinalMethod=Method {0} is declared final
FIX_RemoveFinalFromMethod=Remove final modifier from the {0} method declaration
DN_org.netbeans.modules.java.hints.ClassStructure.finalPrivateMethod=Final private method
DESC_org.netbeans.modules.java.hints.ClassStructure.finalPrivateMethod=Reports any instances of methods being declared final and private. As private methods cannot be meaningfully overridden, declaring them final is redundant.
MSG_FinalPrivateMethod=Private method {0} is declared final
DN_org.netbeans.modules.java.hints.ClassStructure.finalStaticMethod=Final static method
DESC_org.netbeans.modules.java.hints.ClassStructure.finalStaticMethod=Reports any instances of methods being declared final and static. As static methods cannot be meaningfully overridden, declaring them final is redundant.
MSG_FinalStaticMethod=Static method {0} is declared final
DN_org.netbeans.modules.java.hints.ClassStructure.finalMethodInFinalClass=Final method in final class
DESC_org.netbeans.modules.java.hints.ClassStructure.finalMethodInFinalClass=Reports any instances of methods being declared final in classes that are declared final. This is unnecessary, and may be confusing.
MSG_FinalMethodInFinalClass=Method {0} is declared final in final class
DN_org.netbeans.modules.java.hints.ClassStructure.noopMethodInAbstractClass=No-op method in abstract class
DESC_org.netbeans.modules.java.hints.ClassStructure.noopMethodInAbstractClass=Reports any instances of no-op methods in abstract classes. It is usually a better design to make such methods abstract themselves, so that classes which inherit the methods will not forget to provide their own implementations.
MSG_NoopMethodInAbstractClass=No-op method {0} should be made abstract
DN_org.netbeans.modules.java.hints.ClassStructure.publicConstructorInNonPublicClass=Public constructor in non-public class
DESC_org.netbeans.modules.java.hints.ClassStructure.publicConstructorInNonPublicClass=Reports all constructors in non-public classes that are declared public.
MSG_PublicConstructorInNonPublicClass=Constructor is declared public in non-public class
FIX_RemovePublicFromConstructor=Remove public modifier from the constructor declaration
DN_org.netbeans.modules.java.hints.ClassStructure.protectedMemberInFinalClass=Protected member in final class
DESC_org.netbeans.modules.java.hints.ClassStructure.protectedMemberInFinalClass=Reports any instances of members being declared protected in classes that are declared final. Such members may be declared private or package-visible instead.
MSG_ProtectedMethodInFinalClass=Method {0} is declared protected in final class
MSG_ProtectedFieldInFinalClass=Field {0} is declared protected in final class
FIX_RemoveProtectedFromMethod=Remove protected modifier from the {0} method declaration
FIX_RemoveProtectedFromField=Remove protected modifier from the {0} field declaration
DN_org.netbeans.modules.java.hints.ClassStructure.markerInterface=Marker interface
DESC_org.netbeans.modules.java.hints.ClassStructure.markerInterface=Reports marker interfaces which have no methods or fields. Such interfaces may be confusing, and normally indicate a design failure. Interfaces which extend two or more other interfaces will not be reported.
MSG_MarkerInterface=Marker interface {0}
DN_org.netbeans.modules.java.hints.ClassStructure.classMayBeInterface=Class may be interface
DESC_org.netbeans.modules.java.hints.ClassStructure.classMayBeInterface=Reports any concrete or abstract classes which may be simplified to be interfaces. This occurs if the class has no superclass (other than Object), has no fields declared that are not static, final, and public, and has no methods declared that are not public and abstract, and no inner classes that cannot themselves be interfaces.
MSG_ClassMayBeInterface=Class {0} may be interface
FIX_ConvertClassToInterface=Convert class {0} to interface
DN_org.netbeans.modules.java.hints.ClassStructure.multipleTopLevelClassesInFile=Multiple top-level classes in file
DESC_org.netbeans.modules.java.hints.ClassStructure.multipleTopLevelClassesInFile=Reports any instances of multiple top-level classes in a single java file. Putting multiple top-level classes in a file can be confusing, and may degrade the usefulness of various software tools.
MSG_MultipleTopLevelClassesInFile=Multiple top-level classes in file

#AssignmentIssues hints
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToForLoopParam=Assignment to for-loop parameter
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToForLoopParam=Reports any instances of assignment to variable declared in a for statement in the body of that statement. It also reports any attempt to increment or decrement the variable. While occasionally intended, this construct can be extremely confusing, and is often the result of a typo.
MSG_AssignmentToForLoopParam=Assignment to for-loop parameter {0}
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToCatchBlockParameter=Assignment to catch-block parameter
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToCatchBlockParameter=Reports any instances of assignment to variable declared as a catch block parameter. While occasionally intended, this construct can be confusing.
MSG_AssignmentToCatchBlockParameter=Assignment to catch-block parameter {0}
DN_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToMethodParam=Assignment to method parameter
DESC_org.netbeans.modules.java.hints.AssignmentIssues.assignmentToMethodParam=Reports any instances of assignment to a variable declared as a method parameter. It also reports any attempt to increment or decrement the variable. While occasionally intended, this construct can be extremely confusing, and is often the result of a typo.
MSG_AssignmentToMethodParam=Assignment to method parameter {0}
DN_org.netbeans.modules.java.hints.AssignmentIssues.nestedAssignment=Assignaci\u00f3 incrustada
DESC_org.netbeans.modules.java.hints.AssignmentIssues.nestedAssignment=Informa de qualsevol expressi\u00f3 d'assignaci\u00f3 incrustada dins de qualsevol expressi\u00f3. While admirably terse, such expressions may be confusing, and violate the general design principle that a given construct should do precisely one thing.
MSG_NestedAssignment=Assignaci\u00f3 incrustada "{0}"
DN_org.netbeans.modules.java.hints.AssignmentIssues.incrementDecrementUsed=Value of increment/decrement expression used
DESC_org.netbeans.modules.java.hints.AssignmentIssues.incrementDecrementUsed=Informa de qualsevol expressi\u00f3 d'increment o de decrement incrustada dins de qualsevol expressi\u00f3. While admirably terse, such expressions may be confusing, and violate the general design principle that a given construct should do precisely one thing.
MSG_IncrementUsedAsExpression=Value of increment expression ''{0}'' is used
MSG_DecrementUsedAsExpression=Value of decrement expression ''{0}'' is used
FIX_IncrementUsedAsExpression=Extract increment expression ''{0}''
FIX_DecrementUsedAsExpression=Extract decrement expression ''{0}''
DN_org.netbeans.modules.java.hints.AssignmentIssues.replaceAssignWithOpAssign=Assignment replaceable with operator-assignment
DESC_org.netbeans.modules.java.hints.AssignmentIssues.replaceAssignWithOpAssign=Reports instances of assignment operations which can be replaced by operator-assignment. Code using operator-assignment may be clearer, and theoretically more performant.
MSG_ReplaceAssignmentWithOperatorAssignment=Assignment ''{0}'' is replaceable with operator-assignment
FIX_ReplaceAssignmentWithOperatorAssignment=Replace assignment ''{0}'' with operator-assignment

#IncompatibleMask hint
DN_org.netbeans.modules.java.hints.IncompatibleMask=M\u00e0scara incompatible
DESC_org.netbeans.modules.java.hints.IncompatibleMask=This inspection reports any instances of bitwise mask expressions which are guaranteed to evaluate to false. Expressions checked are of the form (var & constant1) == constant2 or (var | constant1) == constant2, where constant1and constant2 are incompatible bitmask constants.
MSG_IncompatibleMask=IncompatibleMask: {0} is always false

#OverridableMethodCallInConstructor hint
DN_org.netbeans.modules.java.hints.OverridableMethodCallInConstructor=Crida problem\u00e0tica en la constructora
DESC_org.netbeans.modules.java.hints.OverridableMethodCallInConstructor=Calling methods that can be overridden can be dangerous in the contructor because in the moment when the overridden method is called the object is not fully initialized.
MSG_org.netbeans.modules.java.hints.OverridableMethodCallInConstructor=Overridable method call in constructor
FIX_MakeMethod=Fer el m\u00e8tode {1} {0}
FIX_MakeClass=Fer la classe {1} {0}

#PointlessBitwiseExpression hint
DN_org.netbeans.modules.java.hints.PointlessBitwiseExpression=Pointless bitwise expression
DESC_org.netbeans.modules.java.hints.PointlessBitwiseExpression=This inspection reports any instances of pointless bitwise expressions. Such expressions include anding with zero, oring by zero, and shift by zero. Such expressions may be the result of automated refactorings not completely followed through to completion, and in any case are unlikely to be what the developer intended to do.
MSG_PointlessBitwiseExpression=Pointless bitwise expression
MSG_PointlessBitwiseExpression_fix=Zero constant should be removed

#LeakingThisInConstructor hint
DN_org.netbeans.modules.java.hints.LeakingThisInConstructor=Pas sospit\u00f3s de par\u00e0metre en la constructora
DESC_org.netbeans.modules.java.hints.LeakingThisInConstructor=Using this as parameter can be dangerous in the contructor because the object is not fully initialized.
MSG_org.netbeans.modules.java.hints.LeakingThisInConstructor=Filtrar-ho en la constructora

#ThreadDumpStack hint
DN_org.netbeans.modules.java.hints.ThreadDumpStack=Thread Dump Stack
DESC_org.netbeans.modules.java.hints.ThreadDumpStack=This inspection reports any uses Thread.dumpStack().These are often temporary debugging statements, and should probably be either removed from production code,or replaced by a more robust logging facility.
MSG_ThreadDumpStack=Thread Dump Stack
MSG_ThreadDumpStack_fix=S'hauria de treure Thread.dumpStack()

#PrintStackTrace hint
DN_org.netbeans.modules.java.hints.PrintStackTrace=Imprimir tra\u00e7a de la pila
DESC_org.netbeans.modules.java.hints.PrintStackTrace=Aquesta inspecci\u00f3 informa de qualsevol utilitzaci\u00f3 de Throwable.printStackTrace() sense arguments. These are often temporary debugging statements, and should probably be either removed from production code, or replaced by a more robust logging facility.
MSG_PrintStackTrace=Imprimir tra\u00e7a de la pila
MSG_PrintStackTrace_fix=S'hauria de treure Throwable.printStackTrace()

#SystemOut hint
DN_org.netbeans.modules.java.hints.SystemOut=System out / err
DESC_org.netbeans.modules.java.hints.SystemOut=This inspection reports any uses of System.out or System.err. These are often temporary debugging statements, and should probably be either removed from production code, or replaced by a more robust logging facility.
MSG_SystemOut=Uses of System.out or System.err are often temporary debugging statements.
MSG_SystemOut_fix=Treure la sent\u00e8ncia

#ObsoleteCollection hint
DN_org.netbeans.modules.java.hints.ObsoleteCollection=Col\u00b7lecci\u00f3 obsoleta
DESC_org.netbeans.modules.java.hints.ObsoleteCollection=Aquesta inspecci\u00f3 informa de qualsevol utilitzaci\u00f3 de java.util.Vector o de java.util.Hashtable. While still supported, these classes were made obsolete by the JDK1.2 collection classes, and should probably not be used in new development.
MSG_ObsoleteCollection=Col\u00b7lecci\u00f3 obsoleta

#StaticNonFinalUsedInInitialization hint
DN_org.netbeans.modules.java.hints.StaticNonFinalUsedInInitialization=Variable est\u00e0tica no-final utilitzada durant la inicialitzaci\u00f3
DESC_org.netbeans.modules.java.hints.StaticNonFinalUsedInInitialization=La utilitzaci\u00f3 de variables est\u00e0tiques no-finals poden ser perilloses en el codi d'inicialitzaci\u00f3, perqu\u00e8 els seus valors poden dependre de l'ordre de les sent\u00e8ncies d'inicialitzaci\u00f3
MSG_org.netbeans.modules.java.hints.StaticNonFinalUsedInInitialization=Utilitzaci\u00f3 de variable est\u00e0tica no-final utilitzada durant la inicialitzaci\u00f3

LBL_WarnHiddenStaticFields=Advertir quan un camp ocult sigui est\u00e0tic
TP_WarnHiddenStaticFields=Si aquesta indicaci\u00f3 ha d'advertir quan un camp ocult \u00e9s est\u00e0tic.

LBL_Javac_FINALLY=finally
