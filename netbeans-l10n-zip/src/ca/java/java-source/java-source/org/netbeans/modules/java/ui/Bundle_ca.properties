LBL_TabsAndIndents=Tabuladors i sagnat
LBL_CodeGeneration=Generaci\u00f3 de Codi
LBL_Alignment=Alineaci\u00f3
LBL_Braces=Claus
LBL_Wrapping=Envoltori
LBL_BlankLines=L\u00ednies en blanc
LBL_Spaces=Espaiat
LBL_Imports=Importacions

LBL_bp_SAME_LINE=Mateixa l\u00ednia
LBL_bp_NEW_LINE=Nova l\u00ednia
LBL_bp_NEW_LINE_HALF_INDENTED=Nova l\u00ednia semi-sagnada
LBL_bp_NEW_LINE_INDENTED= Nova l\u00ednia sagnada

LBL_bg_GENERATE=Generar
LBL_bg_LEAVE_ALONE=Deixar-ho estar
LBL_bg_ELIMINATE=Eliminar

LBL_wrp_WRAP_ALWAYS=Sempre
LBL_wrp_WRAP_IF_LONG=Si fos llarg
LBL_wrp_WRAP_NEVER=Mai

LBL_ExpandTabToSpaces=&Expandir tabuladors a espais
LBL_TabSize=Mida &tabulador:
LBL_IndentSize=M&ida sagnat:
LBL_ContinuationIndentSize=Mida &continuaci\u00f3 del sagnat:
LBL_LabelIndent=Sagnat d'etiqueta\:
LBL_AbsoluteLabelIndent=Sagnat &absolut d'etiquetes
LBL_IndentTopLevelClassMemberts=Sagnat dels membres de la classe de n&ivell-alt
LBL_AddLeadingStarInComment=Afegir &distintiu d'estrella al comentari
LBL_RightMargin=Marge &dret:

LBL_Naming=Naming\:
LBL_PreferLongerNames=Prefer Longer Names
LBL_Prefix=Prefix
LBL_Suffix=Suffix
LBL_Field=Field\:
LBL_StaticField=Static Field\:
LBL_Parameter=Parameter\:
LBL_LocalVariable=Local Variable\:
LBL_Misc=Misc\:
LBL_QualifyFieldAccess=Qualify Field Access
LBL_UseIsForBooleanGetters=Use Is For Boolean Getters
LBL_AddOverrideAnnotation=Afegir anotaci\u00f3 sobrecarrega
LBL_FinalMofier=Final Modifier\:
LBL_ParametersFinal=Make Generated Parameters Final
LBL_LocalVariablesFinal=Make Generated Local variables Final
LBL_ImportOredering=Import Ordering\:
LBL_ImportUp=Moure amunt
LBL_ImportDown=Moure abaix
LBL_blBeforePackage=Abans del &paquet\:
LBL_blAfterPackage=Despr\u00e9s del p&aquet\:
LBL_blBeforeImports=Abans de les &importacions\:
LBL_blAfterImports=Despr\u00e9s de les importacions\:
LBL_blBeforeClass=Abans de la &classe\:
LBL_blAfterClass=Despr\u00e9s de la c&lasse\:
LBL_blAfterClassHeader=Despr\u00e9s de la cap\u00e7alera de la classe\:
LBL_blBeforeFields=Abans del camp\:
LBL_blAfterFields=D&espr\u00e9s del camp\:
LBL_blBeforeMethods=Abans del &m\u00e8tode\:
LBL_blAfterMethods=Despr\u00e9s del m\u00e8&tode\:

LBL_BeforeKeywords=Abans de les paraules clau
#LBL_spaceBeforeWhile="while"
#LBL_spaceBeforeElse="else"
#LBL_spaceBeforeCatch="catch"
#LBL_spaceBeforeFinally="finally"

LBL_BeforeParentheses=Abans dels par\u00e8ntesis
LBL_spaceBeforeMethodDeclParen=Declaraci\u00f3 de m\u00e8tode
LBL_spaceBeforeMethodCallParen=Crida m\u00e8tode
#LBL_spaceBeforeIfParen="if"
#LBL_spaceBeforeForParen="for"
#LBL_spaceBeforeWhileParen="while"
#LBL_spaceBeforeTryParen="try"
#LBL_spaceBeforeCatchParen="catch"
#LBL_spaceBeforeSwitchParen="switch"
#LBL_spaceBeforeSynchronizedParen="synchronized"
LBL_spaceBeforeAnnotationParen=Anotaci\u00f3 de par\u00e0metres

LBL_AroundOperators=Al voltant dels operadors
LBL_spaceAroundUnaryOps=Operadors unaris
LBL_spaceAroundBinaryOps=Operadors binaris
LBL_spaceAroundTernaryOps=Operadors ternaris
LBL_spaceAroundAssignOps=Operadors d'assignaci\u00f3

LBL_BeforeLeftBraces=Abans de deixar les claus
LBL_spaceBeforeClassDeclLeftBrace=Declaraci\u00f3 de classe
LBL_spaceBeforeMethodDeclLeftBrace=Declaraci\u00f3 de m\u00e8tode
#LBL_spaceBeforeIfLeftBrace="if"
#LBL_spaceBeforeElseLeftBrace="else"
#LBL_spaceBeforeWhileLeftBrace="while"
#LBL_spaceBeforeForLeftBrace="for"
#LBL_spaceBeforeDoLeftBrace="do"
#LBL_spaceBeforeSwitchLeftBrace="switch"
#LBL_spaceBeforeTryLeftBrace="try"
#LBL_spaceBeforeCatchLeftBrace="catch"
#LBL_spaceBeforeFinallyLeftBrace="finally"
#LBL_spaceBeforeSynchronizedLeftBrace="synchronized"
LBL_spaceBeforeStaticInitLeftBrace=Inicialitzaci\u00f3 est\u00e0tica
LBL_spaceBeforeArrayInitLeftBrace=Inicialitzaci\u00f3 de seq\u00fc\u00e8ncia d'elements

LBL_WithinParentheses=Dins dels par\u00e8ntesis
LBL_spaceWithinParens=Par\u00e8ntesis
LBL_spaceWithinMethodDeclParens=Declaraci\u00f3 de m\u00e8tode
LBL_spaceWithinMethodCallParens=Crida m\u00e8tode
#LBL_spaceWithinIfParens="if"
#LBL_spaceWithinForParens="for"
#LBL_spaceWithinWhileParens="while"
#LBL_spaceWithinSwitchParens="switch"
#LBL_spaceWithinTryParens="try"
#LBL_spaceWithinCatchParens="catch"
#LBL_spaceWithinSynchronizedParens="synchronized"
LBL_spaceWithinTypeCastParens=Modelitzaci\u00f3 de tipus
LBL_spaceWithinAnnotationParens=Anotaci\u00f3
LBL_spaceWithinBraces=Claus
LBL_spaceWithinArrayInitBrackets=Claud\u00e0tor Inicialitzaci\u00f3 seq. d'elements

LBL_Other=Altres
LBL_spaceBeforeComma=Abans de coma
LBL_spaceAfterComma=Despr\u00e9s de coma
LBL_spaceBeforeSemi=Abans de punt i coma
LBL_spaceAfterSemi=Despr\u00e9s de punt i coma
LBL_spaceBeforeColon=Abans de dos punts
LBL_spaceAfterColon=Despr\u00e9s de dos punts
LBL_spaceAfterTypeCast=Despr\u00e9s de la modelitzaci\u00f3 de tipus
LBL_wrp_extendsImplementsKeyword=Paraules &Extends/Implements\: 
LBL_wrp_extendsImplementsList=Llista d'E&xtends/Implements\:
LBL_wrp_methodParameters=&Par\u00e0metres m\u00e8tode\:
LBL_wrp_throwsKeyword=Paraula &Throws\:
LBL_wrp_throwsList=Llista de Th&rows\:
LBL_wrp_methodCallArgs=Arguments crida m\u00e8tode\:
LBL_wrp_annotationArgs=Anotaci\u00f3 d'arg&uments\:
LBL_wrp_chainedMethodCalls=Crides de m\u00e8todes encadenats\:
LBL_wrp_arrayInit=Inicialit&zaci\u00f3 seq\u00fc\u00e8ncia d'elements\:
LBL_wrp_tryResources=Try Re&sources\:
LBL_wrp_multiCatches=Dis&junctive Catch Types\:
LBL_wrp_for=&For\:
LBL_wrp_forStatement=Sent\u00e8ncia F&or\:
LBL_wrp_ifStatement=Sent\u00e8ncia &IF\:
LBL_wrp_whileStatement=Sent\u00e8ncia &While\:
LBL_wrp_doWhileStatement=Sent\u00e8ncia &Do...While\:
LBL_wrp_assert=&Assert\:
LBL_wrp_enumConstants=Constants d'enum\:
LBL_wrp_annotations=A&nnotations\:
LBL_wrp_binaryOps=Operadors &binaris\:
LBL_wrp_afeterBinaryOps=Envoltar despr\u00e9s d'operadors binaris
LBL_wrp_ternaryOps=Operadors ternaris\:
LBL_wrp_afterTernaryOps=Envoltar despr\u00e9s d'operadors ternaris
LBL_wrp_assignOps=Operadors d'assi&gnament\:

LBL_br_bracesPlacement=Ubicaci\u00f3 de claus
LBL_br_bracesGeneration=Generaci\u00f3 de claus
LBL_al_newLines=Noves l\u00ednies
LBL_al_multilineAlignment=Alineaci\u00f3 multi-l\u00ednia
LBL_bp_ClassDecl=Declaraci\u00f3 &classe\:
LBL_bp_MethodDecl=Declaraci\u00f3 &m\u00e8tode\:
LBL_bp_Other=Altr&es\:
LBL_bp_SpecialElseIf=Tractament "else if" e&special
#LBL_bg_If="&if"\:
#LBL_bg_For="&for"\:
#LBL_bg_While="&while"\:
#LBL_bg_DoWhile="&do ... while"\:
#LBL_nl_Else="&else"
#LBL_nl_While="w&hile"
#LBL_nl_Catch="c&atch"
#LBL_nl_Finally="finall&y"
LBL_nl_Modifiers=Despr\u00e9s de modificado&rs
LBL_am_MethodParams=&Par\u00e0metres m\u00e8tode
LBL_am_CallArgs=Arg&uments crida m\u00e8tode
LBL_am_AnnotationArgs=&Anotaci\u00f3 d'arguments
LBL_an_Implements=Llistat i&mplementa
LBL_am_Throws=Llistat de &Throws
LBL_am_Paren=Parentitzat
LBL_am_BinaryOp=Operadors &binaris
LBL_am_TernaryOp=Operadors ter&naris
LBL_am_Assign=Assi&gnament
LBL_am_For=&For
LBL_am_ArrayInit=Inicialit&zaci\u00f3 seq\u00fc\u00e8ncia d'elements
LBL_am_TryResources=Try Re&sources
LBL_am_MultiCatch=Dis&junctive Catch Types

LBL_IndentCasesFromSwitch=Sagnat de sent\u00e8ncies Case en &Switch

#SAMPLE_Default=public class ClassA {public int number = 1;private String text ="A";public ClassA() {}public void meth(String text, int number) {}}

#SAMPLE_TabsIndents=public class ClassA {public int number = 1;private String letters[] = new String[]{ "A", "B" };public int meth(String text, int number) {if ( text == null ) {text = "a";}else if (text.length() == 0) {text = "empty";}else {number++;}label:switch(number) {case 1\:return meth("text", 22);case 2\:return 20;default\:return -1;}} }

#SAMPLE_Align=@Anno(paramA="aValue", paramB="bValue")public class ClassA implements InterfaceA, InterfaceB {private String letters[] = new String[]{"A", "B"};public int meth(String text, int number) throws ExceptionA, ExceptionB {if ( text != null ) {try {meth( "Some text", text.length());} catch ( Throwable t ) {} finally {}} else {text = number == 0 ? "empty" : "nonempty";}do {number =\nnumber + 1;} while (number < 2);for( int i = 1; i < 100; i++ ) {number = (number +\ni) * 2;}}}

#SAMPLE_Braces=public class ClassA {private String letters[] = new String[]{"A", "B"};public int meth(String text, int number) {if ( text != null ) {try {meth( "Some text", text.length());} catch ( Throwable t ) {} finally {}} else {text = number == 0 ? "empty" : "nonempty";}do {number = number + 1;} while (number < 2);for( int i = 1; i < 100; i++ ) {number = number + i;}while(number > 0) {number--;}}}

#SAMPLE_Wrapping=@Anno(paramA="a Value", paramB="bValue")@Deprecated public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC {private static final String letters[] = new String[]{ "A", "B", "C", "D" };public int number = 1;public ClassA() {}public int method(String text, int number, Object object) throws ExceptionA, ExceptionB {assert nuber + text.length() < 20 : "message";if (number==13 && object instanceof Runnable )method( "Some text", 12, new Object());for( int i = 1; i < 100; i++ )System.out.println(i);while ( this.number < 2 && number != 3 )this.number++;do method1().method2().method3();while ( this.number < 2 && number != 3 );return number > 100 ? -1 : -2;}public enum Where {NORTH, EAST, SOUTH, WEST;}}


#SAMPLE_BlankLines=package org.netbeans.samples;import java.util.List;import java.util.Map;public class ClassA {public int i;public int j;public ClassA() {}public void methodA() {}public void methodB() {}public class innerClass {}public static interface innerInterface {}}

#SAMPLE_Spaces=@Anno(paramA="aValue", paramB="bValue")public class ClassA {public int number = 1;private String text ="A";static float[] floats = new float[3];protected double[] doubles = new double[]{3.67,40,2e-30};static {floats[0]=12.6f;}public ClassA() {}public int meth(String text, int number) {if (number==13) {return (int)System.currentTimeMillis();}else {}for( int i = 20; i < 100; i++) {synchronized(this) {while(i%13>5)meth( text + " ", number++);}}for(float f : floats)System.out.println(f);switch(number) {case 1\:do { out( (2+3)*this.number--); } while(this.number > 6);return 10;case 2\:try {toString();}catch ( IllegalStateException illegalStateException ) {illegalStateException.printStackTrace();}finally {return 20;}default\:return number > 100 ? -1 : -2;}} }



#nlFinallyCheckBox1.text="finall&y"


AN_Preview=Vista pr\u00e8via
AD_Preview=Vista pr\u00e8via
FmtTabsIndents.absoluteLabelIndentCheckBox.AccessibleContext.accessibleDescription=Indent Labels absolutely
FmtTabsIndents.addLeadingStarInCommentCheckBox.AccessibleContext.accessibleDescription=Comment lines starting with leading star
FmtTabsIndents.indentCasesFromSwitchCheckBox.AccessibleContext.accessibleDescription=Additional indent for case statements
FmtTabsIndents.indentTopLevelClassMembersCheckBox.AccessibleContext.accessibleDescription=Indent for top-level class members
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleDescription=Mida sagnat en espais
FmtTabsIndents.labelIndentField.AccessibleContext.accessibleDescription=Mida sagnat d'etiquetes en espais

