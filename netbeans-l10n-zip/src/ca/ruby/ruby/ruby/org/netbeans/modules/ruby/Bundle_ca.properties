OpenIDE-Module-Display-Category=Ruby
OpenIDE-Module-Name=Ruby Editing
Services/MIMEResolver/ruby-mime-resolver.xml=Fitxers Ruby
text/x-ruby=Ruby
text/x-ruby-string-double=Cadena de text entre cometes de Ruby
text/x-ruby-string-single=Ruby Strings
text/x-ruby-comment=Ruby Comments

ruby-reflow-paragraph=Re-formatar par\u00e0graf
editor-popup-ruby-reflow-paragraph=Re-formatar par\u00e0graf

NoRename=No es pot canviar el nom d'aquest s\u00edmbol; \u00fanicament es permeten par\u00e0metres i variables locals o din\u00e0miques.
NoRenameWithErrors=No es pot canviar el nom quan la font cont\u00e9 errors
UnexpectedError=Error sint\u00e0ctic, no s''esperava {0}
OptionsCategory_Name=Ruby
OptionsCategory_Title=Ruby
UnsafeIdentifierName=Only a-z, A-Z, digits and underscore are safe in Ruby names

## TEMPORARY -- this should be removed soon
# because the colors should be added dynamically from the infrastructure
ERROR=Error
CLASS_VAR=Variable classe
REGEXP_LITERAL=Expressi\u00f3 Regular
LINE_COMMENT=L\u00ednia de comentari
CONSTANT=Constant
INT_LITERAL=N\u00famero
IDENTIFIER=Identificador
keyword=Paraula clau
WHITESPACE=Espai en blanc
FLOAT_LITERAL=Floating Point Number
ANY_OPERATOR=Operador
INSTANCE_VAR=Inst\u00e0ncia
STRING_INVALID=Cadena de text no permesa
GLOBAL_VAR=Variable global
STRING_LITERAL=Cadena de text
DOUBLE_LITERAL=Double
BLOCK_COMMENT=Bloc de comentari
STRING_TEXT=Cadena de text
QUOTED_STRING_LITERAL=Cadena de text entre cometes
LONG_LITERAL=Long
STRING_ESCAPE=Cadena d'escapament
DOCUMENTATION=Documentaci\u00f3
COMMENT_TEXT=Comentari de text
COMMENT_TODO=Comentari de text TODO
COMMENT_RDOC=Comentari de tag RDoc
COMMENT_HTMLTAG=Comentari de tag HTML
COMMENT_LINK=Comentari d'enlla\u00e7
COMMENT_BOLD=Comentari en negreta
COMMENT_ITALIC=Comentari en cursiva
TYPE_SYMBOL=S\u00edmbol de tipus
REGEXP_TEXT=Expressi\u00f3 Regular
REGEXP_META=Car\u00e0cter meta expressi\u00f3 regular
REGEXP_INVALID=Expressi\u00f3 regular no permesa

#"Semantic" highlighting:
mod-unused=Element sense utilitzar
mod-abstract=Element abstracte
mod-field=Camp
mod-local-variable=Variable local
mod-parameter=Par\u00e0metre
mod-method=M\u00e8tode
mod-constructor=Constructora
mod-class=Classe
mod-interface=Interf\u00edcie
mod-annotation-type=Anotaci\u00f3
mod-enum=Enumeraci\u00f3
mod-deprecated=Element obsolet
mod-static=Membre est\u00e0tic
mod-private=Membre privat
mod-package-private=Membre privat del paquet
mod-protected=Membre protegit
mod-public=Membre p\u00fablic
mod-type-parameter-declaration=Par\u00e0metre del tipus
mod-type-parameter-use=Utilitzaci\u00f3 del par\u00e0metre del tipus
mod-undefined=Element sense definir
mark-occurrences=Marcatge d'ocurr\u00e8ncies
covered=Covered
uncovered=Not Covered
inferred=Inferred Covered

#ct_l==&gt;
#ct_jc=import Java class
#ct_do=do { |e| \u2026 }
#ct_module=module end
#ct_begin=begin rescue end
#ct_if=if \u2026 | end
#ct_ife=if \u2026 | else \u2026 | end
#ct_doc==begin/=end documentation

# TextMate snippets: Ruby.tmbundle
ct_hash=Add # =&gt; Marker
ct_colon=Hash Pair :key =&gt; "value"
#ct_Comp=include Comparable \u2026
#ct_Dir=Dir.glob("\u2026") { |file| \u2026 }
#ct_Enum=include Enumerable \u2026
#ct_File=File.foreach ("\u2026") { |line| \u2026 }
#ct_Forw-=extend Forwardable
#ct_Hash=Hash.new { |hash, key| hash[key] = \u2026 }
#ct_Md=Marshal.dump(\u2026, file)
#ct_Ml=Marshal.load(obj)
#ct_Pn-=PStore.new( \u2026 )
#ct_Yd-=YAML.dump(\u2026, file)
#ct_Yl-=YAML.load(file)
#ct_all=all? { |e| \u2026 }
#ct_am=alias_method \u2026
#ct_any=any? { |e| \u2026 }
#ct_app=application_code { \u2026 }
#ct_as=assert(\u2026)
#ct_ase=assert_equal(\u2026)
#ct_asid=assert_in_delta(\u2026)
#ct_asio=assert_instance_of(\u2026)
#ct_asko=assert_kind_of(\u2026)
#ct_asm=assert_match(\u2026)
#ct_asn=assert_nil(\u2026)
#ct_asne=assert_not_equal(\u2026)
#ct_asnm=assert_no_match(\u2026)
#ct_asnn=assert_not_nil(\u2026)
#ct_asnr=assert_nothing_raised(\u2026) { \u2026 }
#ct_asns=assert_not_same(\u2026)
#ct_asnt=assert_nothing_thrown { \u2026 }
#ct_aso=assert_operator(\u2026)
#ct_asr=assert_raise(\u2026) { \u2026 }
#ct_asrt=assert_respond_to(\u2026)
#ct_ass=assert_same(\u2026)
#ct_ast=assert_throws(\u2026) { \u2026 }
#ct_bm-=Benchmark.bmbm do \u2026 end
#ct_case=case \u2026 | end
#ct_cl=classify { |e| \u2026 }
#ct_cla=ClassName = Struct \u2026 do \u2026 end
#ct_clafn=class_from_name()
#ct_col=collect { |e| \u2026 }
#ct_dop=do \u2026 end
#ct_deec=deep_copy(\u2026)
#ct_def=def \u2026 | end
#ct_defd=def_delegator \u2026
#ct_defds=def_delegators \u2026
#ct_defmm=def method_missing \u2026 end
#ct_defs=def self \u2026 end
#ct_deft=def test_ \u2026 end
#ct_deli=delete_if { |e| \u2026 }
#ct_det=detect { |e| \u2026 }
#ct_ea=each { |e| \u2026 }
#ct_eab=each_byte { |byte| \u2026 }
#ct_eac-=each_char { |chr| \u2026 }
#ct_eai=each_index { |i| \u2026 }
#ct_eak=each_key { |key| \u2026 }
#ct_eal=each_line { |line| \u2026 }
#ct_eap=each_pair { |name, val| \u2026 }
#ct_eas-=each_slice(\u2026) { |group| \u2026 }
#ct_eav=each_value { |val| \u2026 }
#ct_eawi=each_with_index { |e, i| \u2026 }
#ct_elsif=elsif \u2026
#ct_end=__END__
#ct_fin=find { |e| \u2026 }
#ct_fina=find_all { |e| \u2026 }
#ct_fl=flunk(\u2026)
#ct_flao=flatten_once()
#ct_gre=grep(/pattern/) { |match| \u2026 }
#ct_loo=loop { \u2026 }
#ct_map=map { |e| \u2026 }
#ct_mapwi-=map_with_index { |e, i| \u2026 }
#ct_max=max { |a, b| \u2026 }
#ct_min=min { |a, b| \u2026 }
#ct_mod=module \u2026 ClassMethods \u2026 end
#ct_par=partition { |e| \u2026 }
#ct_patfh=path_from_here( \u2026 )
#ct_r=attr_reader \u2026
#ct_ran=randomize()
#ct_rb=#!/usr/bin/env ruby -wKU
#ct_rej=reject { |e| \u2026 }
#ct_rep=results.report(\u2026) { \u2026 }
#ct_req=require "\u2026"
#ct_reve=reverse_each { |e| \u2026 }
#ct_rw=attr_accessor \u2026
#ct_sca=scan(/\u2026/) { |match| \u2026 }
#ct_sel=select { |e| \u2026 }
#ct_sin=singleton_class()
#ct_sor=sort { |a, b| \u2026 }
#ct_sorb=sort_by { |e| \u2026 }
#ct_tc=class \u2026 &lt; Test::Unit::TestCase \u2026 end
#ct_ts=require "tc_\u2026" \u2026
#ct_uni=unix_filter { \u2026 }
#ct_unless=unless \u2026 | end
#ct_until=until \u2026 end
#ct_usai=usage_if()
#ct_usau=usage_unless()
#ct_w=attr_writer \u2026
#ct_when=when \u2026 | 
#ct_while=while \u2026 end
#ct_y=:yields:
#ct_zip=zip(enums) { |row| \u2026 }

# TextMate snippets from Ruby on Rails.tmbundle
#ct_art=assert_redirected_to
#ct_asre=assert_response
#ct_bt=belongs_to
#ct_flash=flash[\u2026 | ]
#ct_habtm=has_and_belongs_to_many
#ct_hm=has_many
#ct_ho=has_one
#ct_log=logger.debug
ct_mccc=Create Several Columns
ct_mcol=Afegir columna
#ct_mp=map(&amp;:sym_proc)
ct_mtab=Crear taula
#ct_ra=render (action)
#ct_ral=render (action, layout)
#ct_rcea=render_component (action)
#ct_rcec=render_component (controller)
#ct_rceca=render_component (controller, action)
#ct_rdb=RAILS_DEFAULT_LOGGER.debug
#ct_rea=redirect_to (action)
#ct_reai=redirect_to (action, id)
#ct_rec=redirect_to (controller)
#ct_reca=redirect_to (controller, action)
#ct_recai=redirect_to (controller, action, id)
#ct_rf=render (file)
#ct_rfu=render (file, use_full_path)
#ct_ri=render (inline)
#ct_ril=render (inline, locals)
#ct_rit=render (inline, type)
#ct_rl=render (layout)
#ct_rn=render (nothing)
#ct_rns=render (nothing, status)
#ct_rp=render (partial)
#ct_rpc=render (partial, collection)
#ct_rpl=render (partial, locals)
#ct_rpo=render (partial, object)
#ct_rps=render (partial, status)
#ct_rt=render (text)
#ct_rtl=render (text, layout)
#ct_rtlt=render (text, layout =&gt; true)
#ct_rts=render (text, status)
#ct_va=validates_associated
#ct_vaif=validates_associated if
#ct_vc=validates_confirmation_of
#ct_vcif=validates_confirmation_of if
#ct_ve=validates_exclusion_of
#ct_veif=validates_exclusion_of if
#ct_verify=verify \u2026 render
#ct_vl=validates_length_of
#ct_vp=validates_presence_of
#ct_vpif=validates_presence_of if
#ct_vu=validates_uniqueness_of
#ct_vuif=validates_uniqueness_of if
# Mime Type application/x-httpd-eruby
#ct_ft=form_tag
#ct_lia=link_to (action)
#ct_liai=link_to (action, id)
#ct_lic=link_to (controller)
#ct_lica=link_to (controller, action)
#ct_licai=link_to (controller, action, id)

DynamicMethod=This method is generated dynamically by Rails, and will search your model for matches of the given column. You can also search by combinations of columns by concatenating them with <code>_and_</code>.
NoCommentFound=Cap comentari trobat
#Documented=(documented)
#NoDoced=(:nodoc:)
RubyLib=Ruby Library
In=entrada
FileDeleted=No s'ha pogut trobar el fitxer Potser ha estat eliminat fora de l'IDE?\nYou can force an update of the index by removing the var/cache/gsf-index\ndirectory in your user directory.
# Displayed as a return type (in navigator etc) when a method has an unknown return type
RubyUnknownType=Desconegut
InferredType=Inferred type:
# used as a delimiter when displaying return types, e.g. String or Float 
Or=or

InstalledVersions=Installed version(s): {0}

SC_100=100 (Continue)
SC_100_DESC=The requestor should continue with the request. The server returns this code to indicate that it has received the first part of a request and is waiting for the rest.
SC_101=101 (Switching protocols)
SC_101_DESC=The requestor has asked the server to switch protocols and the server is acknowledging that it will do so.
SC_200=200 (amb \u00e8xit)
SC_200_DESC=El servidor ha processat amb \u00e8xit la petici\u00f3. Generally, this means that the server provided the requested page.
SC_201=201 (Created)
SC_201_DESC=La petici\u00f3 va tenir \u00e8xit i el servidor ha creat el nou recurs.
SC_202=202 (Accepted)
SC_202_DESC=The server has accepted the request, but hasn't yet processed it.
SC_203=203 (Non-authoritative information)
SC_203_DESC=El servidor ha processat amb \u00e8xit la petici\u00f3, per\u00f2 la seva informaci\u00f3 retornada pot venir des d'un altre origen.
SC_204=204 (No content)
SC_204_DESC=El servidor ha processat amb \u00e8xit la petici\u00f3, per\u00f2 no est\u00e0 retornant cap contingut.
SC_205=205 (Restablir contingut)
SC_205_DESC=El servidor ha processat amb \u00e8xit la petici\u00f3, per\u00f2 no est\u00e0 retornant cap contingut. Unlike a 204 response, this response requires that the requestor reset the document view (for instance, clear a form for new input).
SC_206=206 (Contingut parcial)
SC_206_DESC=El servidor ha processat amb \u00e8xit una petici\u00f3 GET parcial.
SC_300=300 (Multiple choices)
SC_300_DESC=The server has several actions available based on the request. The server may choose an action based on the requestor (user agent) or the server may present a list so the requestor can choose an action.
SC_301=301 (Moved permanently)
SC_301_DESC=The requested page has been permanently moved to a new location. When the server returns this response (as a response to a GET or HEAD request), it automatically forwards the requestor to the new location.
SC_302=302 (Moved temporarily)
SC_302_DESC=The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.
SC_303=303 (See other location)
SC_303_DESC=The server returns this code when the requestor should make a separate GET request to a different location to retrieve the response. For all requests other than a HEAD request, the server automatically forwards to the other location.
SC_304=304 (Not modified)
SC_304_DESC=If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.
SC_305=305 (Use proxy)
SC_305_DESC=The requestor can only access the requested page using a proxy. When the server returns this response, it also indicates the proxy that the requestor should use.
SC_307=307 (Temporary redirect)
SC_307_DESC=The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.
SC_400=400 (Bad request)
SC_400_DESC=The server didn't understand the syntax of the request.
SC_401=401 (Not authorized)
SC_401_DESC=The request requires authentication. The server might return this response for a page behind a login.
SC_403=403 (Forbidden)
SC_403_DESC=The server is refusing the request.
SC_404=404 (Not found)
SC_404_DESC=The server can't find the requested page. For instance, the server often returns this code if the request is for a page that doesn't exist on the server.
SC_405=405 (Method not allowed)
SC_405_DESC=The method specified in the request is not allowed.
SC_406=406 (Not acceptable)
SC_406_DESC=The requested page can't respond with the content characteristics requested.
SC_407=407 (Proxy authentication required)
SC_407_DESC=This status code is similar 401 (Not authorized); but specifies that the requestor has to authenticate using a proxy. When the server returns this response, it also indicates the proxy that the requestor should use.
SC_408=408 (Temps d'expiraci\u00f3 en la petici\u00f3)
SC_408_DESC=The server timed out waiting for the request.
SC_409=409 (Conflict)
SC_409_DESC=The server encountered a conflict fulfilling the request. The server must include information about the conflict in the response. The server might return this code in response to a PUT request that conflicts with an earlier request, along with a list of differences between the requests.
SC_410=410 (Gone)
SC_410_DESC=The server returns this response when the requested resource has been permanently removed. It is similar to a 404 (Not found) code, but is sometimes used in the place of a 404 for resources that used to exist but no longer do. If the resource has permanently moved, you should use a 301 to specify the resource's new location.
SC_411=411 (Length required)
SC_411_DESC=The server won't accept the request without a valid Content-Length header field.
SC_412=412 (Pre-condici\u00f3 sense \u00e8xit)
SC_412_DESC=The server doesn't meet one of the preconditions that the requestor put on the request.
SC_413=413 (Request entity too large)
SC_413_DESC=The server can't process the request because it is too large for the server to handle.
SC_414=414 (Requested URI is too long)
SC_414_DESC=The requested URI (typically, a URL) is too long for the server to process.
SC_415=415 (Unsupported media type)
SC_415_DESC=The request is in a format not support by the requested page.
SC_416=416 (Requested range not satisfiable)
SC_416_DESC=The server returns this status code if the request is for a range not available for the page.
SC_417=417 (Expectaci\u00f3 sense \u00e8xit)
SC_417_DESC=The server can't meet the requirements of the Expect request-header field.
SC_500=500 (Internal server error)
SC_500_DESC=The server encountered an error and can't fulfill the request.
SC_501=501 (Not implemented)
SC_501_DESC=The server doesn't have the functionality to fulfill the request. For instance, the server might return this code when it doesn't recognize the request method.
SC_502=502 (Bad gateway)
SC_502_DESC=The server was acting as a gateway or proxy and received an invalid response from the upstream server.
SC_503=503 (Service unavailable)
SC_503_DESC=The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state.
SC_504=504 (Timeout en la porta d'enlla\u00e7)
SC_504_DESC=The server was acting as a gateway or proxy and didn't receive a timely request from the upstream server.
SC_505=505 (HTTP version not supported)
SC_505_DESC=The server doesn't support the HTTP protocol version used in the request.

