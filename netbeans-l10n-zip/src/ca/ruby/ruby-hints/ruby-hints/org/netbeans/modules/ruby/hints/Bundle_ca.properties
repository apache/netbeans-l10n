# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2006 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

OpenIDE-Module-Display-Category=Ruby
OpenIDE-Module-Name=Indicacions de Ruby
OpenIDE-Module-Short-Description=Additional source code hints for Ruby
OpenIDE-Module-Long-Description=Additional source code hints for Ruby

EditorHints/org-netbeans-modules-ruby-hints.err=Errors de compilaci\u00f3 de Ruby

# Category descriptions in the Options Panel
csl-hints/text/x-ruby/hints/general=General
csl-hints/text/x-ruby/hints/rails=Rails
csl-hints/text/x-ruby/hints/ruby19=Problemes de la migraci\u00f3 de Ruby 1.9 

# BlockVarReuse
UnintentionalSideEffect=Block variable aliases local variable - Unintentional side effect?
UnintentionalSideEffectDesc=The block variable has the same name as a local variable, so it will reuse (and modify)the local variable which is sometimes not intended
ChangeBlockVarName=Rename the block variable
ChangeLocalVarName=Canviar el nom de la variable local

# RailsDeprecations
RailsDeprecation=Rails Deprecations
RailsDeprecationDesc=Identifica les construccions obsoletes de Rails; vegeu http://www.rubyonrails.org/deprecation
Rails3Deprecation=Rails 3 Deprecations
Rails3DeprecationDesc=Identifica les construccions obsoletes de Rails 3; vegeu http://guides.rails.info/3_0_release_notes.html
DeprecatedRailsField=Rails Deprecation: Use the {1} method instead of working with the {0} instance variable directly
DeprecatedRailsConstant=Rails Deprecation: Use the {1} method instead of working with the {0} constant directly
DeprecatedRailsMethodUse={0} obsolet en Rails, utilitzeu {1}

# ExpandSameLineDef
ExpandLine=Code block on single line
ExpandLineDesc=Code blocks on a single line can optionally be reformatted to span multiple lines
ExpandLineFix=Reformat {0} code block to span multiple lines


# NestedLocal
NestedLocal=Nested local variable
NestedLocalDesc=Detects local variable usages that are "nested" (such as in for loops) where the loop variable is being reused
NestedLocalName=Loop variable {0} already exists in scope and is being reused
ChangeInner=Rename the inner variable
ChangeOuter=Rename the outer variable

# ConvertBlockType
ConvertBlockType=Convert between {}-blocks and do/end blocks
ConvertBlockTypeDesc=Convert between {}-blocks and do/end blocks

ConvertBraceToDo=Convert {}-block to a do/end-block
ConvertBraceToDoMulti=Convert {}-block to a do/end-block, and expand to multiple lines
ConvertBraceToDoSingle=Convert {}-block to a do/end-block, and collapse to a single line
ConvertDoToBrace=Convert do/end-block to a {}-block
ConvertDoToBraceSingle=Convert do/end-block to a {}-block, and collapse to a single line
ConvertDoToBraceMulti=Convert do/end-block to a {}-block, and expand to multiple lines
ChangeBlockToMulti=Expand single-line block to multiple lines
ChangeBlockToSingle=Collapse multi-line block to a single line

# ConstantNames
ConstantNameWarning=Uppercase constant name check
ConstantNameWarningDesc=Check constant names to find CamelCase names rather than the preferred CONSTANT style
InvalidConstantName=Estil: Les constants tradicionalment utilitzen \u00fanicament lletres en min\u00fascules

# CamelCaseNames
CamelCaseNames=alerta de nom gep del camell
CamelCaseNamesDesc=Check method names to find CamelCase names instead of the preferred method_name style
InvalidMethodName=Estil: En nom dels m\u00e8todes tradicionalment utilitzen \u00fanicament lletres en min\u00fascules
InvalidLocalName=Estil: Les variables tradicionalment utilitzen \u00fanicament lletres en min\u00fascules
RenameTo=Canviar el nom a {0}
RenameVar=Canviar el nom...

# UnsafeIdentifierChars
UnsafeIdentifierChars=Check identifiers for unsafe characters
UnsafeIdentifierCharsDesc=Only a-z, A-Z, digits and underscore are safe in identifier names. Other international character can lead to runtime errors.
InvalidMultibyte=International chars: Only a-z, A-Z, digits and underscore are safe in identifier names

# FileExistenceChecker
#FileExistenceChecker=File existence checker
#FileExistenceCheckerDesc=Ensures that files referenced from Rails views, actions etc. actually exist
#MissingFile=The referenced file ({0}) does not exist

# RailsViews
FindActionViews=Find actions without corresponding view files
FindActionViewsDesc=Locates actions in Rails controller files that don't have a corresponding view file
MissingView=Controller action without corresponding view file
CreateView=Create view (open generator)

# AttributeIsLocal
AttributeIsLocal=Local variable assignment possibly intended to be accessing an attribute?
AttributeIsLocalDesc=Detects cases where a local variable assignment is referring to a local variable whose name is identical to an attribute on this class, which is a common source of errors.
FixSelf=Change assignment to self.{0} per a utilitzar atribut
FixRename=Rename local variable to avoid confusion
ShowAttribute=Go to the relevant attribute definition ({0})

# CommonSyntaxErrors
CommonSyntaxErrorsHint=Errors sint\u00e0ctics comuns
DontIndentDocs==begin/=end blocks cannot be indented
ReindentBegin=Move documentation block to the leftmost column

# AccidentalAssignment
AccidentalAssignment=Assignaci\u00f3 accidental? (Si x = y en comptes de x == y)
AccidentalAssignmentDesc=Detecta l'escenari on s'utilitza una assignaci\u00f3 com a expressi\u00f3 booleana en blocs condicionals if, utilitzats accidentalment. For example, \nx = 1\ny = 2\nputs "equal" if x = y\nwill always print "equal" because x = y assigns rather than just compares.
AccidentalAssignmentFix=Convertir assignacions a comparacions (canviar = a ==)

# ConvertConditionals
ConvertConditionals=Convert conditional statements to modifiers
ConvertConditionalsDesc=Convert statements of the form "if foo bar" to "bar if foo"
ConvertConditionalsFix=Change statement into a modifier

# ConvertIfToUnless
ConvertIfToUnless=Convert negative if statement to an unless statement
ConvertIfToUnlessDesc=Convert statements of the form "if !foo" to "unless foo"
ConvertIfToUnlessFix=Change {0} into an {1} statement and reverse condition logic

# RetryOutsideRescue
RetryOutsideRescue=Retry must be inside a rescue statement in Ruby 1.9
RetryOutsideRescueDesc=As of Ruby 1.9, "retry" is disallowed outside of "rescue" statements. Change this now to avoid Ruby 1.9 migration problems.
RetryOutsideRescueMsg=Warning: "retry" must be inside a "rescue" statement in Ruby 1.9

# Deprecations
Deprecation=Deprecations
DeprecationDesc=Identifica les construccions obsoletes
DeprecatedMethodUse={0} obsolet i hauria de substituir-se amb {1}
DeprecatedRequire=Biblioteca {0} obsoleta, substituiu-la amb{1}
DeprecationFix=Substituir {0} amb {1}
HELP_require_gem=As of RubyGems 1.0, "require_gem" is obsolete and should be replaced with "gem"
HELP_assert_raises="assert_raises" obsolet en Ruby 1.9, en lloc seu utilitzeu "assert_raise".
HELP_ftools=FileUtils contains all or nearly all the same functionality and more, and is a recommended option over ftools
ShowDeprecationHelp=Show more information about this deprecation

# ColonToThen
ColonToThen=Convertir : a then
ColonToThenDesc=As of Ruby 1.9, colons are not allowed in the when clause. Change this now to avoid Ruby 1.9 migration problems.\n\nIllegal in 1.9:\n<pre>case foo\nwhen 1  : puts 'one'\nend</pre>
ColonToThenGutter=Using : instead of "then" in a when clause is illegal in Ruby 1.9
ColonToThenFix=Substituir : amb "then"
ColonToThenFixSemi=Substituir : amb ;
ColonToThenFixNewline=Move the when body to a separate line

HashListConvert=Convertir {a,b} a {a=>b}
HashListConvertDesc=As of Ruby 1.9, you must use the {a=>b} rather than the {a,b} format for hashes.
HashListConvertFix=Convert hash to the => syntax
HashListConvertGutter=Convert the hash from list form to the => format required by Ruby 1.9

MisspellingsHint=Check for common misspellings in standard method names
MisspellingsHintDesc=Check for common misspellings in standard method names, e.g. "initialise" vs. "initialize"
Misspellings=Voleu dir {0} en lloc de {1}?

