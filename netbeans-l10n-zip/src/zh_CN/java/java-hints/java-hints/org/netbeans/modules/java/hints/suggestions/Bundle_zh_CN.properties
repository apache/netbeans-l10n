# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.
#
# Contributor(s):
#
# Portions Copyrighted 2010 Sun Microsystems, Inc.

DESC_addExplicitLambdaParameters=\u5c06 lambda \u8f6c\u6362\u4e3a\u4f7f\u7528\u663e\u5f0f\u53c2\u6570\u7c7b\u578b
DESC_expression2Return=\u5c06 lambda \u4e3b\u4f53\u8f6c\u6362\u4e3a\u4f7f\u7528\u5757\u800c\u4e0d\u662f\u8868\u8fbe\u5f0f
DESC_FlipOperands=\u8c03\u6362\u4e8c\u5143\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570
DESC_ImplementMethods=\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5\u3002
DESC_InvertIf=\u5c06\u53cd\u5411 if \u8bed\u53e5; \u5426\u5b9a\u6761\u4ef6\u5e76\u4ea4\u6362 then \u548c else \u90e8\u5206\u4e2d\u7684\u8bed\u53e5\u3002
DESC_InvertifShowWhenElseMissing=\u5373\u4f7f\u5728\u8bed\u53e5\u7f3a\u5c11 else \u90e8\u5206\u65f6\u4e5f\u663e\u793a\u5efa\u8bae\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u63d0\u793a\u53ef\u7528\u4e8e\u5e2e\u52a9\u91cd\u65b0\u7f16\u5199\u4ee3\u7801\u3002
DESC_JoinElseIf=\u5c06\u7c7b\u4f3c <code>if - else { if }</code> \u8fd9\u6837\u7684 case \u8f6c\u6362\u4e3a <code>if - else if</code>
DESC_lambda2Class=\u5c06 lambda \u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u533f\u540d\u5185\u90e8\u7c7b
DESC_lambda2MemberReference=\u5c06 lambda \u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u6210\u5458\u5f15\u7528
DESC_memberReference2Lambda=\u5c06\u6210\u5458\u5f15\u7528\u8f6c\u6362\u4e3a lambda \u8868\u8fbe\u5f0f
DESC_org.netbeans.modules.java.hints.suggestions.Move.moveInitialization=\u5c06\u5b57\u6bb5\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u79fb\u52a8\u5230\u6784\u9020\u51fd\u6570\u3002
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.extractIf=\u5c06\u5177\u6709\u590d\u6742\u6761\u4ef6\u7684 if \u8bed\u53e5 (\u5982 <code>if (cond1 || cond2) statement;</code>) \u62c6\u5206\u4e3a\u4e24\u4e2a if \u8bed\u53e5, \u5982 <code>if (cond1) statement; else if (cond2) statement;</code>\u3002
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.mergeIfs=\u5c06\u4e24\u4e2a\u5d4c\u5957 if \u8bed\u53e5 (\u5982 <code>if (cond1) if (cond2) statement;</code>) \u5408\u5e76\u4e3a\u4e00\u4e2a if \u8bed\u53e5, \u5982 <code>if (cond1 && cond2) statement;</code>\u3002
DESC_splitIfCondition=\u5c06\u6761\u4ef6\u4e3a || \u7684 if \u62c6\u5206\u6210\u4e24\u4e2a if
DESC_ToOrIf=\u5c06\u7c7b\u4f3c <code>if (cond1) statement; else if (cond2) statement;</code> \u8fd9\u6837\u7684 case \u8f6c\u6362\u4e3a <code>if (cond1 || cond2) statement;</code>
DN_addExplicitLambdaParameters=\u5c06 Lambda \u8f6c\u6362\u4e3a\u4f7f\u7528\u663e\u5f0f\u53c2\u6570\u7c7b\u578b
DN_expression2Return=\u5c06 Lambda \u4e3b\u4f53\u8f6c\u6362\u4e3a\u4f7f\u7528\u5757
DN_FlipOperands=\u8c03\u6362\u4e8c\u5143\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570
DN_ImplementMethods=\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5
DN_InvertIf=\u53cd\u5411 If
DN_JoinElseIf=\u5c06\u8fde\u7eed\u7684 if \u8fde\u63a5\u5230 if-else \u4e2d
DN_lambda2Class=\u5c06 Lambda \u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u533f\u540d\u5185\u90e8\u7c7b
DN_lambda2MemberReference=\u5c06 Lambda \u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u6210\u5458\u5f15\u7528
DN_memberReference2Lambda=\u5c06\u6210\u5458\u5f15\u7528\u8f6c\u6362\u4e3a Lambda \u8868\u8fbe\u5f0f
DN_org.netbeans.modules.java.hints.suggestions.Move.moveInitialization=\u5c06\u521d\u59cb\u5316\u79fb\u52a8\u5230\u6784\u9020\u51fd\u6570
DN_org.netbeans.modules.java.hints.suggestions.Tiny.extractIf=\u62c6\u5206 if \u8bed\u53e5\u6761\u4ef6
DN_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=\u8c03\u6362 .equals
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=\u5141\u8bb8\u8c03\u6362 .equals \u53c2\u6570\u548c\u8c03\u7528\u70b9
DN_org.netbeans.modules.java.hints.suggestions.Tiny.mergeIfs=\u5408\u5e76\u5d4c\u5957 if \u8bed\u53e5
DN_splitIfCondition=\u62c6\u5206 if \u6761\u4ef6
DN_ToOrIf=\u4f7f\u7528 || \u8fde\u63a5 if \u6761\u4ef6
DN_TooStrongCast=\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5f3a\u5ea6\u592a\u5927

ERR_AlreadyExtends=\u5efa\u8bae\u7684\u7c7b\u578b\u5df2\u662f\u539f\u59cb\u7c7b\u7684\u5b50\u7c7b
ERR_AlreadyImplements=\u5efa\u8bae\u7684\u7c7b\u578b\u5df2\u5b9e\u73b0\u539f\u59cb\u63a5\u53e3
# {0} - constant name
ERR_BadConstantName=\u5e38\u91cf\u540d\u79f0\u6ca1\u6709\u9075\u5faa\u547d\u540d\u7ea6\u5b9a: {0}
# {0} - maximum constant name length
ERR_ConstantNameMaxLength=\u5e38\u91cf\u540d\u79f0\u5fc5\u987b\u5c11\u4e8e {0} \u4e2a\u5b57\u7b26
# {0} - minimum constant name length
ERR_ConstantNameMinLength=\u5e38\u91cf\u540d\u79f0\u7684\u957f\u5ea6\u5e94\u81f3\u5c11\u4e3a {0} \u4e2a\u5b57\u7b26

ERR_ExtendsOther=\u5efa\u8bae\u7684\u7c7b\u578b\u5df2\u662f\u5176\u4ed6\u7c7b\u7684\u5b50\u7c7b
ERR_flipEquals=\u8c03\u6362 .equals

# {0} - the FQN of the type whose methods will be implemented
ERR_ImplementMethods=\u5b9e\u73b0{0}\u7684\u672a\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5
ERR_InvertIf=\u53cd\u5411 If

ERR_lambda2Class=\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u7c7b
ERR_lambda2MemberReference=\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u5f15\u7528



ERR_PackageNameNotValid=\u5305\u540d\u65e0\u6548
ERR_SameClass=\u5efa\u8bae\u7684\u7c7b\u578b\u4e0e\u8981\u521b\u5efa\u5b50\u7c7b\u578b\u7684\u7c7b\u578b\u76f8\u540c


ERR_TypeNameNotValid=\u7c7b\u578b\u540d\u79f0\u65e0\u6548
FIX_addExplicitLambdaParameters=\u4f7f\u7528\u663e\u5f0f\u53c2\u6570\u7c7b\u578b
# {0} - the new casted-to type; simple name
FIX_ChangeCastTo=\u5f3a\u5236\u8f6c\u6362\u4e3a{0}
FIX_ConvertIfsToSwitch=\u5c06 if \u8f6c\u6362\u4e3a switch \u8bed\u53e5
FIX_expression2Return=\u4f7f\u7528\u5757\u4f5c\u4e3a lambda \u4e3b\u4f53
FIX_flipEquals=\u8c03\u6362 .equals
DN_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=\u5c06\u6574\u578b\u5e38\u91cf\u8f6c\u6362\u4e3a\u5176\u4ed6\u57fa\u6570
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=\u5c06\u6574\u578b\u5e38\u91cf\u8f6c\u6362\u4e3a\u5176\u4ed6\u57fa\u6570
ERR_convertToDifferentBase=\u5c06\u6574\u578b\u5e38\u91cf\u8f6c\u6362\u4e3a\u5176\u4ed6\u57fa\u6570
FIX_convertToDifferentBase_16=\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u5e38\u91cf
FIX_convertToDifferentBase_10=\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u5e38\u91cf
FIX_convertToDifferentBase_8=\u8f6c\u6362\u4e3a\u516b\u8fdb\u5236\u5e38\u91cf
FIX_convertToDifferentBase_2=\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u5e38\u91cf

DN_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=\u5c55\u5f00\u589e\u5f3a\u7684 For \u5faa\u73af
DESC_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=\u5c55\u5f00\u589e\u5f3a\u7684 For \u5faa\u73af
ERR_ExpandEhancedForLoop=\u8f6c\u6362\u4e3a for (Iterator....) {}
FIX_ExpandEhancedForLoop=\u8f6c\u6362\u4e3a for (Iterator....) {}

DN_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=\u62c6\u5206\u58f0\u660e
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=\u5c06\u4f7f\u7528\u521d\u59cb\u5316\u7a0b\u5e8f\u7684\u58f0\u660e\u62c6\u5206\u4e3a\u58f0\u660e\u548c\u8d4b\u503c
# {0} - one of the following Java operands: ==, !=, *, +, &, |, ^, &&, ||
FIX_FlipOperands1=\u8c03\u6362 ''{0}'' \u7684\u64cd\u4f5c\u6570
# {0} - one of the following Java operands (source): <, >, >=, <=
# {1} - one of the following Java operands (target): >=, <=, <, >
FIX_FlipOperands2=\u5c06 ''{0}'' \u8c03\u6362\u4e3a ''{1}''
# {0} - one of the following Java operands: /, %, -, <<, >>, >>>
FIX_FlipOperands3=\u8c03\u6362 ''{0}'' \u7684\u64cd\u4f5c\u6570 (\u53ef\u80fd\u4f1a\u6539\u53d8\u8bed\u4e49)
# {0} - the FQN of the type whose methods will be implemented
FIX_ImplementSuperTypeMethods=\u5b9e\u73b0{0}\u7684\u672a\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5
FIX_InvertIf=\u53cd\u5411 If
FIX_JoinElseIf=\u5c06\u5d4c\u5957 if \u8fde\u63a5\u6210\u5c01\u95ed if
FIX_lambda2Class=\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b
FIX_lambda2MemberReference=\u4f7f\u7528\u6210\u5458\u5f15\u7528
FIX_memberReference2Lambda=\u4f7f\u7528 lambda \u8868\u8fbe\u5f0f
FIX_moveInitialization=\u5c06\u521d\u59cb\u5316\u7a0b\u5e8f\u79fb\u52a8\u5230\u6784\u9020\u51fd\u6570
FIX_org.netbeans.modules.java.hints.suggestions.Tiny.extractIf=\u5c06 if \u62c6\u5206\u6210\u4e24\u4e2a if
FIX_org.netbeans.modules.java.hints.suggestions.Tiny.mergeIfs=\u5408\u5e76\u5d4c\u5957 if
# {0} - the type
FIX_RemoveUnneededCast=\u5220\u9664\u5197\u4f59\u7684\u5f3a\u5236\u8f6c\u6362\u5230{0}
FIX_splitDeclaration=\u62c6\u5206\u4e3a\u58f0\u660e\u548c\u8d4b\u503c
ERR_splitDeclaration=\u53ef\u5c06\u58f0\u660e\u62c6\u5206\u4e3a\u58f0\u660e\u548c\u8d4b\u503c

DN_org.netbeans.modules.java.hints.suggestions.CreateSubclass=\u521b\u5efa\u5b50\u7c7b
DESC_org.netbeans.modules.java.hints.suggestions.CreateSubclass=\u521b\u5efa\u5b50\u7c7b
ERR_CreateSubclass=\u521b\u5efa\u5b50\u7c7b
FIX_CreateSubclass=\u521b\u5efa\u5b50\u7c7b
ERR_ImplementAbstractClass=\u5b9e\u73b0\u62bd\u8c61\u7c7b
FIX_ImplementAbstractClass=\u5b9e\u73b0\u62bd\u8c61\u7c7b
ERR_ImplementInterface=\u5b9e\u73b0\u63a5\u53e3
FIX_ImplementInterface=\u5b9e\u73b0\u63a5\u53e3
FIX_splitIfCondition=\u5c06 if \u62c6\u5206\u6210\u4e24\u4e2a if
FIX_ToOrIf=\u4f7f\u7528 || \u8fde\u63a5 if
# template for generated label names, must form a valid Java identifiers
# {0} - unique integer
LABEL_OuterGeneratedLabel=OUTER_{0}
# initial label for breaking out of the innermost loop
LABEL_OuterGeneratedLabelInitial=OUTER
LBL_ClassName=\u7c7b\u540d:
LBL_InvertIfShowWhenElseMissing=\u5728\u7f3a\u5c11 else \u5206\u652f\u65f6\u663e\u793a
LBL_PackageName=\u5305\u540d:
ERR_IncompatibleSupertype=\u6240\u9009\u7c7b{0}\u7684\u8d85\u7c7b\u578b\u4e0d\u517c\u5bb9

DN_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=\u5c06\u7f3a\u5c11\u7684 case \u586b\u5145\u5230 switch
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=\u5c06\u7f3a\u5c11\u7684 case \u6dfb\u52a0\u5230 switch \u8bed\u53e5\u3002\u9ed8\u8ba4\u5b50\u53e5\u6a21\u677f\u5e94\u5f53\u4e3a\u4e00\u4e2a Java \u8bed\u53e5, \u51fa\u73b0\u7684 $expression \u5c06\u66ff\u6362\u4e3a\u4f7f\u7528 switch \u8bed\u53e5\u7684\u8868\u8fbe\u5f0f\u3002
ERR_Tiny.fillSwitchDefault=\u7f3a\u5c11\u9ed8\u8ba4\u5b50\u53e5
ERR_Tiny.fillSwitchCasesAndDefault=\u4e00\u4e9b\u679a\u4e3e\u5e38\u91cf\u7f3a\u5c11 case \u5b50\u53e5, as \u662f\u9ed8\u8ba4\u5b50\u53e5
ERR_Tiny.fillSwitchCases=\u4e00\u4e9b\u679a\u4e3e\u5e38\u91cf\u7f3a\u5c11 case \u5b50\u53e5
FIX_Tiny.fillSwitchDefault=\u6dfb\u52a0\u7f3a\u5c11\u7684\u9ed8\u8ba4\u5b50\u53e5
FIX_Tiny.fillSwitchCasesAndDefault=\u6dfb\u52a0\u7f3a\u5c11\u7684 case \u5b50\u53e5\u548c\u9ed8\u8ba4\u5b50\u53e5
FIX_Tiny.fillSwitchCases=\u6dfb\u52a0\u7f3a\u5c11\u7684 case \u5b50\u53e5

FillSwitchCustomizer.generateDefault.text=\u5982\u679c\u7f3a\u5c11\u9ed8\u8ba4\u5b50\u53e5, \u8bf7\u751f\u6210\u8be5\u5b50\u53e5
FillSwitchCustomizer.jLabel1.text=\u6a21\u677f:
FillSwitchCustomizer.jLabel1.AccessibleContext.accessibleDescription=\u9ed8\u8ba4\u5b50\u53e5\u6a21\u677f


DESC_TooStrongCast=\u62a5\u544a\u8fc7\u4e8e\u4e25\u683c\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362, \u800c\u5f3a\u5236\u8f6c\u6362\u4e3a\u66f4\u4e00\u822c\u7684\u7c7b\u578b\u5bf9\u4e8e\u5b9e\u9645\u8868\u8fbe\u5f0f\u5df2\u8db3\u591f\u3002\u6709\u65f6, \u5b9e\u4f8b\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u4e00\u4e2a\u7279\u5b9a\u5b50\u7c7b\u578b, \u4f46\u88ab\u5f3a\u5236\u8f6c\u6362\u7684\u5b9e\u4f8b\u4e2d\u8c03\u7528\u7684\u65b9\u6cd5\u6216\u4f7f\u7528\u7684\u5b57\u6bb5\u5b9e\u9645\u4e0a\u662f\u7531\u67d0\u4e2a\u8d85\u7c7b\u578b\u5b9a\u4e49\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u5f3a\u5236\u8f6c\u6362\u4e3a\u8fc7\u4e8e\u5177\u4f53\u7684\u7c7b\u578b\u5c06\u5411\u4ee3\u7801\u5f15\u5165\u4e0d\u5fc5\u8981\u7684\u8026\u5408\u5e76\u5c06\u9650\u5236\u4ee3\u7801\u7684\u6269\u5c55\u6027\u3002<p/>\u6b64\u9879\u68c0\u67e5\u5c06\u5efa\u8bae\u4f7f\u7528\u6ee1\u8db3\u8868\u8fbe\u5f0f\u9700\u8981\u7684\u6700\u4e00\u822c\u7c7b\u578b\u3002

DN_ConvertIfToSwitch=\u4f7f\u7528 switch \u66ff\u6362 if \u94fe
DESC_ConvertIfToSwitch=\u6709\u65f6\u5019 <i>if</i> \u8bed\u53e5\u94fe\u63a5\u8d77\u6765\u6784\u6210\u4e86\u5bf9\u5e38\u91cf\u7684\u4e00\u7cfb\u5217 == \u6bd4\u8f83\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u4f7f\u7528 <i>switch</i>< \u8bed\u53e5\u7f16\u5199\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u4f1a\u66f4\u9ad8\u3002\u6b64\u63d0\u793a\u5efa\u8bae\u5728 <i>if</i> \u6570\u91cf\u8d85\u8fc7\u9608\u503c\u65f6\u8fdb\u884c\u66f4\u6539\u3002

OPT_ConvertIfToSwitch_Threshold=\u6700\u5c0f\u5206\u652f\u8ba1\u6570
DESC_ConvertIfToSwitch_Threshold=\u4ec5\u5728 if-else \u8bed\u53e5\u94fe\u5305\u542b\u81f3\u5c11\u8be5\u6570\u91cf\u7684\u5206\u652f\u65f6\u624d\u663e\u793a\u63d0\u793a

OPT_ConvertIfToSwitch_EmptyDefault=\u751f\u6210\u7a7a\u9ed8\u8ba4\u503c
DESC_ConvertIfToSwitch_EmptyDefault=\u5982\u679c\u9009\u4e2d, \u5373\u4f7f\u6ca1\u6709\u6700\u7ec8\u7684 `else'' \u63d0\u793a\u4e5f\u5c06\u751f\u6210\u7a7a\u9ed8\u8ba4\u503c

HINT_ConvertIfToSwitch=\u4f7f\u7528 switch \u66ff\u6362 if \u94fe

ConstantNameOptions.jLabel1.text=\u5339\u914d\u6a21\u5f0f:

ConstantNameOptions.immutableCheck.text=\u4ec5\u68c0\u67e5\u4e0d\u53ef\u53d8\u7684\u7c7b\u578b
ConstantNameOptions.jLabel3.text=\u6700\u5c0f\u957f\u5ea6:
ConstantNameOptions.jLabel4.text=\u6700\u5927\u503c:

DN_ConstantNameHint=\u5e38\u91cf\u547d\u540d\u7ea6\u5b9a
DESC_ConstantNameHint=\u786e\u4fdd\u5e38\u91cf\u540d\u79f0\u9075\u5faa\u4e86\u6240\u8ff0\u7684\u547d\u540d\u7ea6\u5b9a\u3002\u5e38\u91cf\u662f\u4e00\u4e2a<b>\u9759\u6001</b>\u7684<b>\u6700\u7ec8</b>\u5b57\u6bb5\u3002\u547d\u540d\u7ea6\u5b9a\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f, \u6807\u8bc6\u7b26\u7684\u6700\u5c0f\u548c\u6700\u5927\u957f\u5ea6\u5b9a\u4e49\u3002\u5982\u679c\u957f\u5ea6\u8bbe\u7f6e\u4e3a 0, \u5219\u5b8c\u5168\u4e0d\u5e94\u7528\u7ea6\u675f\u3002\u8bf7\u5c06\u5339\u914d\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32\u4ee5\u7981\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u3002<p/>\u5982\u679c\u9009\u4e2d\u4e86<i>\u4ec5\u68c0\u67e5\u4e0d\u53ef\u53d8\u7c7b\u578b</i>, \u5219\u53ea\u68c0\u67e5\u57fa\u672c\u548c\u4e0d\u53ef\u53d8\u503c\u3002\u4e0d\u53ef\u53d8\u503c\u5305\u62ec<b>\u7a7a\u503c</b>, \u96f6\u5927\u5c0f\u6570\u7ec4 (\u4efb\u610f\u7c7b\u578b), \u679a\u4e3e\u503c\u548c\u7279\u5b9a\u9884\u5b9a\u4e49\u7684 JDK \u7c7b, \u4f8b\u5982 <b>java.awt.Color</b> \u548c\u7c7b\u4f3c\u9879\u3002<p/>\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u7c7b\u6765\u6269\u5c55\u89c6\u4e3a\u4e0d\u53ef\u53d8\u503c\u7684\u7c7b\u578b\u5217\u8868\u3002
# {0} - string literal value
TEXT_ChainedIfContainsSameValues=\u6bd4\u8f83\u4e2d\u4f7f\u7528\u7684\u5e38\u91cf\u503c `{0}'' \u5728\u94fe\u63a5\u7684 if-else-if \u8bed\u53e5\u4e2d\u63d0\u524d\u51fa\u73b0\u3002\u6b64\u6761\u4ef6\u6c38\u4e0d\u6c42\u503c\u4e3a\u201c\u771f\u201d
# {0} - the current type simple name
# {1} - list of types that should be used 
TEXT_TooStrongCast=\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4e3a{0}\u7684\u5f3a\u5ea6\u592a\u5927\u3002\u5e94\u6539\u7528{1}
# {0} - the type name

# {0} - the preceding portion of list
# {1} - the type name
TEXT_TooStrongCastListLast={0}\u6216{1}
# {0} - the preceding portion of list
# {1} - the type name

# {0} - the type simple name
TEXT_UnnecessaryCast=\u4e0d\u5fc5\u8981\u7684\u8f6c\u6362\u5230{0}

