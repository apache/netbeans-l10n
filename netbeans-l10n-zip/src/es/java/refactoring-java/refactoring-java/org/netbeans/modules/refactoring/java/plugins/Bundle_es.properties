# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
# The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
# Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.

DSC_ElNotAvail=El elemento original que se est\u00e1 reestructurando no est\u00e1 disponible. Se ha suprimido o cambiado significativamente. No es posible recopilar los usos.
DSC_ElementNotResolved=No es posible reestructurar elementos sin resolver
ERR_ProjectNotOpened=No se puede refactorizar {0} esta definido fuera del proyecto abierto.

# --- SAFE DELETE REFACTORING ------------------------------------------------------
ERR_SafeDel=Hubo un error al eliminar <b>{0}</b>
LBL_ShowUsages=&Mostar usos...
ERR_ReferencesFound=Se encontraron referencias a los elementos seleccionados. Elimine todas las referencias a estos elementos para eliminar la clase de forma segura.
ERR_SafeDel_FromReference=La operaci\u00f3n de eliminaci\u00f3n segura no se puede invocar a partir de referencias de clase o de m\u00e9todo
ERR_SafeDel_InvalidType=La operaci\u00f3n de eliminaci\u00f3n segura s\u00f3lo puede ser invocada en un m\u00e9todo, campo o clase
ERR_OverridesAbstractMethod=El m\u00e9todo seleccionado no puede ser eliminado de forma segura ya que implementa un m\u00e9todo abstracto {0}. 

# --- EXTRACT INTERFACE REFACTORING ------------------------------------------------
TXT_ExtractInterface_CreateIfc=Crear la interfaz <b>{0}</b>.
TXT_ExtractInterface_Method=Crear la declaraci\u00f3n del m\u00e9todo <b>{0}</b> en la nueva interfaz.
TXT_ExtractInterface_MoveMethod=Mover el m\u00e9todo <b>{0}</b> a la nueva interfaz.
TXT_ExtractInterface_Field=Mover el campo <b>{0}</b> a la nueva interfaz.
TXT_ExtractInterface_Class=Mover la clase interna <b>{0}</b> a la nueva interfaz.
TXT_ExtractInterface_Implements=Mover <b>{0}</b> a la cla\u00fasula extends de la nueva interfaz.
TXT_ExtractInterface_AddImplements=Agregar <b>{0}</b> a la cla\u00fasula implements o extends.
ERR_ElementNotAvailable=No se puede resolver el elemento.
ERR_ExtractInterface_MembersNotAvailable=Nada que extraer.
ERR_ExtractInterface_WrongModifiers=El m\u00e9todo {0} debe ser p\u00fablico y no est\u00e1tico.
ERR_ExtractInterface_UnknownMember=No se puede extraer el miembro {0}.

# --- EXTRACT SUPER CLASS REFACTORING ------------------------------------------------
ERR_ExtractSC_MustBeClass=El tipo seleccionado debe ser una clase (no se puede ejecutar esta operaci\u00f3n en un tipo de interfaz, enumeraci\u00f3n o anotaci\u00f3n).
# Illegal member (0 = member name)
ERR_ExtractSC_IllegalMember=No se puede extraer el miembro "{0}" a una superclase. No pertenece al tipo de origen.
ERR_ExtractSuperClass_MembersNotAvailable=Nada que extraer.
ERR_ExtractSuperClass_UnknownMember=No se puede extraer el miembro {0}.
TXT_ExtractSC_CreateSC=Crear la clase <b>{0}</b>.
TXT_ExtractSC_Method=Crear la declaraci\u00f3n del m\u00e9todo <b>{0}</b> en la nueva superclase.
TXT_ExtractSC_Member=Mover <b>{0}</b> a la nueva superclase.
TXT_ExtractSC_AddExtends=Establecer <b>{0}</b> en la cl\u00e1usula extends.

# --- PULL UP REFACTORING ------------------------------------------------------
# *** Pre-check ***
# No supertype
ERR_PullUp_NoSuperTypes=No se puede ascender ning\u00fan miembro. El tipo seleccionado no tiene supertipos en los proyectos abiertos actualmente.
# No member
ERR_PullUp_NoMembers=El tipo seleccionado y sus supertipos no tienen miembros que puedan ascender.
# *** Fast parameters check
# No selected member
ERR_PullUp_NoMembersSelected=No hay miembros seleccionados que se puedan ascender.
# No target type selected
ERR_PullUp_NoTargetType=Ning\u00fan supertipo est\u00e1 seleccionado.
# *** Parameters check
# Illegal target type
ERR_PullUp_IllegalTargetType=El tipo de destino no es un supertipo del tipo de origen o el c\u00f3digo fuente del tipo de destino no est\u00e1 disponible.
# Illegal member (0 = member name)
ERR_PullUp_IllegalMember=No se puede ascender el miembro "{0}". No pertenece al tipo de origen o a uno de los supertipos del tipo de origen que funcionan como subtipos del tipo de destino.
# Member already exists in the target type (0 = member name)
ERR_PullUp_MemberAlreadyExists=El miembro "{0}" ya existe en el tipo destino.
# *** Refactoring element descriptions
# Add abstract method to the target type (0 = method name)
ERR_CannotPullupDuplicateMembers=No se pueden ascender dos miembros con la misma firma.
ERR_PullupNonPublicToInterface=Se est\u00e1 moviendo el miembro "{0}" a la interfaz, pero no es p\u00fablico.

TXT_PullUp_AddMethod=A\u00f1adir m\u00e9todo abstracto\: <b>{0}</b>
# Move member to the target type (0 = member name)
TXT_PullUp_Member=Mover <b>{0}</b> al tipo destino.

# --- PUSH DOWN REFACTORING ------------------------------------------------------
TXT_PushDown_Member=Copiar <b>{0}</b> al tipo <b>{1}</b>.
TXT_PushDown_Remove=Eliminar el elemento <b>{0}</b>.
TXT_PushDown_Abstract=Hacer abstracto al m\u00e9todo <b>{0}</b>.
TXT_PushDown_RelaxAccessModifier=Cambiar el modificador desde <b>{0}</b> a <b>{1}</b>.
LBL_PushDown_private=privado
LBL_PushDown_package_private=paquete privado
LBL_PushDown_protected=protegido
ERR_PushDown_InvalidSource=No puede resolver fuente seleccionada: "{0}" -> "{1}".
ERR_PushDOwn_NoSubtype=No se puede descender ning\u00fan miembro. El tipo seleccionado no tiene subtipos en los proyectos abiertos actualmente.
ERR_PushDown_NoMembers=El tipo seleccionado no tiene miembros que se puedan descender.
ERR_PushDown_NoMembersSelected=No hay miembros seleccionados que se puedan descender.
ERR_PushDown_AlreadyExists={0} ya existe en {1}.

# --- INNER TO OUTER REFACTORING ------------------------------------------------
ERR_InnerToOuter_MustBeInnerClass=El tipo seleccionado debe ser un tipo interno (no se puede ejecutar esta operaci\u00f3n en un tipo de nivel superior).
ERR_InnerToOuter_FieldNameClash=El campo con el nombre <b>{0}</b> ya existe en esta clase.
ERR_InnerToOuter_ClassNameClash=La clase interna con el nombre <b>{0}</b> ya existe en la clase de destino.
ERR_InnerToOuter_OuterUsed=La clase que se va a mover al nivel exterior utiliza miembros de su clase externa. Debe permitir a la operaci\u00f3n de reestructuraci\u00f3n crear una variable de instancia que establezca la referencia a la clase externa original.
ERR_InnerToOuter_InnerHidden=Uno de los supertipos de la clase de destino ya define una clase interna llamada <b>{0}</b>.
TXT_InnerToOuter_MoveToOuter=Convertir esta clase en una clase interna <b>{0}</b>.
TXT_InnerToOuter_MoveToTop=Convertir esta clase en clase de nivel superior.
TXT_InnerToOuter_Rename=Cambiar el nombre de esta clase a <b>{0}</b>.
TXT_InnerToOuter_AddReference=Agregar un nuevo campo de instancia denominado <b>{0}</b> apuntando a la clase externa original, actualiza los constructores de la clase.
TXT_InnerToOuter_AddConstructor=Agregar el constructor ya que el constructor predeterminado no estar\u00e1 disponible en la superclase.
TXT_InnerToOuter_AddConstructorInvocation=Agregar invocaci\u00f3n expl\u00edcita del constructor ya que el constructor predeterminado no estar\u00e1 disponible en la superclase.
TXT_InnerToOuter_RelaxAccessRights=Cambiar de privado a paquete privado.
ERR_InnerToOuter_UseDeclareField=No se puede reestructurar "{0}". Usar la opci\u00f3n "Declarar campo".
ERR_InnerToOuter_Anonymous=No se puede reestructurar clases an\u00f3nimas.
WRN_InnerToOuterRefToPrivate=Inner class is using private feature {0} which will not be accessible after refactoring

# --- USE SUPERTYPE REFACTORING ------------------------------------------------------
TXT_UseSuperType=Utilizar el supertipo de <b>{0}</b> donde sea posible
TXT_UseSuperTypeVariable=Cambiar el tipo de <b>{0}</b> a <b>{1}</b>
TXT_UseSuperTypeReturnType=Cambiar el tipo de retorno <b>{0}</b> a <b>{1}</b>
TXT_UseSuperTypeLocalVar=Cambiar el tipo de la(s) variable(s) local(es) <b>{0}</b> a <b>{1}</b>
TXT_UseSuperTypeProblem=El tipo {0} no es visible en el cuerpo de {1}
ERR_UseSuperType_InvalidElement=La opci\u00f3n de utilizar supertipos s\u00f3lo se puede invocar en tipos v\u00e1lidos
ERR_UseSuperTypeNoSuperType=Ning\u00fan supertipo seleccionado.

# --- COPY CLASS ---------------------------------------------------------------
TXT_CopyClassToPackage=Crear la nueva clase {0} en el paquete {1} como una copia de {2}

# rename error messages
ERR_RenameWrongType=No se puede cambiar el nombre de este tipo de objeto. Se debe seleccionar un paquete, m\u00e9todo, campo o clase Java.
ERR_Overrides=El m\u00e9todo sobreescribe o implementa m\u00e9todos en superclases/interfaces. Tambi\u00e9n se les cambiar\u00e1 el nombre.
ERR_Overrides_Fatal=Este m\u00e9todo sobrescribe o utiliza m\u00e9todos en superclases/interfaces; no es posible modificar su nombre.
ERR_Overrides_tree=El m\u00e9todo sobrescribe o utiliza un m\u00e9todo en  {0}. Este metodo tambi\u00e9n se sobrescribe o utiliza en  {1}. Si verdaderamente desea realizar esta operaci\u00f3n, inv\u00f3quelo en el m\u00e9todo en {2}.
ERR_IsOverridden=Hay m\u00e9todos en subclases o implementadores de {0} que sobrescriben o implementan este m\u00e9todo. Tambi\u00e9n se les cambiar\u00e1 el nombre.
ERR_WillBeOverridden=Tras el cambio de nombre, el m\u00e9todo original "{0}" en {1} quedar\u00e1 sobrescrito por el m\u00e9todo "{2}" en {3}.
ERR_WillBeOverridden_access=Tras el cambio de nombre, el m\u00e9todo original "{0}" en {1} quedar\u00e1 sobresceito por el m\u00e9todo "{2}" en {3} con menores privilegios de acceso.
ERR_WillBeOverridden_static=Tras el cambio de nombre, el m\u00e9todo {0} original "{1}" en {2} quedar\u00e1 sobresceito por el m\u00e9todo {3} "{4}" en {5}.
ERR_WillBeOverridden_final=Tras el cambio de nombre, el m\u00e9todo final original "{0}" en {1} quedar\u00e1 sobrescrito por el m\u00e9todo "{2}" en {3}.
ERR_WillOverride=Tras el cambio de nombre, el m\u00e9todo "{0}" en {1} sobrescribir\u00e1 el m\u00e9todo original "{2}" en {3}.
ERR_WillOverride_access=Tras el cambio de nombre, el m\u00e9todo {0} en {1} sobrescribir\u00e1 el m\u00e9todo original "{2}" en {3} con mayores privilegios de acceso.
ERR_WillOverride_static=Tras el cambio de nombre, el m\u00e9todo {0} "{1}" en {2} sobrescribir\u00e1 el m\u00e9todo {3} original "{4}" en {5}.
ERR_WillOverride_final=Tras el cambio de nombre, el m\u00e9todo "{0}" en {1} sobrescribir\u00e1 al m\u00e9todo final original "{2}" en {3}.
ERR_NameNotChanged=No se modific\u00f3 el nombre. No se realizar\u00f3n cambios.
ERR_InvalidIdentifier="{0}" no es un identificador Java v\u00e1lido.
ERR_InvalidPackage= "{0}" no es un identificador de paquete v\u00e1lido.
ERR_PackageExists=El paquete "{0}" ya existe.
ERR_InnerClassClash=No se puede cambiar el nombre. La clase interna  {0} ya existe en la clase  {1}.
ERR_ClassClash=No se puede cambiar el nombre. La clase  {0} ya existe en la carpeta {1}.
ERR_ClassPackageClash=No se puede cambiar el nombre. Ya existe la carpeta  {0} en {1}.
ERR_MethodClash=No se puede cambiar el nombre. Ya existe el metodo {0} con la misma signatura en la clase {1}.
ERR_FieldClash=No se puede cambiar el nombre. El campo {0} ya existe en la clase {1}.
ERR_LocVariableClash=No se puede cambiar el nombre. {0} ya est\u00e1 en uso.
ERR_Hides=El campo al que se le va a cambiar el nombre oculta un campo en {0}.
ERR_WillHide=El nuevo campo ocultar\u00e1 un campo en {0}.
ERR_NameNotSet=No se ha especificado el nombre.
ERR_CannotMoveIntoSamePackage=No es posible mover las clases al mismo paquete.
ERR_CannotRenameFile=No se puede cambiar el nombre del elemento en archivo de biblioteca: "{0}".
ERR_ResourceUnavailable=No se le puede cambiar el nombre al m\u00e9todo  "{0}". El archivo fuente  "{1}" no est\u00e1 disponible.
ERR_RenameNative=Intento de cambiar el nombre del m\u00e9todo nativo "{0}". Cambiar el nombre de un m\u00e9todo nativo puede provocar el error UnsatisfiedLinkError en tiempo de ejecuci\u00f3n.
ERR_CannotRefactorThis=No se puede reestructurar "{0}".

#Rename package
TXT_RenamePackage=Cambiar el nombre al archivo 

#where used error messages
ERR_WhereUsedWrongType=No es posible buscar usos de este tipo de objeto. Seleccione un elemento Java.

# move class/package error messages
ERR_TargetFolderNotSet=No se ha especificado un paquete de destino.
ERR_TargetFolderNotJavaPackage=Una carpeta de destino no es un paquete java.
ERR_SourceWithoutClass=El origen seleccionado no contiene clase alguna.
ERR_SourceWithMoreClasses=No puede mover una clase desde un archivo de origen que contenga varias clases de nivel superior.
ERR_AccessesPackagePrivateFeature=La clase "{0}" del mismo paquete utiliza la carater\u00edstica "{1}" de la clase que desea mover ("{2}").
ERR_AccessesPackagePrivateClass=La clase "{0}" del mismo paquete utiliza la clase {1} que desea mover ("{2}").
ERR_AccessesPackagePrivateConstructor=La clase "{0}" del mismo paquete utiliza el constructor {1} declarado en la clase que desea mover ("{2}").
ERR_AccessesPackagePrivateFeature2=La clase que desea mover ("{0}") utiliza la carater\u00edstica "{1}" de la clase "{2}" del mismo paquete.
ERR_AccessesPackagePrivateClass2=La clase que desea mover ("{0}") utiliza la clase {1} ("{2}") del mismo paquete.
ERR_AccessesPackagePrivateConstructor2=La clase que desea mover ("{0}") utiliza el constructor {1} declarado en la clase "{2}" del mismo paquete.
ERR_PackageIsReadOnly=El paquete "{0}" es de s\u00f3lo lectura.
ERR_ClassToMoveClashes=La clase "{0}" ya existe en el paquete de destino.
ERR_ClassToMoveInDefaultPackage=Despu\u00e9s del traslado, no ser\u00e1 posible importar clases en el paquete predeterminado original.
ERR_MovingClassToDefaultPackage=Si la clase se ha trasladado al paquete predeterminado, las clases de otros paquetes no podr\u00e1n importar la clase trasladada.
ERR_FileAlreadyExists=El archivo {0} ya existe en el paquete {1}.
ERR_PackageMovesToItself=Se ha seleccionado el paquete superior como de destino. No hay cambios que realizar.
ERR_CannotMovePackageToSubpackage=No se puede mover un paquete a uno de sus subpaquetes o dentro de s\u00ed mismo.
ERR_DefaultPackageCannotBeMoved=El paquete predeterminado no se puede mover.
ERR_CannotMoveFile=No se puede mover el archivo de la biblioteca: "{0}".
ERR_MissingProjectDeps=Hay referencias en el proyecto "{0}" hacia los archivos que se movieron, pero el proyecto fuente "{0}" no depende del proyecto destino "{1}". Los proyectos no requieren compilar.
ERR_ClasspathNotFound=No hay classpath definido para {0}.

# encapsulate field error messages
ERR_EncapsulateWrongType=No se puede encapsular este tipo de objeto. Se debe seleccionar un campo.
ERR_EncapsulateNoFields=No se encontr\u00f3 el campo en {0}.
ERR_EncapsulateInIntf=No se puede encapsular un campo de interfaz.
ERR_EncapsulateMethods=Los nombres de los m\u00e9todos get y set deben ser nombres v\u00e1lidos de m\u00e9todos.
ERR_EncapsulateMethodsAccess=La accesibilidad de los m\u00e9todos creados es privada pero algunos campos seleccionados son referenciados desde otros fuentes.
ERR_EncapsulateMethodsDefaultAccess=La reestructuraci\u00f3n debe modificar su c\u00f3digo a fin de que los m\u00e9todos creados tengan una accesibilidad predeterminada pero algunos campos seleccionados son referenciados desde otros fuentes.
ERR_EncapsulateInsideAssignment=No se puede sustituir {0} en {1} con un m\u00e9todo set vac\u00edo en {2}.
ERR_EncapsulateInsideConstructor=The accessibility of field {0} is private but it is referenced from constructor of class {1}.
ERR_EncapsulateWrongGetter=El m\u00e9todo get {0} ya existe pero con un tipo {1} de retorno err\u00f3neo.
ERR_EncapsulateWrongSetter=El m\u00e9todo set {0} ya existe pero con un tipo {1} de retorno err\u00f3neo.
ERR_EncapsulateNothingSelected=Nada que encapsular. Debe seleccionar alguna casilla de verificaci\u00f3n.

# change method signature error messages
ERR_MethodOverrides=El m\u00e9todo sobrescribe o implementa m\u00e9todos en superclases/interfaces.
ERR_MethodIsOverridden=Hay m\u00e9todos en subclases o implementadores de {0} que sobrescriben o implementan el m\u00e9todo.
ERR_HasVarArg=No se puede utilizar la opci\u00f3n de reestructuraci\u00f3n Cambiar par\u00e1metros del m\u00e9todo en m\u00e9todos con argumentos variables.
ERR_newpar=Debe proporcionar {0} a todos los par\u00e1metros nuevos.
ERR_parname=nombre del par\u00e1metro
ERR_partype=tipo de par\u00e1metro
ERR_pardefv=valores predeterminados
ERR_existingMethod=No es posible cambiar la signatura Ya existe el metodo {0} con la misma signatura en la clase {1}.
ERR_existingConstr=No es posible cambiar la signatura El constructor con la misma signatura ya existe en la clase {0}.
ERR_NoValues=Debe proporcionar valores a los par\u00e1metros nuevos.
ERR_DuplicateName=Duplicar nombre de par\u00e1metro ({0}).
ERR_NameAlreadyUsed=El nombre "{0}" ya se utiliza como nombre de variable local.
ERR_CannotChangeModifiers=No es posible cambiar los modificadores de un m\u00e9todo en la interfaz.
ERR_StrongAccMod=Ha cambiado el modificador de acceso a {0}. Algunas referencias no podr\u00e1n acceder al m\u00e9todo. \u00a1Las fuentes no se compilar\u00e1n despu\u00e9s de la reestructuraci\u00f3n!

ERR_ChangeParamsWrongType=No es posible cambiar los par\u00e1metros de este objeto. Se debe seleccionar un m\u00e9todo o el constructor.
MSG_NothingToFind=Debe seleccionar algo que buscar. Seleccione Buscar sintaxis, Buscar m\u00e9todos que sobrescriben o ambas.
ERR_CannotRefactorLibraryClass=No puede refactorizar biblioteca de clase "{0}".
ERR_MethodsInAnnotationsNotSupported=Los miembros @interface no deben tener par\u00e1metros.
ERR_CannnotRefactorLibrary=No se pueden cambiar los par\u00e1metros de "{0}" el cual sobrescribe un m\u00e9todo de una clase biblioteca.

ERR_VarargsFinalPosition=Los argumentos variables se pueden utilizar \u00fanicamente en la posici\u00f3n final de los argumentos.
ERR_FindUsagesArrayType=No se pueden buscar usos en []

