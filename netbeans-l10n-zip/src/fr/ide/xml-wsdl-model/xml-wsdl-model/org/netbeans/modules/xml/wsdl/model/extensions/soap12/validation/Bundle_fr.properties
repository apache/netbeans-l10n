# Package specific ResourceBundle properties file

SOAPBindingValidator.Transport_URI_required=Une URI de transport est requise pour un \u00e9l\u00e9ment <soap:binding>
SOAPBindingValidator.Unsupported_transport=L'\u00e9l\u00e9ment <soap:binding> ne prend en charge pour l'instant que http://schemas.xmlsoap.org/soap/http OU http://www.w3.org/2003/05/soap/bindings/HTTP/ comme URI de transport.  Aucun autre moyen de transport n'est pris en charge pour l'instant.
SOAPBindingValidator.Unsupported_style_attribute=L'\u00e9l\u00e9ment <soap:binding> prend en charge un attribut style qui peut avoir la valeur "rpc" ou "document".
SOAPBindingValidator.Only_one_binding_allowed=Un seul \u00e9l\u00e9ment <sop:binding> permis par binding.

SOAPOperationValidator.Unsupported_style_attribute=L'\u00e9l\u00e9ment <soap:operation> prend en charge un attribut "style" qui peut avoir la valeur "rpc" ou "document".

SOAPBodyValidator.Unsupported_use_attribute=L'\u00e9l\u00e9ment <soap:body> prend en charge un attribut "use" qui peut avoir la valeur "literal" ou "encoded".
SOAPBodyValidator.No_abstract_message=L'\u00e9l\u00e9ment <soap:body> est d\u00e9fini pour un message qui n'existe pas.
SOAPBodyValidator.Only_one_body_allowed=Un seul \u00e9l\u00e9ment <soap:body> permis par message de binding.
SOAPBodyValidator.Atleast_one_body_Required=Au moins un \u00e9l\u00e9ment <soap:body> est requis par message d'entr\u00e9e/sortie dans une op\u00e9ration soap.
SOAPBodyValidator.Part_already_in_use_by_elem=La partie ''{0}'' du message {1} est d\u00e9j\u00e0 utilis\u00e9e par l''\u00e9l\u00e9ment {2}.

SOAPFaultValidator.Unsupported_use_attribute=L'\u00e9l\u00e9ment <soap:fault> prend en charge un attribut "use" qui peut avoir la valeur "literal" ou "encoded".
SOAPFaultValidator.Missing_name=L'\u00e9l\u00e9ment <soap:fault> requiert l'attribut name.
SOAPFaultValidator.No_soap_fault_defined=El\u00e9ment <soap:fault> manquant pour la faute de binding.
SOAPFaultValidator.Only_one_fault_allowed=Un seul \u00e9l\u00e9ment <soap:fault> permis par faute de binding.
SOAPFaultValidator.Fault_name_not_match=La valeur de l'attribut "name" dans l'\u00e9l\u00e9ment <soap:fault> DOIT correspondre \u00e0 la valeur de l'attribut name dans son \u00e9l\u00e9ment <wsdl:fault> parent. 


SOAPHeaderValidator.Missing_message=L'\u00e9l\u00e9ment <soap:header> requiert l'attribut "message"
SOAPHeaderValidator.Missing_part=L'\u00e9l\u00e9ment <soap:header> requiert l'attribut "part"
SOAPHeaderValidator.Missing_use=L'\u00e9l\u00e9ment <soap:header> requiert l'attribut "use"
SOAPHeaderValidator.Unsupported_header_use_attribute=L'\u00e9l\u00e9ment <soap:header> prend en charge un attribut "use" dont les valeurs possibles sont "literal" et "encoded".
SOAPHeaderValidator.Part_already_in_use_by_elem=La partie ''{0}'' du message {1} est d\u00e9j\u00e0 utilis\u00e9e par l''\u00e9l\u00e9ment {2}.

SOAPHeaderFaultValidator.Missing_header_fault_message=L'\u00e9l\u00e9ment <soap:headerfault> requiert l'attribut "message"
SOAPHeaderFaultValidator.Missing_header_fault_part=L'\u00e9l\u00e9ment <soap:headerfault> requiert l'attribut "part"
SOAPHeaderFaultValidator.Missing_header_fault_use=L'\u00e9l\u00e9ment <soap:headerfault> requiert l'attribut "use"
SOAPHeaderFaultValidator.Unsupported_header_fault_use_attribute=L'\u00e9l\u00e9ment <soap:headerfault> prend en charge un attribut "use" dont les valeurs possibles sont "literal" et "encoded".

SOAPAddressValidator.Missing_location=L'\u00e9l\u00e9ment <soap:address> requiert l'attribut "location".
SOAPAddressValidator.Unsupported_location_attribute=L'\u00e9l\u00e9ment <soap:address> doit avoir un attribut "location" qui est un URL valide.
SOAPAddressValidator.Missing_SoapAddress=Un port qui sp\u00e9cifie un binding soap doit sp\u00e9cifier une adresse SOAP.
SOAPAddressValidator.Only_one_SoapAddress_allowed=Un seul \u00e9l\u00e9ment <soap:address> permis par port.
SOAPAddressValidator.Unsupported_Token_Format=L'\u00e9l\u00e9ment <soap:address> peut contenir des tokens dans les formats suivants: 1)${URL} 2)http(s)://${host}:${Http(s)DefaultPort}/${context}. Soit l'URL est d\u00e9finie dans sa totalit\u00e9 comme un token, soit des tokens peuvent \u00eatre d\u00e9finis en option pour host, port (seuls ${HttpDefaultPort} ou ${HttpsDefaultPort} sont autoris\u00e9s), et le service context.

