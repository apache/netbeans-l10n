# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
#
# Oracle and Java are registered trademarks of Oracle and/or its affiliates.
# Other names may be trademarks of their respective owners.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common
# Development and Distribution License("CDDL") (collectively, the
# "License"). You may not use this file except in compliance with the
# License. You can obtain a copy of the License at
# http://www.netbeans.org/cddl-gplv2.html
# or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
# specific language governing permissions and limitations under the
# License.  When distributing the software, include this License Header
# Notice in each file and include the License file at
# nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the GPL Version 2 section of the License file that
# accompanied this code. If applicable, add the following below the
# License Header, with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# Contributor(s):
#
#The Original Software is NetBeans. The Initial Developer of the Original
# Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
#Microsystems, Inc. All Rights Reserved.
#
# If you wish your version of this file to be governed by only the CDDL
# or only the GPL Version 2, indicate your decision by adding
# "[Contributor] elects to include this software in this distribution
# under the [CDDL or GPL Version 2] license." If you do not indicate a
# single choice of license, a recipient has the option to distribute
# your version of this file under either the CDDL, the GPL Version 2 or
# to extend the choice of license to its licensees as provided above.
# However, if you add GPL Version 2 code and therefore, elected the GPL
# Version 2 license, then the option applies only if the new code is
# made subject to such option by the copyright holder.


#
# This file contains localized strings used in this package.  The typical
# NetBeans pattern is to use one bundle per-package, called Bundle.properties;
# the openide class NbBundle supports this usage.
#
# Typically, fetch a resource as follows:
# NbBundle.getMessage (MyClass.class, "SOME_Key");
#
# Don't bother caching strings or worse, static references to resource bundles - 
# this may seem like its faster, but it wastes memory and slows things down
# in the long run.
#

ConsistentAccessType.desc=As classes JPA devem ter tipos de acesso consistentes para campos/propriedades
ConsistentAccessType.display.name=Verificar tipos de aceso para classes jpa
HasNoArgConstructor.desc=As classes JPA devem ter um construtor de argumentos p\u00fablico/protegido padr\u00e3o
HasNoArgConstructor.display.name=Construtor p\u00fablico/protegido padr\u00e3o
IdDefinedInHierarchy.desc=O Id \u00e9 necess\u00e1rio para entidades
IdDefinedInHierarchy.display.name=Verificar se a entidade tem uma chave prim\u00e1ria definida
JPAAnnotsOnlyOnAccesor.desc=As anota\u00e7\u00f5es JPA s\u00f3 podem ser aplicadas a m\u00e9todos getter
JPAAnnotsOnlyOnAccesor.display.name=Verificar anota\u00e7\u00f5es jpa em acessadores
JPQLValidation.desc=Fazer parsing e localizar erros em uma consulta jpql
JPQLValidation.display.name=Valida\u00e7\u00e3o de JPQL
LegalCombinationOfAnnotations.desc=Algumas anota\u00e7\u00f5es JPA n\u00e3o podem ser aplicadas no mesmo elemento ao mesmo tempo
LegalCombinationOfAnnotations.display.name=Verificar combina\u00e7\u00f5es de anota\u00e7\u00f5es jpa
MSG_NonPublicClassAsEntity=JPA: a classe deve ser p\u00fablica.
MSG_FinalClassAsEntity=A classe de entidade n\u00e3o pode ser final.
MSG_HasNoNoArgConstructor=A classe deve ter um construtor no-arg, p\u00fablico ou protegido.
MSG_NestedClassAsEntity=A classe de entidade deve ser uma classe de n\u00edvel superior.
MSG_NonSerializableClass=Uma classe de entidade ou IdClass deve implementar a interface java.io.Serializable.
MSG_InnerClassAsIdClass=Uma classe interna n\u00e3o pode ser usada como uma IdClass. Torne-a uma classe est\u00e1tica aninhada.
MSG_IdClassDoesNotOverrideEquals=A IdClass deve substituir o m\u00e9todo equals(Object o) e hashCode().
MSG_IdClassDoesNotOverrideHashCode=A IdClass n\u00e3o substitui o m\u00e9todo hashCode().
MSG_NoIdDefinedInHierarchy=N\u00e3o h\u00e1 ID definido para esta hierarquia da entidade.
MSG_MissingIdField=Os seguintes campos foram localizados somente na IdClass:[ {0} ]
MSG_MissingIdProperty=Os seguintes acessadores foram localizados somente na IdClass:[ {0} ]
Msg_NoIdClass=Existem m\u00faltiplos IDs nesta classe de entidade, mas nenhuma IdClass est\u00e1 definida.
MSG_ClassNamedWithJavaPersistenceQLKeyword=O nome da tabela de entidade \u00e9 uma palavra Java Persistence QL reservada.
MSG_InvalidPersistenceQLIdentifier=O nome da tabela de entidade n\u00e3o \u00e9 um identificador v\u00e1lido do Java Persistence QL.
MSG_ClassNamedWithReservedSQLKeyword=O nome da tabela de entidade \u00e9 uma palavra-chave reservada SQL-99.
MSG_IdClassUsedByNonEntity=Esta classe n\u00e3o pode utilizar IdClass porque n\u00e3o \u00e9 uma Entidade nem uma MappedSuperclass.
MSG_EntitySubclassHasIdClass=Uma subclasse da entidade n\u00e3o pode ter IdClass porque resultar\u00e1 em m\u00faltiplos IDs na hierarquia da entidade.
MSG_MissingPersistenceUnitHint=O projeto n\u00e3o cont\u00e9m uma unidade de persist\u00eancia
MSG_InconsistentAccessType=A classe deve usar um tipo de acesso consistente (um campo ou uma propriedade).
MSG_NonUniqueEntityName=Nome de entidade duplicado. A classe {0} est\u00e1 usando o mesmo nome.
MSG_IllegalAnnotationCombination=Combina\u00e7\u00e3o de anota\u00e7\u00f5es inv\u00e1lida: {0} e {1}
MSG_JPAAnnotsOnlyOnAccesor=Somente os m\u00e9todos getter de propriedade t\u00eam a permiss\u00e3o de conter anota\u00e7\u00f5es Java Persistence, como {0}.
MSG_QueriesProperlyDefined=As pesquisas nomeadas podem ser definidas apenas em uma classe de Entidade ou MappedSuperclass.
MSG_OnlyEntityOrMappedSuperclassCanUseIdClass=Apenas uma Entidade ou MappedSuperclass pode usar IdClass.
NoIdClassOnEntitySubclass.display.name=Verificar IdClass na sublasse da entidade
NonFinalClass.desc=As classes JPA n\u00e3o devem ser finais
NonFinalClass.display.name=Verificar se classe jpa n\u00e3o \u00e9 final
OnlyEntityOrMappedSuperclassCanUseIdClass.display.name=Verificar localiza\u00e7\u00e3o @IdClass
PersistenceUnitPresent.desc=Verificar se o projeto com o uso de jpa cont\u00e9m persistence.xml com unidade de persist\u00eancia
PersistenceUnitPresent.display.name=Presen\u00e7a de persistence.xml
PublicClass.desc=A IdClass precisa ser p\u00fablica
PublicClass.display.name=Verificar n\u00edvel de acesso para IdClass
QueriesProperlyDefined.display.name=Verificar localiza\u00e7\u00e3o da consulta nomeada
SerializableClass.desc=Se uma inst\u00e2ncia de entidade for especificada por um valor como um objeto desanexado (por exemplo, uma interface remota), a classe da entidade dever\u00e1 implementar a interface Serializ\u00e1vel.
SerializableClass.display.name=Entidade implementa verifica\u00e7\u00e3o Serializ\u00e1vel
TopLevelClass.desc=As classes JPA n\u00e3o devem ser classes internas
TopLevelClass.display.name=Verificar se a classe jpa \u00e9 uma classe de n\u00edvel superior
UniqueEntityName.desc=Os nomes de entidades n\u00e3o devem ser iguais em uma unidade de persist\u00eancia
UniqueEntityName.display.name=Verificar se o nome da entidade \u00e9 exclusivo
ValidAttributes.desc=Esta valida\u00e7\u00e3o abrange diversas quest\u00f5es, como nome de coluna v\u00e1lida, modificadores de atributos v\u00e1lidos, tipo b\u00e1sico v\u00e1lido, relacionamentos etc.
ValidAttributes.display.name=Verificar atributos de classes jpa
ValidPrimaryTableName.desc=O nome da tabela de entidades deve ser um identificador QL v\u00e1lido
ValidPrimaryTableName.display.name=Verifica\u00e7\u00e3o do nome da tabela de entidades

